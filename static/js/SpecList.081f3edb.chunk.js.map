{"version":3,"sources":["interface/SpecListItem/SpecListItem.tsx","interface/SpecList/SpecList.tsx"],"names":["SpecListItem","spec","exampleReport","contributors","patchCompatibility","className","replace","Component","builtinfo","length","id","render","key","href","title","undefined","src","specName","alt","map","contributor","nickname","link","SpecListing","DocumentTitle","AVAILABLE_CONFIGS","sort","a","b","config"],"mappings":"kPAuDeA,EAjDM,SAAC,GAKP,IAJbC,EAIY,EAJZA,KACAC,EAGY,EAHZA,cACAC,EAEY,EAFZA,aACAC,EACY,EADZA,mBAEMC,EAAYJ,EAAKI,UAAUC,QAAQ,KAAM,IACzCC,EAAYL,EAAgB,IAAM,MAClCM,EACoB,IAAxBL,EAAaM,OAAe,kBAAC,QAAD,CAAOC,GAAG,oCAAV,YAA4D,gCAAiB,kBAAC,QAAD,CAAOA,GAAG,sCAAsCC,OAAO,QAAvD,YAA+D,gCAE1K,OACE,kBAACJ,EAAD,CACEK,IAAKX,EAAKS,GACVG,KAAMX,EACNY,MAAOZ,EAAgB,2BAAwBa,EAC/CV,UAAU,aAEV,yBAAKA,UAAU,QACb,gCACE,yBACEW,IAAG,iBAAYX,EAAZ,YAAyBJ,EAAKgB,SAASX,QAAQ,IAAK,IAApD,QACHY,IAAG,UAAKjB,EAAKgB,SAAV,YAAsBhB,EAAKI,eAIpC,yBAAKA,UAAU,eACb,wBAAIA,UAAWA,GACZJ,EAAKgB,SADR,IACmBhB,EAAKI,WAExB,kBAAC,QAAD,CAAOK,GAAG,4CAAV,QAA0EN,wBAC1E,6BACCI,EACAL,EAAagB,KAAI,SAAAC,GAAW,OAC3B,oCACE,kBAAC,IAAD,eACER,IAAKQ,EAAYC,SACjBC,MAAM,GACFF,IAEL,QAGL,gCCbOG,EA1BK,kBAClB,oCACE,kBAACC,EAAA,EAAD,CAAeV,MAAM,oBAErB,6BACE,kBAAC,QAAD,CAAOJ,GAAG,2BAA2BC,OAAO,QAE9C,kBAAC,QAAD,CAAOD,GAAG,iCAAiCC,OAAO,UAIlD,yBAAKN,UAAU,gBACZoB,IAAkBC,MAAK,SAACC,EAAGC,GAC1B,OAAID,EAAE1B,KAAKI,UAAYuB,EAAE3B,KAAKI,WACpB,EACCsB,EAAE1B,KAAKI,UAAYuB,EAAE3B,KAAKI,UAC5B,EAEFsB,EAAE1B,KAAKS,GAAKkB,EAAE3B,KAAKS,MACzBS,KAAI,SAAAU,GAAM,OACX,kBAAC,EAAD,eAAcjB,IAAKiB,EAAO5B,KAAKS,IAAQmB","file":"static/js/SpecList.081f3edb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Contributor from 'interface/ContributorButton';\r\nimport Config from 'parser/Config';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nconst SpecListItem = ({\r\n  spec,\r\n  exampleReport,\r\n  contributors,\r\n  patchCompatibility,\r\n}: Config) => {\r\n  const className = spec.className.replace(/ /g, '');\r\n  const Component = exampleReport ? 'a' : 'div';\r\n  const builtinfo =\r\n    contributors.length !== 0 ? <Trans id=\"interface.specListItem.maintainer\">Maintained by:<br /></Trans> : <Trans id=\"interface.specListItem.unmaintained\" render=\"small\"><em>CURRENTLY UNMAINTAINED</em></Trans>;\r\n\r\n  return (\r\n    <Component\r\n      key={spec.id}\r\n      href={exampleReport}\r\n      title={exampleReport ? 'Open example report' : undefined}\r\n      className=\"spec-card\"\r\n    >\r\n      <div className=\"icon\">\r\n        <figure>\r\n          <img\r\n            src={`/specs/${className}-${spec.specName.replace(' ', '')}.jpg`}\r\n            alt={`${spec.specName} ${spec.className}`}\r\n          />\r\n        </figure>\r\n      </div>\r\n      <div className=\"description\">\r\n        <h4 className={className}>\r\n          {spec.specName} {spec.className}\r\n        </h4>\r\n        <Trans id=\"interface.specListItem.patchCompatability\">Accurate for patch {patchCompatibility}</Trans>\r\n        <br />\r\n        {builtinfo}\r\n        {contributors.map(contributor =>\r\n          <>\r\n            <Contributor\r\n              key={contributor.nickname}\r\n              link={false}\r\n              {...contributor}\r\n            />\r\n            {' '}\r\n          </>\r\n        )}\r\n        <br />\r\n      </div>\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport default SpecListItem;\r\n","import React from 'react';\r\n\r\nimport DocumentTitle from 'interface/DocumentTitle';\r\nimport AVAILABLE_CONFIGS from 'parser';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport './SpecList.css';\r\n\r\nimport SpecListItem from '../SpecListItem';\r\n\r\nconst SpecListing = () => (\r\n  <>\r\n    <DocumentTitle title=\"Specializations\" />\r\n\r\n    <div>\r\n      <Trans id=\"interface.specList.specs\" render=\"h1\">Specializations</Trans>\r\n    </div>\r\n    <Trans id=\"interface.specList.specs.label\" render=\"small\">\r\n      Click any specialization to view an example report for that spec.\r\n    </Trans>\r\n\r\n    <div className=\"spec-listing\">\r\n      {AVAILABLE_CONFIGS.sort((a, b) => {\r\n        if (a.spec.className < b.spec.className) {\r\n          return -1;\r\n        } else if (a.spec.className > b.spec.className) {\r\n          return 1;\r\n        }\r\n        return a.spec.id - b.spec.id;\r\n      }).map(config => (\r\n        <SpecListItem key={config.spec.id} {...config} />\r\n      ))}\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default SpecListing;\r\n"],"sourceRoot":""}