{"version":3,"sources":["parser/priest/shadow/modules/core/AbilityTracker.tsx","parser/priest/shadow/modules/core/Insanity.tsx","parser/priest/shadow/modules/core/Channeling.tsx","parser/priest/shadow/modules/core/GlobalCooldown.tsx","parser/priest/shadow/modules/Abilities.tsx","parser/priest/shadow/modules/features/AlwaysBeCasting.tsx","parser/priest/shadow/modules/checklist/Component.tsx","parser/priest/shadow/modules/spells/ShadowWordPain.tsx","parser/priest/shadow/modules/spells/VampiricTouch.tsx","parser/priest/shadow/modules/checklist/Module.tsx","parser/priest/shadow/modules/features/SkippableCasts.tsx","common/PETS.js","parser/priest/shadow/modules/spells/Shadowfiend.tsx","parser/priest/shadow/modules/core/Pet.tsx","parser/priest/shadow/modules/spells/Dispersion.tsx","parser/priest/shadow/constants.ts","parser/priest/shadow/modules/spells/VampiricEmbrace.tsx","parser/priest/shadow/modules/talents/TwistOfFate.tsx","parser/priest/shadow/modules/talents/VoidTorrent.tsx","parser/priest/shadow/modules/talents/ShadowCrash.tsx","parser/priest/shadow/modules/talents/AuspiciousSpirits.tsx","parser/priest/shadow/modules/features/Buffs.tsx","parser/priest/shadow/CombatLogParser.tsx","interface/statistics/components/BoringSpellValueText/index.tsx","parser/shared/modules/features/Checklist/helpers/calculateMedian.js","parser/shared/modules/features/Checklist/helpers/average.js","parser/shared/modules/features/Checklist/helpers/harmonic.js","parser/shared/modules/features/Checklist/Rule.tsx","parser/shared/modules/features/Checklist/Requirement.tsx","parser/shared/modules/features/Checklist/helpers/performanceForThresholds.js","parser/shared/modules/features/Checklist/index.js","parser/shared/modules/features/Checklist/PreparationRule.js","parser/shared/modules/features/Checklist/GenericCastEfficiencyRequirement.js","common/colorForPerformance.ts","../node_modules/react-animate-height/lib/AnimateHeight.js","interface/icons/Dropdown.js","interface/common/Expandable.tsx","parser/core/calculateMaxCasts.ts","parser/priest/shared/normalizers/ShadowfiendNormalizer.js"],"names":["AbilityTracker","spellId","abilityInfo","SPELLS","SHADOWFIEND_WITH_GLYPH_OF_THE_SHA","id","SHADOWFIEND","CoreAbilityTracker","Insanity","options","_insanityEvents","addEventListener","Events","energize","by","SELECTED_PLAYER","onInsanityEnergize","event","resourceChangeType","RESOURCE_TYPES","INSANITY","this","Analyzer","CHANNEL_ABILITIES","MIND_FLAY","MIND_SEAR","VOID_TORRENT_TALENT","Channeling","eventHistory","applydebuff","spell","onApplyDebuff","cast","onCast","ability","guid","beginChannel","some","isChannelingSpell","MIND_BLAST","last","begincast","endChannel","CoreChanneling","dependencies","EventHistory","GlobalCooldown","CoreGlobalCooldown","Abilities","combatant","selectedCombatant","VOID_BOLT","category","SPELL_CATEGORIES","ROTATIONAL","cooldown","haste","gcd","base","castEfficiency","suggestion","recommendedEfficiency","maxCasts","calculateMaxCasts","getBuffUptime","VOIDFORM_BUFF","charges","hasBuff","ROTATIONAL_AOE","SEARING_NIGHTMARE_TALENT","enabled","hasTalent","SHADOW_WORD_DEATH","SHADOW_CRASH_TALENT","SHADOW_WORD_PAIN","DEVOURING_PLAGUE","VAMPIRIC_TOUCH","DAMNATION_TALENT","VOID_ERUPTION","COOLDOWNS","MINDBENDER_TALENT_SHADOW","VOIDLING","POWER_INFUSION","SURRENDER_TO_MADNESS_TALENT","DISPERSION","isDefensive","buffSpellId","UTILITY","SILENCE","LAST_WORD_TALENT","VAMPIRIC_EMBRACE","SANLAYN_TALENT","POWER_WORD_SHIELD","SHADOW_MEND","DESPERATE_PRAYER","LEAP_OF_FAITH","FADE","POWER_WORD_FORTITUDE","LEVITATE","MIND_SOOTHE","MASS_DISPEL","DISPEL_MAGIC","MIND_CONTROL","SHACKLE_UNDEAD","PSYCHIC_SCREAM","MIND_BOMB_TALENT","PSYCHIC_HORROR_TALENT","MIND_VISION","PURIFY_DISEASE","SHADOWFORM","RESURRECTION","FLESHCRAFT","DEFENSIVE","hasCovenant","COVENANTS","NECROLORD","UNHOLY_NOVA","CoreAbilities","AlwaysBeCasting","position","STATISTIC_ORDER","CORE","when","suggestionThresholds","addSuggestion","suggest","actual","recommended","icon","i18n","_","formatPercentage","downtimePercentage","isGreaterThan","minor","average","major","style","ThresholdStyle","PERCENTAGE","CoreAlwaysBeCasting","ShadowPriestChecklist","thresholds","DotUptime","props","Requirement","name","Fragment","SpellLink","AbilityRequirement","GenericCastEfficiencyRequirement","getCastEfficiencyForSpellId","Rule","description","VOIDFORM","shadowWordPain","vampiricTouch","downtime","PreparationRule","ShadowWordPain","lastCastTimestamp","castedShadowWordPains","appliedShadowWordPains","refreshedShadowWordPains","enemies","Statistic","size","BoringSpellValueText","uptime","owner","fightDuration","isLessThan","Enemies","VampiricTouch","Checklist","combatants","alwaysBeCasting","preparationRuleAnalyzer","Component","selected","BaseChecklist","Combatants","CastEfficiency","PreparationRuleAnalyzer","SkippableCasts","_castsSinceLastVoidBolt","globalCooldown","_skippableCastsBetweenVoidbolts","current","isOnGlobalCooldown","skippableCasts","skippableCastsBetweenVoidbolts","tooltip","active","Haste","indexById","WILDIMP_ON_DREADSTALKER","baseDuration","GRIMOIRE_FELGUARD","WILDIMP","DREADSTALKER","DOOMGUARD","INFERNAL","DARKGLARE","SHADOWFIEND_SHA_GLYPH","MINDBENDER","VOID_TENDRIL","SPIRIT_LINK_TOTEM","Shadowfiend","_pet","PETS","_sourceId","_pets","_damageDone","report","friendlyPets","filter","pet","petOwner","player","damage","SELECTED_PLAYER_PET","onPetDamage","undefined","fetchPet","sourceID","amount","fetchPets","find","Disperion","_previousDispersionCast","dispersionUptime","maxDispersionTime","dispersedTime","_dispersions","applybuff","onBuffApplied","removebuff","onBuffRemoved","timestamp","start","end","Math","round","Object","keys","map","key","floor","VampiricEmbrace","abilityTracker","formatNumber","healingDone","casts","ItemHealingDone","getAbility","VAMPIRIC_EMBRACE_HEAL","healingEffective","DamageTracker","TwistOfFate","TWIST_OF_FATE_TALENT_SHADOW","onDamage","TWIST_OF_FATE_BUFF","raw","absorbed","STATISTIC_CATEGORY","TALENTS","ItemDamageDone","formatSeconds","seconds","VoidTorrent","_previousVoidTorrentCast","_voidTorrents","onVoidTorrentCast","onVoidTorrentRemoved","onVoidTorrentDamage","timeSpentChanneling","wastedTime","VOID_TORRENT_MAX_TIME","totalWasted","voidTorrents","reduce","total","c","SECONDS","ShadowCrash","totalTargetsHit","SHADOW_CRASH_TALENT_DAMAGE","onShadowCrashDamage","averageTargetsHit","AuspiciousSpirits","insanity","AUSPICIOUS_SPIRITS_TALENT","SHADOWY_APPARITION_DAMAGE","onApparitionDamage","Buffs","triggeredBySpellId","timelineHighlight","DARK_THOUGHT_BUFF","DARK_THOUGHTS","UNFURLING_DARKNESS_BUFF","UNFURLING_DARKNESS_TALENT","BLOODLUST_BUFFS","item","Number","CoreBuffs","CombatLogParser","MainCombatLogParser","specModules","channeling","abilities","buffs","checklist","shadowfiend","dispersion","Dispersion","vampiricEmbrace","twistOfFate","voidTorrent","shadowCrash","auspiciousSpirits","shadowfiendNormalizer","ShadowfiendNormalizer","children","className","calculateMedian","values","arr","sort","a","b","half","length","p","harmonic","cum","val","PERFORMANCE_METHOD","RuleContext","React","createContext","value","useState","requirementPerformances","performance","passed","expanded","state","setState","calculateRulePerformance","useCallback","DEFAULT","min","MEDIAN","AVERAGE","LOWEST","FIRST","HARMONIC","Error","requirements","Array","isArray","child","isValidElement","Provider","prevState","performanceMethod","element","inverseExpanded","header","width","backgroundColor","colorForPerformance","Dropdown","Information","setPerformance","NUMBER","THOUSANDS","formatThousands","DECIMAL","toFixed","BOOLEAN","valueTooltip","prefix","suffix","max","thresholdsN","formatThresholdsActual","marginLeft","Tooltip","content","minWidth","marginRight","transition","performanceForGreaterThanThresholds","performanceForLessThanThresholds","isEqual","performanceForThresholds","PureComponent","Consumer","href","potionsUsed","bestPotionUsed","itemsEnchanted","itemsBestEnchanted","weaponsEnhanced","bestWeaponEnhancements","higherFlaskPresent","flaskPresent","higherFoodPresent","foodPresent","renderEnchantRequirements","renderWeaponEnhancementRequirements","renderPotionRequirements","renderFlaskRequirements","renderFoodRequirements","others","captureException","isMaxCasts","efficiency","gotMaxCasts","averageIssueEfficiency","majorIssueEfficiency","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","_extends","assign","target","i","arguments","source","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","require","_propTypes2","_classnames2","__esModule","default","_defineProperty","ANIMATION_STATE_CLASSES","animating","animatingUp","animatingDown","animatingToHeightZero","animatingToHeightAuto","animatingToHeightSpecific","static","staticHeightZero","staticHeightAuto","staticHeightSpecific","PROPS_TO_OMIT","omit","_len","_key","res","objectKeys","indexOf","cancelAnimationFrames","requestAnimationFrameIDs","forEach","cancelAnimationFrame","isNumber","n","isNaN","parseFloat","isFinite","isPercentage","height","search","substr","runCallback","callback","params","AnimateHeight","_React$Component","instance","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","animationFrameIDs","overflow","animationStateClasses","getStaticStateClasses","shouldUseTransitions","subClass","superClass","create","setPrototypeOf","_inherits","contentElement","hideContent","prevProps","_this2","_props","delay","duration","onAnimationEnd","onAnimationStart","_cx","showContent","contentHeight","offsetHeight","totalDuration","newHeight","timeoutState","isCurrentHeightAuto","timeoutAnimationStateClasses","clearTimeout","timeoutID","animationClassesTimeoutID","requestAnimationFrame","startAnimationHelper","setTimeout","display","_cx2","_cx3","_this3","_props2","animateOpacity","applyInlineTransitions","contentClassName","easing","_state","componentStyle","WebkitTransition","contentStyle","opacity","componentClasses","ariaHidden","createElement","apply","concat","ref","el","propTypes","bool","object","any","isRequired","string","number","propName","componentName","func","defaultProps","Icon","other","xmlns","viewBox","d","Expandable","setExpanded","Element","onClick","prevExpanded","ControlledExpandable","events","eventIndex","type","EventType","Cast","LIGHTSPAWN","oldGuid","__modified","EventsNormalizer"],"mappings":"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","file":"static/js/ShadowPriest.a216b06e.chunk.js","sourcesContent":["import SPELLS from 'common/SPELLS';\r\n\r\nimport CoreAbilityTracker from 'parser/shared/modules/AbilityTracker';\r\n\r\nclass AbilityTracker extends CoreAbilityTracker {\r\n  getAbility(spellId: number, abilityInfo = null) {\r\n    if (spellId === SPELLS.SHADOWFIEND_WITH_GLYPH_OF_THE_SHA.id) {\r\n      return super.getAbility(SPELLS.SHADOWFIEND.id, abilityInfo);\r\n    }\r\n    return super.getAbility(spellId, abilityInfo);\r\n  }\r\n}\r\n\r\nexport default AbilityTracker;\r\n","import Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport RESOURCE_TYPES from 'game/RESOURCE_TYPES';\r\nimport Events, { EnergizeEvent } from 'parser/core/Events';\r\n\r\nclass Insanity extends Analyzer {\r\n  _insanityEvents: EnergizeEvent[] = [];\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.addEventListener(Events.energize.by(SELECTED_PLAYER), this.onInsanityEnergize);\r\n  }\r\n\r\n  get events() {\r\n    return this._insanityEvents;\r\n  }\r\n\r\n  onInsanityEnergize(event: EnergizeEvent) {\r\n    if (event.resourceChangeType === RESOURCE_TYPES.INSANITY.id) {\r\n      this._insanityEvents = [\r\n        ...this._insanityEvents,\r\n        event,\r\n      ];\r\n    }\r\n  }\r\n}\r\n\r\nexport default Insanity;\r\n","import SPELLS from 'common/SPELLS';\r\nimport CoreChanneling from 'parser/shared/modules/Channeling';\r\nimport Events, { ApplyDebuffEvent, CastEvent } from 'parser/core/Events';\r\nimport Ability from 'parser/core/modules/Ability';\r\nimport { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport EventHistory from 'parser/shared/modules/EventHistory';\r\n\r\n/**\r\n * Mind Flay, Mind Sear and Void Torrent don't reveal in the combatlog when channeling begins and ends, this fabricates the required events so that ABC can handle it properly.\r\n * It also accounts for Dark Thought procs which allow Mind Blast to be cast instantly while channeling Mind Flay or Mind Sear\r\n */\r\nconst CHANNEL_ABILITIES = [ // This used where checks are done for all channeled spriest abilities\r\n  SPELLS.MIND_FLAY,\r\n  SPELLS.MIND_SEAR,\r\n  SPELLS.VOID_TORRENT_TALENT,\r\n];\r\n\r\nclass Channeling extends CoreChanneling {\r\n  static dependencies = {\r\n    ...CoreChanneling.dependencies,\r\n    eventHistory: EventHistory,\r\n  };\r\n  protected eventHistory!: EventHistory;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.addEventListener(Events.applydebuff.by(SELECTED_PLAYER).spell(CHANNEL_ABILITIES), this.onApplyDebuff);\r\n    this.addEventListener(Events.cast.by(SELECTED_PLAYER).spell(CHANNEL_ABILITIES), this.onCast);\r\n  }\r\n\r\n  onCast(event: CastEvent) {\r\n    if (event.ability.guid === SPELLS.VOID_TORRENT_TALENT.id) {\r\n      this.beginChannel(event);\r\n      return;\r\n    }\r\n    if (event.ability.guid === SPELLS.MIND_FLAY.id || event.ability.guid === SPELLS.MIND_SEAR.id) {\r\n      // Completely ignore this with regards to channeling since we use `applydebuff` to track channel start, and this cast-event can occur as ticks too\r\n      return;\r\n    }\r\n    super.onCast(event);\r\n  }\r\n\r\n  // We can't use the `cast`-event for Mind Flay/Sear as this event can occur in the log during channel as ticks too\r\n  onApplyDebuff(event: ApplyDebuffEvent) {\r\n    if (event.ability.guid === SPELLS.MIND_FLAY.id || event.ability.guid === SPELLS.MIND_SEAR.id) {\r\n      this.beginChannel(event);\r\n    }\r\n  }\r\n\r\n  cancelChannel(event: CastEvent, ability: Ability) {\r\n    if (CHANNEL_ABILITIES.some(ability => this.isChannelingSpell(ability.id))) {\r\n      if (event.ability.guid === SPELLS.MIND_BLAST.id && this.eventHistory.last(1, 100, Events.begincast.by(SELECTED_PLAYER).spell(SPELLS.MIND_BLAST))) { // Check if they're casting mind blast and it was instant\r\n        // Dark thought proc used\r\n        return;\r\n      }\r\n\r\n      // If a channeling spell is \"canceled\" it was actually just ended, so if it looks canceled then instead just mark it as ended\r\n      this.endChannel(event);\r\n    } else {\r\n      super.cancelChannel(event, ability);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Channeling;\r\n","import SPELLS from 'common/SPELLS';\r\nimport CoreGlobalCooldown from 'parser/shared/modules/GlobalCooldown';\r\nimport { CastEvent } from 'parser/core/Events';\r\n\r\n/**\r\n * Mind Flay has ticks marked as \"cast\", and we fix its channel in Channeling. This also fixes its GCD.\r\n */\r\nclass GlobalCooldown extends CoreGlobalCooldown {\r\n  onCast(event: CastEvent) {\r\n    if (event.ability.guid === SPELLS.MIND_FLAY.id || event.ability.guid === SPELLS.MIND_SEAR.id) {\r\n      // This GCD gets handled by the `beginchannel` event\r\n      return;\r\n    }\r\n    super.onCast(event);\r\n  }\r\n}\r\n\r\nexport default GlobalCooldown;\r\n","import SPELLS from 'common/SPELLS';\r\n\r\nimport CoreAbilities from 'parser/core/modules/Abilities';\r\nimport calculateMaxCasts from 'parser/core/calculateMaxCasts';\r\nimport COVENANTS from 'game/shadowlands/COVENANTS';\r\n\r\nclass Abilities extends CoreAbilities {\r\n  spellbook() {\r\n    const combatant = this.selectedCombatant;\r\n    return [\r\n      {\r\n        spell: SPELLS.VOID_BOLT,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        cooldown: (haste: number) => 4.5 / (1 + haste),\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        castEfficiency: {\r\n          suggestion: true,\r\n          recommendedEfficiency: 0.85,\r\n          maxCasts: (cooldown: number) => calculateMaxCasts(cooldown, combatant.getBuffUptime(SPELLS.VOIDFORM_BUFF.id)),\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.MIND_BLAST,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        cooldown: (haste: number) => 7.5 / (1 + haste),\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        charges: combatant.hasBuff(SPELLS.VOIDFORM_BUFF.id) ? 2 : 1,\r\n        castEfficiency: {\r\n          suggestion: true,\r\n          recommendedEfficiency: 0.85,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.MIND_FLAY,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.MIND_SEAR,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL_AOE,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.SEARING_NIGHTMARE_TALENT,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL_AOE,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        enabled: combatant.hasTalent(SPELLS.SEARING_NIGHTMARE_TALENT.id),\r\n      },\r\n      {\r\n        spell: SPELLS.SHADOW_WORD_DEATH,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        cooldown: (haste: number) => 20 / (1 + haste),\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.SHADOW_CRASH_TALENT,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        charges: 3,\r\n        cooldown: 60,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        castEfficiency: {\r\n          suggestion: true,\r\n          recommendedEfficiency: 0.8,\r\n        },\r\n        enabled: combatant.hasTalent(SPELLS.SHADOW_CRASH_TALENT.id),\r\n      },\r\n      {\r\n        spell: SPELLS.SHADOW_WORD_PAIN,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.DEVOURING_PLAGUE,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.VAMPIRIC_TOUCH,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.DAMNATION_TALENT,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        cooldown: 45,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        enabled: combatant.hasTalent(SPELLS.DAMNATION_TALENT.id),\r\n      },\r\n\r\n      // Cooldowns\r\n      {\r\n        spell: SPELLS.VOID_ERUPTION,\r\n        category: Abilities.SPELL_CATEGORIES.COOLDOWNS,\r\n        cooldown: 90,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        castEfficiency: {\r\n          suggestion: true,\r\n          recommendedEfficiency: 0.95,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.VOID_TORRENT_TALENT,\r\n        category: Abilities.SPELL_CATEGORIES.COOLDOWNS,\r\n        cooldown: 45,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        castEfficiency: {\r\n          suggestion: true,\r\n          recommendedEfficiency: 0.75,\r\n        },\r\n        enabled: combatant.hasTalent(SPELLS.VOID_TORRENT_TALENT.id),\r\n      },\r\n      {\r\n        spell: SPELLS.MINDBENDER_TALENT_SHADOW,\r\n        category: Abilities.SPELL_CATEGORIES.COOLDOWNS,\r\n        cooldown: 60,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        enabled: combatant.hasTalent(SPELLS.MINDBENDER_TALENT_SHADOW.id),\r\n        castEfficiency: {\r\n          suggestion: true,\r\n          recommendedEfficiency: 0.9,\r\n        },\r\n      },\r\n      {\r\n        spell: [SPELLS.SHADOWFIEND, SPELLS.SHADOWFIEND_WITH_GLYPH_OF_THE_SHA, SPELLS.VOIDLING],\r\n        category: Abilities.SPELL_CATEGORIES.COOLDOWNS,\r\n        cooldown: 180,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        enabled: !combatant.hasTalent(SPELLS.MINDBENDER_TALENT_SHADOW.id),\r\n        castEfficiency: {\r\n          suggestion: true,\r\n          recommendedEfficiency: 0.8,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.POWER_INFUSION,\r\n        category: Abilities.SPELL_CATEGORIES.COOLDOWNS,\r\n        cooldown: 120,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n\r\n      {\r\n        spell: SPELLS.SURRENDER_TO_MADNESS_TALENT,\r\n        category: Abilities.SPELL_CATEGORIES.COOLDOWNS,\r\n        cooldown: 90,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        enabled: combatant.hasTalent(SPELLS.SURRENDER_TO_MADNESS_TALENT.id),\r\n        castEfficiency: {\r\n          suggestion: true,\r\n          recommendedEfficiency: 0.85,\r\n        },\r\n      },\r\n\r\n      // Utility\r\n      {\r\n        spell: SPELLS.DISPERSION,\r\n        isDefensive: true,\r\n        buffSpellId: SPELLS.DISPERSION.id,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 120,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.SILENCE,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 45 - (combatant.hasTalent(SPELLS.LAST_WORD_TALENT.id) ? 15 : 0),\r\n        gcd: null,\r\n      },\r\n      {\r\n        spell: SPELLS.VAMPIRIC_EMBRACE,\r\n        buffSpellId: SPELLS.VAMPIRIC_EMBRACE.id,\r\n        isDefensive: true,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 120 - (combatant.hasTalent(SPELLS.SANLAYN_TALENT.id) ? 45 : 0),\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.POWER_WORD_SHIELD,\r\n        isDefensive: true,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: (haste: any) => 6 / (1 + haste),\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.SHADOW_MEND,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.DESPERATE_PRAYER,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 90,\r\n        gcd: null,\r\n      },\r\n      {\r\n        spell: SPELLS.LEAP_OF_FAITH,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 90,\r\n        gcd: null,\r\n      },\r\n      {\r\n        spell: SPELLS.FADE,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 30,\r\n        gcd: null,\r\n      },\r\n      {\r\n        spell: SPELLS.POWER_WORD_FORTITUDE,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.LEVITATE,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.MIND_SOOTHE,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.MASS_DISPEL,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 45,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.DISPEL_MAGIC,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.MIND_CONTROL,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.SHACKLE_UNDEAD,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.PSYCHIC_SCREAM,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 60,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        enabled: !combatant.hasTalent(SPELLS.MIND_BOMB_TALENT.id),\r\n      },\r\n      {\r\n        spell: SPELLS.MIND_BOMB_TALENT,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 30,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        enabled: combatant.hasTalent(SPELLS.MIND_BOMB_TALENT.id),\r\n      },\r\n      {\r\n        spell: SPELLS.PSYCHIC_HORROR_TALENT,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 45,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n        enabled: combatant.hasTalent(SPELLS.PSYCHIC_HORROR_TALENT.id),\r\n      },\r\n      {\r\n        spell: SPELLS.MIND_VISION,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.PURIFY_DISEASE,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        cooldown: 8,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.SHADOWFORM,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.RESURRECTION,\r\n        category: Abilities.SPELL_CATEGORIES.UTILITY,\r\n        gcd: {\r\n          base: 1500,\r\n        },\r\n      },\r\n      {\r\n        spell: SPELLS.FLESHCRAFT,\r\n        category: Abilities.SPELL_CATEGORIES.DEFENSIVE,\r\n        cooldown: 120,\r\n        enabled: combatant.hasCovenant(COVENANTS.NECROLORD.id),\r\n      },\r\n      {\r\n        spell: SPELLS.UNHOLY_NOVA,\r\n        category: Abilities.SPELL_CATEGORIES.ROTATIONAL,\r\n        cooldown: 100,\r\n        enabled: combatant.hasCovenant(COVENANTS.NECROLORD.id),\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default Abilities;\r\n","import { formatPercentage } from 'common/format';\r\nimport { STATISTIC_ORDER } from 'interface/others/StatisticBox';\r\nimport CoreAlwaysBeCasting from 'parser/shared/modules/AlwaysBeCasting';\r\nimport { ThresholdStyle, When } from 'parser/core/ParseResults';\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\n\r\nclass AlwaysBeCasting extends CoreAlwaysBeCasting {\r\n  position = STATISTIC_ORDER.CORE(6);\r\n\r\n  get suggestionThresholds() {\r\n    return {\r\n      actual: this.downtimePercentage,\r\n      isGreaterThan: {\r\n        minor: 0.1,\r\n        average: 0.15,\r\n        major: 0.2,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n  suggestions(when: When) {\r\n    when(this.suggestionThresholds)\r\n      .addSuggestion((suggest, actual, recommended) => suggest('Your downtime can be improved. Try to Always Be Casting (ABC), try to reduce the delay between casting spells. Even if you have to move, try casting something instant - maybe refresh your dots.')\r\n        .icon('spell_mage_altertime')\r\n        .actual(i18n._(t('priest.shadow.suggestions.alwaysBeCasting.downtime')`${formatPercentage(actual)}% downtime`))\r\n        .recommended(`<${formatPercentage(recommended)}% is recommended`));\r\n  }\r\n}\r\n\r\nexport default AlwaysBeCasting;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport SpellLink from 'common/SpellLink';\r\nimport Checklist from 'parser/shared/modules/features/Checklist';\r\nimport Requirement from 'parser/shared/modules/features/Checklist/Requirement';\r\nimport Rule from 'parser/shared/modules/features/Checklist/Rule';\r\nimport PreparationRule from 'parser/shared/modules/features/Checklist/PreparationRule';\r\nimport GenericCastEfficiencyRequirement from 'parser/shared/modules/features/Checklist/GenericCastEfficiencyRequirement';\r\n\r\nconst ShadowPriestChecklist = ({ combatant, castEfficiency, thresholds }: any) => {\r\n  const DotUptime: any = (props: any) => (\r\n    <Requirement\r\n      name={(\r\n        <React.Fragment>\r\n          <SpellLink id={props.id} icon /> uptime\r\n        </React.Fragment>\r\n      )}\r\n      thresholds={props.thresholds}\r\n    />\r\n  );\r\n  DotUptime.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const AbilityRequirement = (props: any) => (\r\n    <GenericCastEfficiencyRequirement\r\n      castEfficiency={castEfficiency.getCastEfficiencyForSpellId(props.spell)}\r\n      {...props}\r\n    />\r\n  );\r\n  AbilityRequirement.propTypes = {\r\n    spell: PropTypes.number.isRequired,\r\n  };\r\n\r\n  return (\r\n    <Checklist>\r\n      <Rule\r\n        name=\"Maintain your DoTs on the boss\"\r\n        description={(\r\n          <React.Fragment>\r\n            When not in <SpellLink id={SPELLS.VOIDFORM.id} />, it's important to keep your DoTs up on the boss. While in <SpellLink id={SPELLS.VOIDFORM.id} />, your <SpellLink id={SPELLS.VAMPIRIC_TOUCH.id} />, <SpellLink id={SPELLS.DEVOURING_PLAGUE.id} />, and <SpellLink id={SPELLS.SHADOW_WORD_PAIN.id} /> durations are extended when the target or a nearby target gets hit by <SpellLink id={SPELLS.VOID_BOLT.id} />.\r\n          </React.Fragment>\r\n        )}\r\n      >\r\n        <DotUptime id={SPELLS.SHADOW_WORD_PAIN.id} thresholds={thresholds.shadowWordPain} />\r\n        <DotUptime id={SPELLS.VAMPIRIC_TOUCH.id} thresholds={thresholds.vampiricTouch} />\r\n\r\n      </Rule>\r\n\r\n      <Rule\r\n        name=\"Use core spells as often as possible\"\r\n        description={(\r\n          <React.Fragment>\r\n            Spells such as <SpellLink id={SPELLS.VOID_BOLT.id} /> or <SpellLink id={SPELLS.MIND_BLAST.id} /> are your most important spells. Try to cast them as much as possible.\r\n          </React.Fragment>\r\n        )}\r\n      >\r\n        <AbilityRequirement spell={SPELLS.VOID_BOLT.id} />\r\n        <AbilityRequirement spell={SPELLS.MIND_BLAST.id} />\r\n\r\n      </Rule>\r\n\r\n      <Rule\r\n        name=\"Use cooldowns effectively\"\r\n        description={(\r\n          <React.Fragment>\r\n            Cooldowns are an important part of your rotation, you should be using them as often as possible.\r\n          </React.Fragment>\r\n        )}\r\n      >\r\n        <AbilityRequirement spell={SPELLS.VOID_ERUPTION.id} />\r\n\r\n        {combatant.hasTalent(SPELLS.SURRENDER_TO_MADNESS_TALENT.id) && (\r\n          <AbilityRequirement spell={SPELLS.SURRENDER_TO_MADNESS_TALENT.id} />\r\n        )}\r\n\r\n        {combatant.hasTalent(SPELLS.MINDBENDER_TALENT_SHADOW.id) ?\r\n          <AbilityRequirement spell={SPELLS.MINDBENDER_TALENT_SHADOW.id} /> :\r\n          <AbilityRequirement spell={SPELLS.SHADOWFIEND.id} />\r\n        }\r\n\r\n        {combatant.hasTalent(SPELLS.SHADOW_CRASH_TALENT.id) && (\r\n          <AbilityRequirement spell={SPELLS.SHADOW_CRASH_TALENT.id} />\r\n        )}\r\n      </Rule>\r\n\r\n      <Rule\r\n        name=\"Minimize casting downtime\"\r\n        description={(\r\n          <React.Fragment>\r\n            Try to minimize your time not casting. Use your core spells on cooldown and fillers when they are not available. If you know you have an upcoming position requirement, stutterstep with each <SpellLink id={SPELLS.VOID_BOLT.id} /> or <SpellLink id={SPELLS.DEVOURING_PLAGUE.id} /> cast towards that location. During high movement you can use <SpellLink id={SPELLS.SHADOW_WORD_PAIN.id} /> as a filler.\r\n          </React.Fragment>\r\n        )}\r\n      >\r\n        <Requirement name=\"Downtime\" thresholds={thresholds.downtime} />\r\n      </Rule>\r\n\r\n      <PreparationRule thresholds={thresholds} />\r\n    </Checklist>\r\n  );\r\n};\r\n\r\nShadowPriestChecklist.propTypes = {\r\n  castEfficiency: PropTypes.object.isRequired,\r\n  combatant: PropTypes.shape({\r\n    hasTalent: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  thresholds: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ShadowPriestChecklist;\r\n","import React from 'react';\r\n\r\nimport Analyzer from 'parser/core/Analyzer';\r\nimport { ThresholdStyle, When } from 'parser/core/ParseResults';\r\nimport Enemies from 'parser/shared/modules/Enemies';\r\nimport SPELLS from 'common/SPELLS';\r\nimport SpellLink from 'common/SpellLink';\r\nimport { formatPercentage } from 'common/format';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_ORDER from 'interface/others/STATISTIC_ORDER';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\n\r\n/*\r\n  Shadow word pain can be created by:\r\n\r\n  Hard casting\r\n  Misery\r\n  Dark Void\r\n\r\n  Shadow Word pain can be refreshed by:\r\n\r\n  Hard casting\r\n  Misery\r\n  Dark Void\r\n  Void Bolt\r\n */\r\nclass ShadowWordPain extends Analyzer {\r\n  static dependencies = {\r\n    enemies: Enemies,\r\n  };\r\n  lastCastTimestamp = 0;\r\n  castedShadowWordPains = 0;\r\n  appliedShadowWordPains = 0;\r\n  refreshedShadowWordPains = 0;\r\n  protected enemies!: Enemies;\r\n\r\n  get uptime() {\r\n    return this.enemies.getBuffUptime(SPELLS.SHADOW_WORD_PAIN.id) / this.owner.fightDuration;\r\n  }\r\n\r\n  get suggestionThresholds() {\r\n    return {\r\n      actual: this.uptime,\r\n      isLessThan: {\r\n        minor: 0.95,\r\n        average: 0.90,\r\n        major: 0.8,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n  suggestions(when: When) {\r\n    when(this.suggestionThresholds)\r\n      .addSuggestion((suggest, actual, recommended) => suggest(<span>Your <SpellLink id={SPELLS.SHADOW_WORD_PAIN.id} /> uptime can be improved. Try to pay more attention to your <SpellLink id={SPELLS.SHADOW_WORD_PAIN.id} /> on the boss.</span>)\r\n        .icon(SPELLS.SHADOW_WORD_PAIN.icon)\r\n        .actual(i18n._(t('priest.shadow.suggestions.shadowWordPain.uptime')`${formatPercentage(actual)}% Shadow Word: Pain uptime`))\r\n        .recommended(`>${formatPercentage(recommended)}% is recommended`));\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        position={STATISTIC_ORDER.CORE(4)}\r\n        size=\"flexible\"\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.SHADOW_WORD_PAIN}>\r\n          <>\r\n            {formatPercentage(this.uptime)}% <small>Uptime</small>\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShadowWordPain;\r\n","import React from 'react';\r\n\r\nimport Analyzer from 'parser/core/Analyzer';\r\nimport { ThresholdStyle, When } from 'parser/core/ParseResults';\r\nimport Enemies from 'parser/shared/modules/Enemies';\r\nimport SPELLS from 'common/SPELLS';\r\nimport SpellLink from 'common/SpellLink';\r\nimport { formatPercentage } from 'common/format';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_ORDER from 'interface/others/STATISTIC_ORDER';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\n\r\nclass VampiricTouch extends Analyzer {\r\n  static dependencies = {\r\n    enemies: Enemies,\r\n  };\r\n  protected enemies!: Enemies;\r\n\r\n  get uptime() {\r\n    return this.enemies.getBuffUptime(SPELLS.VAMPIRIC_TOUCH.id) / this.owner.fightDuration;\r\n  }\r\n\r\n  get suggestionThresholds() {\r\n    return {\r\n      actual: this.uptime,\r\n      isLessThan: {\r\n        minor: 0.95,\r\n        average: 0.90,\r\n        major: 0.8,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n  suggestions(when: When) {\r\n    when(this.suggestionThresholds)\r\n      .addSuggestion((suggest, actual, recommended) => suggest(<span>Your <SpellLink id={SPELLS.VAMPIRIC_TOUCH.id} /> uptime can be improved. Try to pay more attention to your <SpellLink id={SPELLS.VAMPIRIC_TOUCH.id} /> on the boss.</span>)\r\n        .icon(SPELLS.VAMPIRIC_TOUCH.icon)\r\n        .actual(i18n._(t('priest.shadow.suggestions.vampiricTouch.uptime')`${formatPercentage(actual)}% Vampiric Touch uptime`))\r\n        .recommended(`>${formatPercentage(recommended)}% is recommended`));\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        position={STATISTIC_ORDER.CORE(3)}\r\n        size=\"flexible\"\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.VAMPIRIC_TOUCH}>\r\n          <>\r\n            {formatPercentage(this.uptime)}% <small>Uptime</small>\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VampiricTouch;\r\n","import React from 'react';\r\n\r\nimport BaseChecklist from 'parser/shared/modules/features/Checklist/Module';\r\nimport CastEfficiency from 'parser/shared/modules/CastEfficiency';\r\nimport Combatants from 'parser/shared/modules/Combatants';\r\nimport PreparationRuleAnalyzer from 'parser/shared/modules/features/Checklist/PreparationRuleAnalyzer';\r\n\r\nimport AlwaysBeCasting from '../features/AlwaysBeCasting';\r\nimport Component from './Component';\r\nimport ShadowWordPain from '../spells/ShadowWordPain';\r\nimport VampiricTouch from '../spells/VampiricTouch';\r\n\r\nclass Checklist extends BaseChecklist {\r\n  static dependencies = {\r\n    combatants: Combatants,\r\n    castEfficiency: CastEfficiency,\r\n    alwaysBeCasting: AlwaysBeCasting,\r\n    preparationRuleAnalyzer: PreparationRuleAnalyzer,\r\n    shadowWordPain: ShadowWordPain,\r\n    vampiricTouch: VampiricTouch,\r\n  };\r\n  protected combatants!: Combatants;\r\n  protected castEfficiency!: CastEfficiency;\r\n  protected alwaysBeCasting!: AlwaysBeCasting;\r\n  protected preparationRuleAnalyzer!: PreparationRuleAnalyzer;\r\n  protected shadowWordPain!: ShadowWordPain;\r\n  protected vampiricTouch!: VampiricTouch;\r\n\r\n  render() {\r\n    return (\r\n      <Component\r\n        combatant={this.combatants.selected}\r\n        castEfficiency={this.castEfficiency}\r\n\r\n        thresholds={{\r\n          ...this.preparationRuleAnalyzer.thresholds,\r\n\r\n          shadowWordPain: this.shadowWordPain.suggestionThresholds,\r\n          vampiricTouch: this.vampiricTouch.suggestionThresholds,\r\n          downtime: this.alwaysBeCasting.suggestionThresholds,\r\n\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checklist;\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\n\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_ORDER from 'interface/others/STATISTIC_ORDER';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport Events, { CastEvent } from 'parser/core/Events';\r\nimport Haste from 'parser/shared/modules/Haste';\r\nimport GlobalCooldown from 'parser/shared/modules/GlobalCooldown';\r\n\r\nconst ONE_FILLER_GCD_HASTE_THRESHOLD = 1.4;\r\n\r\nclass SkippableCasts extends Analyzer {\r\n  static dependencies = {\r\n    haste: Haste,\r\n    globalCooldown: GlobalCooldown,\r\n  };\r\n  _castsSinceLastVoidBolt = 0;\r\n  protected haste!: Haste;\r\n  protected globalCooldown!: GlobalCooldown;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.addEventListener(Events.cast.by(SELECTED_PLAYER), this.onCast);\r\n  }\r\n\r\n  _skippableCastsBetweenVoidbolts = 0;\r\n\r\n  get skippableCastsBetweenVoidbolts() {\r\n    return this._skippableCastsBetweenVoidbolts;\r\n  }\r\n\r\n  onCast(event: CastEvent) {\r\n    const spellId = event.ability.guid;\r\n    if (this.haste.current >= ONE_FILLER_GCD_HASTE_THRESHOLD) {\r\n      if (spellId === SPELLS.VOID_BOLT.id) {\r\n        this._castsSinceLastVoidBolt = 0;\r\n      } else if (this.globalCooldown.isOnGlobalCooldown(spellId)) {\r\n        this._castsSinceLastVoidBolt += 1;\r\n        if (this._castsSinceLastVoidBolt > 1) {\r\n          this._skippableCastsBetweenVoidbolts += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  statistic() {\r\n    const skippableCasts = this.skippableCastsBetweenVoidbolts;\r\n    if (!skippableCasts) { // If there were no skippable casts there's no point to display the module. It'll probably be 1-2 patches before this displays anything of value.\r\n      this.active = false;\r\n      return;\r\n    }\r\n    return (\r\n      <Statistic\r\n        position={STATISTIC_ORDER.CORE(7)}\r\n        size=\"flexible\"\r\n        tooltip={`There should only be 1 cast between Void Bolts casts when you exceed 140% haste. You casted a total of ${skippableCasts} extra abilities inbetween, wasting insanity generation & damage.`}\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.VOID_BOLT}>\r\n          <>\r\n            {skippableCasts} <small>Skippable casts</small>\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkippableCasts;\r\n","import indexById from './indexById';\r\n\r\n// TODO: Refactor this away: you should make a spec specific PETS file in your spec folder\r\nconst PETS = {\r\n  // TODO: revise Warlock pets\r\n  WILDIMP_ON_DREADSTALKER: {\r\n    id: 99737,\r\n    name: 'Wild Imp riding Dreadstalker',\r\n    baseDuration: 12,\r\n  },\r\n  GRIMOIRE_FELGUARD: {\r\n    id: 17252,\r\n    name: 'Grimoire: Felguard',\r\n    baseDuration: 25,\r\n  },\r\n  WILDIMP: {\r\n    id: 55659,\r\n    name: 'Wild Imp',\r\n    baseDuration: 12,\r\n  },\r\n  DREADSTALKER: {\r\n    id: 98035,\r\n    name: 'Dreadstalker',\r\n    baseDuration: 12,\r\n  },\r\n  DOOMGUARD: {\r\n    id: 11859,\r\n    name: 'Doomguard',\r\n    baseDuration: 25,\r\n  },\r\n  INFERNAL: {\r\n    id: 89,\r\n    name: 'Infernal',\r\n    baseDuration: 25,\r\n  },\r\n  DARKGLARE: {\r\n    id: 103673,\r\n    name: 'Darkglare',\r\n    baseDuration: 12,\r\n  },\r\n\r\n  // priest:\r\n  SHADOWFIEND: {\r\n    id: 19668,\r\n    name: 'Shadowfiend',\r\n  },\r\n  SHADOWFIEND_SHA_GLYPH: {\r\n    id: 67235,\r\n    name: 'Shadowfiend',\r\n  },\r\n  MINDBENDER: {\r\n    id: 62982,\r\n    name: 'Mindbender',\r\n  },\r\n  VOID_TENDRIL: {\r\n    id: 98167,\r\n    name: 'Void Tendril',\r\n  },\r\n  SPIRIT_LINK_TOTEM: {\r\n    id: 53006,\r\n    name: 'Spirit Link Totem',\r\n  }\r\n};\r\n\r\nexport default indexById(PETS);\r\n","import SPELLS from 'common/SPELLS';\r\nimport PETS from 'common/PETS';\r\nimport { Options } from 'parser/core/Analyzer';\r\n\r\nimport Pet from '../core/Pet';\r\n\r\nclass Shadowfiend extends Pet {\r\n  _pet = PETS.SHADOWFIEND;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.active = !this.selectedCombatant.hasTalent(SPELLS.MINDBENDER_TALENT_SHADOW.id);\r\n  }\r\n}\r\n\r\nexport default Shadowfiend;\r\n","import Analyzer, { Options, SELECTED_PLAYER_PET } from 'parser/core/Analyzer';\r\nimport Events, { DamageEvent } from 'parser/core/Events';\r\n\r\nclass Pet extends Analyzer {\r\n  _sourceId: number | null = null;\r\n  _pets: any = {};\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this._pets = this.owner.report.friendlyPets.filter((pet: any) => pet.petOwner === this.owner.player.id);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER_PET), this.onPetDamage);\r\n\r\n    if (this._pets !== undefined) {\r\n      const pet = this.fetchPet(this._pets);\r\n      if (pet) {\r\n        this._sourceId = pet.id;\r\n      }\r\n    }\r\n  }\r\n\r\n  _damageDone: number = 0;\r\n\r\n  get damageDone() {\r\n    return this._damageDone;\r\n  }\r\n\r\n  get fetchPets() {\r\n    return this._pets;\r\n  }\r\n\r\n  onPetDamage(event: DamageEvent) {\r\n    if (this._sourceId !== undefined && event.sourceID === this._sourceId) {\r\n      this._damageDone += event.amount;\r\n    }\r\n  }\r\n\r\n  fetchPet(pet: any) {\r\n    return this.fetchPets.find((_pet: any) => _pet.guid === pet.id);\r\n  }\r\n}\r\n\r\nexport default Pet;\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport { ThresholdStyle, When } from 'parser/core/ParseResults';\r\nimport Events, { ApplyBuffEvent, RemoveBuffEvent } from 'parser/core/Events';\r\nimport SpellLink from 'common/SpellLink';\r\n\r\nimport { formatPercentage } from 'common/format';\r\nimport calculateMaxCasts from 'parser/core/calculateMaxCasts';\r\n\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\n\r\nimport { DISPERSION_BASE_CD, DISPERSION_UPTIME_MS } from '../../constants';\r\n\r\nclass Disperion extends Analyzer {\r\n  _previousDispersionCast: any;\r\n  dispersionUptime: number = 0;\r\n  maxDispersionTime: number = 0;\r\n  dispersedTime: number = 0;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.addEventListener(Events.applybuff.by(SELECTED_PLAYER).spell(SPELLS.DISPERSION), this.onBuffApplied);\r\n    this.addEventListener(Events.removebuff.by(SELECTED_PLAYER).spell(SPELLS.DISPERSION), this.onBuffRemoved);\r\n  }\r\n\r\n  _dispersions: any = {};\r\n\r\n  get dispersions() {\r\n    return Object.keys(this._dispersions).map(key => this._dispersions[key]);\r\n  }\r\n\r\n  get suggestionThresholds() {\r\n    this.dispersionUptime = this.selectedCombatant.getBuffUptime(SPELLS.DISPERSION.id);\r\n    this.maxDispersionTime = Math.floor(calculateMaxCasts(DISPERSION_BASE_CD, this.owner.fightDuration)) * DISPERSION_UPTIME_MS;\r\n    this.dispersedTime = this.dispersionUptime / this.maxDispersionTime;\r\n    return {\r\n      actual: this.dispersedTime,\r\n      isGreaterThan: {\r\n        minor: 0.5,\r\n        average: 0.65,\r\n        major: 0.75,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n  onBuffApplied(event: ApplyBuffEvent) {\r\n    this._dispersions[event.timestamp] = {\r\n      start: event.timestamp,\r\n    };\r\n\r\n    this._previousDispersionCast = event;\r\n  }\r\n\r\n  onBuffRemoved(event: RemoveBuffEvent) {\r\n    this._dispersions[this._previousDispersionCast.timestamp] = {\r\n      ...this._dispersions[this._previousDispersionCast.timestamp],\r\n      end: event.timestamp,\r\n    };\r\n\r\n    this._previousDispersionCast = null;\r\n  }\r\n\r\n  suggestions(when: When) {\r\n    when(this.suggestionThresholds)\r\n      .addSuggestion((suggest, actual, recommended) => suggest(<span>You spent {Math.round(this.dispersionUptime / 1000)} seconds (out of a possible {Math.round(this.maxDispersionTime / 1000)} seconds) in <SpellLink id={SPELLS.DISPERSION.id} />. Consider using <SpellLink id={SPELLS.DISPERSION.id} /> less or cancel it early.</span>)\r\n        .icon(SPELLS.DISPERSION.icon)\r\n        .actual(i18n._(t('priest.shadow.suggestions.dispersion.uptime')`${formatPercentage(actual)}% Dispersion uptime`))\r\n        .recommended(`<${formatPercentage(recommended)}% is recommended, unless the encounter requires it.`));\r\n  }\r\n}\r\n\r\nexport default Disperion;\r\n","import SPELLS from 'common/SPELLS';\r\n\r\nexport const DISPERSION_BASE_CD = 90;\r\nexport const DISPERSION_UPTIME_MS = 6000;\r\nexport const MINDBENDER_UPTIME_MS = 15000;\r\nexport const MS_BUFFER = 100;\r\nexport const SPIRIT_DAMAGE_MULTIPLIER = 1.3;\r\nexport const SPIRIT_INSANITY_GENERATION = 1;\r\nexport const TWIST_OF_FATE_INCREASE = 1.1;\r\nexport const VOID_TORRENT_MAX_TIME = 4000;\r\n\r\nexport const VOID_FORM_ACTIVATORS = [\r\n  SPELLS.VOID_ERUPTION.id,\r\n  SPELLS.SURRENDER_TO_MADNESS_TALENT.id,\r\n];\r\n\r\n","import React from 'react';\r\n\r\nimport Analyzer from 'parser/core/Analyzer';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_ORDER from 'interface/others/STATISTIC_ORDER';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport ItemHealingDone from 'interface/ItemHealingDone';\r\nimport DamageTracker from 'parser/shared/modules/AbilityTracker';\r\nimport { formatNumber } from 'common/format';\r\n\r\nimport AbilityTracker from '../core/AbilityTracker';\r\n\r\n// Example log: /report/TzhG7rkfJAWP8MQp/32-Mythic+G'huun+-+Wipe+11+(8:21)/16-Constiince/changelog\r\nclass VampiricEmbrace extends Analyzer {\r\n  static dependencies = {\r\n    abilityTracker: DamageTracker,\r\n  };\r\n  protected abilityTracker!: AbilityTracker;\r\n\r\n  get casts() {\r\n    return this.abilityTracker.getAbility(SPELLS.VAMPIRIC_EMBRACE.id).casts;\r\n  }\r\n\r\n  get healingDone() {\r\n    return this.abilityTracker.getAbility(SPELLS.VAMPIRIC_EMBRACE_HEAL.id).healingEffective;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        position={STATISTIC_ORDER.CORE(3)}\r\n        size=\"flexible\"\r\n        tooltip={`${formatNumber(this.healingDone)} healing done in ${this.casts || 0} cast(s).`}\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.VAMPIRIC_EMBRACE}>\r\n          <>\r\n            <ItemHealingDone amount={this.healingDone} />\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VampiricEmbrace;\r\n","import React from 'react';\r\n\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport Events, { DamageEvent } from 'parser/core/Events';\r\nimport SPELLS from 'common/SPELLS/index';\r\nimport { formatPercentage } from 'common/format';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport ItemDamageDone from 'interface/ItemDamageDone';\r\n\r\nimport { TWIST_OF_FATE_INCREASE } from '../../constants';\r\n\r\n// Example log: /report/9fLF3NhHTqCBtmXy/10-Normal+Zul+-+Kill+(2:26)/7-Nospheratu\r\nclass TwistOfFate extends Analyzer {\r\n  damage: number = 0;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.active = this.selectedCombatant.hasTalent(SPELLS.TWIST_OF_FATE_TALENT_SHADOW.id);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER), this.onDamage);\r\n  }\r\n\r\n  onDamage(event: DamageEvent) {\r\n    if (!this.selectedCombatant.hasBuff(SPELLS.TWIST_OF_FATE_BUFF.id, event.timestamp)) {\r\n      return;\r\n    }\r\n\r\n    const raw = event.amount + (event.absorbed || 0);\r\n    this.damage += raw - raw / TWIST_OF_FATE_INCREASE;\r\n  }\r\n\r\n  statistic() {\r\n    const uptime = this.selectedCombatant.getBuffUptime(SPELLS.TWIST_OF_FATE_BUFF.id) / this.owner.fightDuration;\r\n    return (\r\n      <Statistic\r\n        category={STATISTIC_CATEGORY.TALENTS}\r\n        size=\"flexible\"\r\n        tooltip={`${formatPercentage(uptime)}% uptime`}\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.TWIST_OF_FATE_BUFF}>\r\n          <>\r\n            <ItemDamageDone amount={this.damage} />\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TwistOfFate;\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS/index';\r\nimport SpellLink from 'common/SpellLink';\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport { ThresholdStyle, When } from 'parser/core/ParseResults';\r\nimport Events, { CastEvent, DamageEvent, RemoveBuffEvent } from 'parser/core/Events';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport ItemDamageDone from 'interface/ItemDamageDone';\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\n\r\nimport { MS_BUFFER, VOID_TORRENT_MAX_TIME } from '../../constants';\r\n\r\nfunction formatSeconds(seconds: number) {\r\n  return Math.round(seconds * 10) / 10;\r\n}\r\n\r\n// Example Log: /report/hmJqLPZ7GVgY1CNa/16-Normal+Fetid+Devourer+-+Kill+(1:52)/44-베시잉/events\r\nclass VoidTorrent extends Analyzer {\r\n\r\n  _previousVoidTorrentCast: any;\r\n  damage = 0;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.active = this.selectedCombatant.hasTalent(SPELLS.VOID_TORRENT_TALENT.id);\r\n    this.addEventListener(Events.cast.by(SELECTED_PLAYER).spell(SPELLS.VOID_TORRENT_TALENT), this.onVoidTorrentCast);\r\n    this.addEventListener(Events.removebuff.by(SELECTED_PLAYER).spell(SPELLS.VOID_TORRENT_TALENT), this.onVoidTorrentRemoved);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER).spell(SPELLS.VOID_TORRENT_TALENT), this.onVoidTorrentDamage);\r\n  }\r\n\r\n  _voidTorrents: any = {};\r\n\r\n  get voidTorrents() {\r\n    return Object.keys(this._voidTorrents).map(key => this._voidTorrents[key]);\r\n  }\r\n\r\n  get totalWasted() {\r\n    return this.voidTorrents.reduce((total, c) => total + c.wastedTime, 0) / 1000;\r\n  }\r\n\r\n  get suggestionThresholds() {\r\n    return {\r\n      actual: this.totalWasted,\r\n      isGreaterThan: {\r\n        minor: 0.2,\r\n        average: 0.5,\r\n        major: 2,\r\n      },\r\n      style: ThresholdStyle.SECONDS,\r\n    };\r\n  }\r\n\r\n  onVoidTorrentCast(event: CastEvent) {\r\n    this._voidTorrents[event.timestamp] = {\r\n      start: event.timestamp,\r\n    };\r\n\r\n    this._previousVoidTorrentCast = event;\r\n  }\r\n\r\n  onVoidTorrentRemoved(event: RemoveBuffEvent) {\r\n    const timeSpentChanneling = event.timestamp - this._previousVoidTorrentCast.timestamp;\r\n    const wastedTime = (VOID_TORRENT_MAX_TIME - MS_BUFFER) > timeSpentChanneling ? (VOID_TORRENT_MAX_TIME - timeSpentChanneling) : 0;\r\n    this._voidTorrents[this._previousVoidTorrentCast.timestamp] = {\r\n      ...this._voidTorrents[this._previousVoidTorrentCast.timestamp],\r\n      wastedTime,\r\n      end: event.timestamp,\r\n    };\r\n\r\n    this._previousVoidTorrentCast = null;\r\n  }\r\n\r\n  onVoidTorrentDamage(event: DamageEvent) {\r\n    this.damage += event.amount || 0;\r\n  }\r\n\r\n  suggestions(when: When) {\r\n    when(this.suggestionThresholds)\r\n      .addSuggestion((suggest, actual, recommended) => suggest(<>You interrupted <SpellLink id={SPELLS.VOID_TORRENT_TALENT.id} /> early, wasting {formatSeconds(this.totalWasted)} channeling seconds! Try to position yourself & time it so you don't get interrupted due to mechanics.</>)\r\n        .icon(SPELLS.VOID_TORRENT_TALENT.icon)\r\n        .actual(i18n._(t('priest.shadow.suggestions.voidTorrent.secondsLost')`Lost ${formatSeconds(actual)} seconds of Void Torrent.`))\r\n        .recommended('No time wasted is recommended.'));\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        category={STATISTIC_CATEGORY.TALENTS}\r\n        size=\"flexible\"\r\n        tooltip={`${formatSeconds(this.totalWasted)} seconds wasted by cancelling the channel early.`}\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.VOID_TORRENT_TALENT}>\r\n          <>\r\n            <ItemDamageDone amount={this.damage} />\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VoidTorrent;\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS/index';\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport Events, { DamageEvent } from 'parser/core/Events';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\n\r\nimport ItemDamageDone from 'interface/ItemDamageDone';\r\nimport { formatNumber } from 'common/format';\r\nimport AbilityTracker from 'parser/priest/shadow/modules/core/AbilityTracker';\r\n\r\n// Example Log: /report/zgBQ3kr6aAv19MXq/22-Normal+Zul+-+Kill+(2:26)/3-Selur\r\nclass ShadowCrash extends Analyzer {\r\n  static dependencies = {\r\n    abilityTracker: AbilityTracker,\r\n  };\r\n  damage: number = 0;\r\n  totalTargetsHit: number = 0;\r\n  protected abilityTracker!: AbilityTracker;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.active = this.selectedCombatant.hasTalent(SPELLS.SHADOW_CRASH_TALENT.id);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER).spell(SPELLS.SHADOW_CRASH_TALENT_DAMAGE), this.onShadowCrashDamage);\r\n  }\r\n\r\n  get averageTargetsHit() {\r\n    return this.totalTargetsHit / this.abilityTracker.getAbility(SPELLS.SHADOW_CRASH_TALENT.id).casts;\r\n  }\r\n\r\n  onShadowCrashDamage(event: DamageEvent) {\r\n    this.totalTargetsHit += 1;\r\n    this.damage += event.amount;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        category={STATISTIC_CATEGORY.TALENTS}\r\n        size=\"flexible\"\r\n        tooltip={`Average targets hit: ${formatNumber(this.averageTargetsHit)}`}\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.SHADOW_CRASH_TALENT}>\r\n          <>\r\n            <ItemDamageDone amount={this.damage} />\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShadowCrash;\r\n","import React from 'react';\r\n\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport Events, { DamageEvent } from 'parser/core/Events';\r\nimport SPELLS from 'common/SPELLS/index';\r\nimport { formatNumber } from 'common/format';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport ItemDamageDone from 'interface/ItemDamageDone';\r\n\r\nimport { SPIRIT_DAMAGE_MULTIPLIER, SPIRIT_INSANITY_GENERATION } from '../../constants';\r\n\r\n// Example log: /report/K3VAhbp9CtLwG81j/26-Heroic+Zul+-+Kill+(4:44)/6-Isentropy\r\nclass AuspiciousSpirits extends Analyzer {\r\n  damage = 0;\r\n  insanity = 0;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.active = this.selectedCombatant.hasTalent(SPELLS.AUSPICIOUS_SPIRITS_TALENT.id);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER).spell(SPELLS.SHADOWY_APPARITION_DAMAGE), this.onApparitionDamage);\r\n  }\r\n\r\n  onApparitionDamage(event: DamageEvent) {\r\n    this.damage += event.amount + (event.absorbed || 0);\r\n    this.insanity += SPIRIT_INSANITY_GENERATION;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        category={STATISTIC_CATEGORY.TALENTS}\r\n        size=\"flexible\"\r\n        tooltip={(\r\n          <>\r\n            {formatNumber(this.insanity)} Insanity generated.<br /><br />\r\n\r\n            The damage displayed is the additional damage you gained from taking this talent.\r\n          </>\r\n        )}\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.AUSPICIOUS_SPIRITS_TALENT}>\r\n          <>\r\n            <ItemDamageDone amount={this.damage - (this.damage / SPIRIT_DAMAGE_MULTIPLIER)} />\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuspiciousSpirits;\r\n","import SPELLS from 'common/SPELLS';\r\nimport CoreBuffs from 'parser/core/modules/Buffs';\r\nimport BLOODLUST_BUFFS from 'game/BLOODLUST_BUFFS';\r\n\r\nclass Buffs extends CoreBuffs {\r\n  buffs() {\r\n    const combatant = this.selectedCombatant;\r\n\r\n    // This should include ALL buffs that can be applied by your spec.\r\n    // This data can be used by various kinds of modules to improve their results, and modules added in the future may rely on buffs that aren't used today.\r\n    return [\r\n      {\r\n        spellId: SPELLS.VOIDFORM_BUFF.id,\r\n        triggeredBySpellId: SPELLS.VOID_ERUPTION.id,\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: SPELLS.DARK_THOUGHT_BUFF.id,\r\n        triggeredBySpellId: SPELLS.DARK_THOUGHTS.id,\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: SPELLS.UNFURLING_DARKNESS_BUFF.id,\r\n        triggeredBySpellId: SPELLS.VAMPIRIC_TOUCH.id,\r\n        enabled: combatant.hasTalent(SPELLS.UNFURLING_DARKNESS_TALENT.id),\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: SPELLS.SURRENDER_TO_MADNESS_TALENT.id,\r\n        enabled: combatant.hasTalent(SPELLS.SURRENDER_TO_MADNESS_TALENT.id),\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: SPELLS.VAMPIRIC_EMBRACE.id,\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: SPELLS.DISPERSION.id,\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: SPELLS.POWER_WORD_SHIELD.id,\r\n        triggeredBySpellId: SPELLS.POWER_WORD_SHIELD.id,\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: SPELLS.FADE.id,\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: SPELLS.DESPERATE_PRAYER.id,\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: SPELLS.MIND_CONTROL.id,\r\n        timelineHighlight: true,\r\n      },\r\n      {\r\n        spellId: Object.keys(BLOODLUST_BUFFS).map(item => Number(item)),\r\n        timelineHighlight: true,\r\n      },\r\n    ];\r\n  }\r\n}\r\n\r\nexport default Buffs;\r\n","import MainCombatLogParser from 'parser/core/CombatLogParser';\r\n\r\n// core\r\nimport AbilityTracker from './modules/core/AbilityTracker';\r\nimport Insanity from './modules/core/Insanity';\r\nimport Channeling from './modules/core/Channeling';\r\nimport GlobalCooldown from './modules/core/GlobalCooldown';\r\n// features\r\nimport Abilities from './modules/Abilities';\r\nimport AlwaysBeCasting from './modules/features/AlwaysBeCasting';\r\nimport Checklist from './modules/checklist/Module';\r\nimport SkippableCasts from './modules/features/SkippableCasts';\r\n// spells:\r\nimport Shadowfiend from './modules/spells/Shadowfiend';\r\nimport VampiricTouch from './modules/spells/VampiricTouch';\r\nimport ShadowWordPain from './modules/spells/ShadowWordPain';\r\nimport Dispersion from './modules/spells/Dispersion';\r\nimport VampiricEmbrace from './modules/spells/VampiricEmbrace';\r\n// talents\r\nimport TwistOfFate from './modules/talents/TwistOfFate';\r\nimport VoidTorrent from './modules/talents/VoidTorrent';\r\nimport ShadowCrash from './modules/talents/ShadowCrash';\r\nimport AuspiciousSpirits from './modules/talents/AuspiciousSpirits';\r\n// normalizers\r\nimport ShadowfiendNormalizer from '../shared/normalizers/ShadowfiendNormalizer';\r\nimport Buffs from './modules/features/Buffs';\r\n\r\nclass CombatLogParser extends MainCombatLogParser {\r\n  static specModules = {\r\n    // core\r\n    abilityTracker: AbilityTracker,\r\n    insanity: Insanity,\r\n    channeling: Channeling,\r\n    globalCooldown: GlobalCooldown,\r\n\r\n    // features:\r\n    abilities: Abilities,\r\n    buffs: Buffs,\r\n    alwaysBeCasting: AlwaysBeCasting,\r\n    checklist: Checklist,\r\n    skippableCasts: SkippableCasts,\r\n\r\n    // spells:\r\n    shadowfiend: Shadowfiend,\r\n    vampiricTouch: VampiricTouch,\r\n    shadowWordPain: ShadowWordPain,\r\n    dispersion: Dispersion,\r\n    vampiricEmbrace: VampiricEmbrace,\r\n\r\n    // talents:\r\n    twistOfFate: TwistOfFate,\r\n    voidTorrent: VoidTorrent,\r\n    shadowCrash: ShadowCrash,\r\n    auspiciousSpirits: AuspiciousSpirits,\r\n\r\n    shadowfiendNormalizer: ShadowfiendNormalizer,\r\n  };\r\n}\r\n\r\nexport default CombatLogParser;\r\n","/**\r\n * A simple component that shows the spell value in the most plain way possible.\r\n * Use this only as the very last resort.\r\n */\r\nimport React from 'react';\r\n\r\nimport SpellIcon from 'common/SpellIcon';\r\nimport SpellLink from 'common/SpellLink';\r\nimport Spell from 'common/SPELLS/Spell';\r\n\r\ntype Props = {\r\n  spell: Spell;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst BoringSpellValueText = ({ spell, children, className }: Props) => (\r\n  <div className={`pad boring-text ${className || ''}`}>\r\n    <label>\r\n      <SpellIcon id={spell.id} /> <SpellLink id={spell.id} icon={false} />\r\n    </label>\r\n    <div className=\"value\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default BoringSpellValueText;\r\n","export default function calculateMedian(values) {\r\n  const arr = [...values];\r\n  arr.sort((a, b) => a - b);\r\n\r\n  const half = Math.floor(arr.length / 2);\r\n\r\n  if (arr.length % 2) {\r\n    return arr[half];\r\n  } else {\r\n    return (arr[half - 1] + arr[half]) / 2.0;\r\n  }\r\n}\r\n","export default function average(values) {\r\n  return values.reduce((c, p) => c + p, 0) / values.length;\r\n}\r\n","export default function harmonic(values) {\r\n  return values.length / values.reduce((cum, val) => cum + 1/val, 0);\r\n}\r\n","import React, {useCallback, useState} from 'react';\r\n\r\nimport DropdownIcon from 'interface/icons/Dropdown';\r\nimport InformationIcon from 'interface/icons/Information';\r\nimport { ControlledExpandable } from 'interface/common/Expandable';\r\nimport colorForPerformance from 'common/colorForPerformance';\r\n\r\nimport calculateMedian from './helpers/calculateMedian';\r\nimport average from './helpers/average';\r\nimport harmonic from './helpers/harmonic';\r\n\r\nexport const RuleContext = React.createContext((value: number) => {/**/});\r\n\r\n\r\nexport enum PERFORMANCE_METHOD {\r\n  DEFAULT = 'DEFAULT',\r\n  MEDIAN = 'MEDIAN',\r\n  AVERAGE = 'AVERAGE',\r\n  LOWEST = 'LOWEST',\r\n  FIRST = 'FIRST',\r\n  HARMONIC = 'HARMONIC',\r\n};\r\n\r\ninterface Props {\r\n  name: React.ReactNode;\r\n  children: React.ReactNode;\r\n  description?: React.ReactNode;\r\n  performanceMethod?: PERFORMANCE_METHOD;\r\n}\r\n\r\ninterface State {\r\n  requirementPerformances: number[],\r\n  performance: number;\r\n  passed: boolean;\r\n  expanded: boolean;\r\n}\r\n\r\nconst Rule = (props: Props) => {\r\n\r\n  const [state, setState] = useState<State>({requirementPerformances: [], performance: 1, passed: true, expanded: false});\r\n\r\n\r\n  const calculateRulePerformance = useCallback((values: number[], style = PERFORMANCE_METHOD.DEFAULT) => {\r\n    // Lowest would generally be too punishing for small mistakes, if you want to have a single value tank the rule consider making it its own rule.\r\n    // Average would mark things as OK when one thing was OK and 3 things were \"average\", I think this is wrong and it should mark the rule as average. Median achieves this.\r\n    // Actual Median could mark a rule as 100% ok when there are still some things being neglected, so instead I opted for the best of both worlds and using the lowest of the median or average by default.\r\n\r\n    switch (style) {\r\n      case PERFORMANCE_METHOD.DEFAULT:\r\n        return Math.min(calculateMedian(values), average(values));\r\n      case PERFORMANCE_METHOD.MEDIAN:\r\n        return calculateMedian(values);\r\n      case PERFORMANCE_METHOD.AVERAGE:\r\n        return average(values);\r\n      case PERFORMANCE_METHOD.LOWEST:\r\n        return Math.min(...values);\r\n      case PERFORMANCE_METHOD.FIRST:\r\n        return values[0];\r\n      case PERFORMANCE_METHOD.HARMONIC:\r\n        return harmonic(values);\r\n      default:\r\n        throw new Error(`Unknown style: ${style}`);\r\n    }\r\n  }, [])\r\n\r\n \r\n\r\n  const checkEmptyRule = (child: React.ReactNode) => {\r\n    if (React.isValidElement(child) && child?.props) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const setRequirementPerformance = (p: number) => {\r\n    // We don't have to worry about adding the same Requirement's performance multiple times here because it's only called in the Requirement's constructor, which is only called once.\r\n    setState((prevState: State) => {\r\n      const requirementPerformances: State['requirementPerformances'] = [...prevState.requirementPerformances, p];\r\n      const performance = requirementPerformances.length > 0 ? calculateRulePerformance(requirementPerformances, props.performanceMethod) : 1\r\n      const passed = performance > 0.666;\r\n      const expanded = !passed;\r\n      return {requirementPerformances, performance: performance, passed, expanded}\r\n    })\r\n  }\r\n\r\n  const { name, children: requirements, description } = props;\r\n\r\n  if (!requirements || (Array.isArray(requirements) && !requirements.some(checkEmptyRule))) {\r\n    return null;\r\n  }\r\n\r\n  const inverseExpanded = () => {\r\n    setState(prevState => ({...prevState, expanded: !prevState.expanded}))\r\n  }\r\n\r\n  return (\r\n    <RuleContext.Provider value={setRequirementPerformance}>\r\n      <ControlledExpandable\r\n        element=\"li\"\r\n        className={state.passed ? 'passed' : 'failed'}\r\n        inverseExpanded={inverseExpanded}\r\n        expanded={state.expanded}\r\n        header={(\r\n          <div className=\"flex wrapable\">\r\n            <div className=\"flex-main name\">\r\n              {name}\r\n            </div>\r\n            <div className=\"flex-sub perf\">\r\n              <div className=\"perf-container\">\r\n                <div\r\n                  className=\"perf-bar\"\r\n                  style={{\r\n                    width: `${state.performance * 100}%`,\r\n                    backgroundColor: colorForPerformance(state.performance),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-sub chevron\">\r\n              <div>\r\n                <DropdownIcon />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      >\r\n        {description && (\r\n          <div className=\"row text-muted description\">\r\n            <InformationIcon />\r\n            <div className=\"col-md-12\">\r\n              {description}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"row\">\r\n          {requirements}\r\n        </div>\r\n      </ControlledExpandable>\r\n    </RuleContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Rule;\r\n","import React from 'react';\r\n\r\nimport InformationIcon from 'interface/icons/Information';\r\nimport { formatNumber, formatPercentage, formatThousands } from 'common/format';\r\nimport Tooltip, { TooltipElement } from 'common/Tooltip';\r\nimport colorForPerformance from 'common/colorForPerformance';\r\nimport { BoolThreshold, NumberThreshold, Threshold, ThresholdStyle } from 'parser/core/ParseResults';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport performanceForThresholds from './helpers/performanceForThresholds';\r\nimport { RuleContext } from './Rule';\r\n\r\n\r\nexport type RequirementThresholds = NumberThreshold | BoolThreshold;\r\n\r\ninterface Props {\r\n  name: React.ReactNode,\r\n  thresholds: RequirementThresholds,\r\n  tooltip?: React.ReactNode,\r\n  valueTooltip?: React.ReactNode,\r\n  setPerformance: (performance: number) => void,\r\n  prefix?: React.ReactNode,\r\n  suffix?: React.ReactNode,\r\n}\r\nclass Requirement extends React.PureComponent<Props> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    props.setPerformance(this.performance);\r\n  }\r\n\r\n  get performance() {\r\n    return performanceForThresholds(this.props.thresholds);\r\n  }\r\n\r\n  formatThresholdsActual(thresholds: Threshold<any>) {\r\n    switch (thresholds.style) {\r\n      case ThresholdStyle.PERCENTAGE:\r\n        return `${formatPercentage(thresholds.actual)}%`;\r\n      case ThresholdStyle.NUMBER:\r\n        return `${formatNumber(thresholds.actual)}`;\r\n      case ThresholdStyle.THOUSANDS:\r\n        return `${formatThousands(thresholds.actual)}`;\r\n      case ThresholdStyle.DECIMAL:\r\n        return `${thresholds.actual.toFixed(2)}`;\r\n      case ThresholdStyle.BOOLEAN:\r\n        return thresholds.actual ? <Trans id=\"common.yes\">Yes</Trans> : <Trans id=\"common.no\">No</Trans>;\r\n      case ThresholdStyle.SECONDS:\r\n        return `${thresholds.actual.toFixed(2)}s`;\r\n      default:\r\n        throw new Error(`Unknown style: ${thresholds.style}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, thresholds, tooltip, valueTooltip, prefix, suffix } = this.props;\r\n\r\n    const performance = this.performance;\r\n    let max = undefined;\r\n    const thresholdsN = thresholds as NumberThreshold;\r\n    if(thresholdsN.max !== undefined) {\r\n      max = `/ ${thresholdsN.max}`;\r\n    }\r\n    const actual = (\r\n      <>\r\n        {prefix} {this.formatThresholdsActual(thresholds)} {max} {suffix}\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <div className=\"col-md-6\">\r\n        <div className=\"flex\">\r\n          <div className=\"flex-main\">\r\n            {name}\r\n          </div>\r\n          {tooltip && (\r\n            <div\r\n              className=\"flex-sub\"\r\n              style={{ marginLeft: 10 }}\r\n            >\r\n              <Tooltip content={tooltip}>\r\n                <div>\r\n                  <InformationIcon />\r\n                </div>\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n          <div className=\"flex-sub content-middle text-muted\" style={{ minWidth: 55, marginLeft: 5, marginRight: 10 }}>\r\n            <div className=\"text-right\" style={{ width: '100%' }}>\r\n              {valueTooltip ? <TooltipElement content={valueTooltip}>{actual}</TooltipElement> : actual}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-sub content-middle\" style={{ width: 50 }}>\r\n            <div className=\"performance-bar-container\">\r\n              <div\r\n                className=\"performance-bar small\"\r\n                style={{\r\n                  width: `${performance * 100}%`,\r\n                  transition: 'background-color 800ms',\r\n                  backgroundColor: colorForPerformance(performance),\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (props: Omit<Props, 'setPerformance'>) => (\r\n  <RuleContext.Consumer>\r\n    {(setPerformance: (performance: number) => void) => (\r\n      <Requirement\r\n        {...props}\r\n        setPerformance={setPerformance}\r\n      />\r\n    )}\r\n  </RuleContext.Consumer>\r\n);\r\n","/**\r\n *   0 - 33% major This is different from the *minor* threshold which is at 100% instead of 66%. The reason for this is that the minor threshold being at 75% and then 75%-100% being minor - max is that this would suggest going for max is best while this is not always the case. Something like Crusader Strike (with the Crusader's Might talent) has a recommended cast efficiency of 35% *because* you should only cast it enough to benefit you, more than that would be good but not 100% cast efficiency as then you're losing healing.\r\n * 33% - 66% average\r\n * 66% - 99% minor\r\n * 100% good (no issue)\r\n * @param actual\r\n * @param minor\r\n * @param average\r\n * @param major\r\n * @returns {number}\r\n */\r\nfunction performanceForLessThanThresholds(actual, { minor, average, major }) {\r\n  if (actual < major) {\r\n    // major issue\r\n    return 0.333 * actual / major;\r\n  } else if (actual < average) {\r\n    // average issue (between major and average issue)\r\n    return 0.333 + 0.333 * ((actual - major) / (average - major));\r\n  } else if (actual < minor) {\r\n    // minor issue (between average and minor issue)\r\n    return 0.666 + 0.333 * ((actual - average) / (minor - average));\r\n  } else {\r\n    // no issue\r\n    return 1;\r\n  }\r\n}\r\nfunction performanceForGreaterThanThresholds(actual, { minor, average, major }) {\r\n  if (actual > major) {\r\n    // major issue\r\n    return 0.333 * major / actual;\r\n  } else if (actual > average) {\r\n    // average issue (between major and average issue)\r\n    return 0.666 - 0.333 * ((actual - average) / (major - average));\r\n  } else if (actual > minor) {\r\n    // minor issue (between average and minor issue)\r\n    return 1 - 0.333 * ((actual - minor) / (average - minor));\r\n  } else {\r\n    // no issue\r\n    return 1;\r\n  }\r\n}\r\nexport default function performanceForThresholds(thresholds) {\r\n  if (thresholds.isGreaterThan) {\r\n    if (typeof thresholds.isGreaterThan === 'object') {\r\n      return performanceForGreaterThanThresholds(thresholds.actual, thresholds.isGreaterThan);\r\n    } else {\r\n      return thresholds.isGreaterThan / thresholds.actual;\r\n    }\r\n  } else if (thresholds.isLessThan) {\r\n    if (typeof thresholds.isLessThan === 'object') {\r\n      return performanceForLessThanThresholds(thresholds.actual, thresholds.isLessThan);\r\n    } else {\r\n      return thresholds.actual / thresholds.isLessThan;\r\n    }\r\n  } else if (thresholds.isEqual !== undefined) {\r\n    return thresholds.actual !== thresholds.isEqual ? 1 : 0;\r\n  } else {\r\n    throw new Error('Failed to recognize threshold type');\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport './Checklist.scss';\r\n\r\nconst Checklist = props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <ul className=\"checklist\">\r\n      {!children && (\r\n        <li>\r\n          <div className=\"alert alert-danger\">\r\n            <Trans id=\"shared.checklist.missingChecklist\">The checklist is not yet available for this spec. See <a href=\"https://github.com/WoWAnalyzer/WoWAnalyzer\">GitHub</a> or join us on <a href=\"https://discord.gg/AxphPxU\">Discord</a> if you're interested in contributing this.</Trans>\r\n          </div>\r\n        </li>\r\n      )}\r\n\r\n      {children}\r\n    </ul>\r\n  );\r\n};\r\n\r\nChecklist.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Checklist;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport Rule from './Rule';\r\nimport Requirement from './Requirement';\r\n\r\nclass PreparationRule extends React.PureComponent {\r\n\r\n  static propTypes = {\r\n    children: PropTypes.node,\r\n    thresholds: PropTypes.object.isRequired,\r\n  };\r\n\r\n  renderPotionRequirements() {\r\n    const { thresholds } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.combatPotionsUsed\">Combat potions used</Trans>}\r\n          thresholds={thresholds.potionsUsed}\r\n        />\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.highQualityCombatPotionsUsed\">High quality combat potions used</Trans>}\r\n          thresholds={thresholds.bestPotionUsed}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  renderEnchantRequirements() {\r\n    const { thresholds } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.enchanted\">All items enchanted</Trans>}\r\n          thresholds={thresholds.itemsEnchanted}\r\n        />\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.enchantedHigh\">Using high quality enchants</Trans>}\r\n          thresholds={thresholds.itemsBestEnchanted}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  renderWeaponEnhancementRequirements() {\r\n    const { thresholds } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans>All weapons enhanced (oils/stones)</Trans>}\r\n          thresholds={thresholds.weaponsEnhanced}\r\n        />\r\n        <Requirement\r\n          name={<Trans>Using high quality weapon enhancements</Trans>}\r\n          thresholds={thresholds.bestWeaponEnhancements}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  renderFlaskRequirements() {\r\n    const { thresholds } = this.props;\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.flaskHigh\">High quality flask used</Trans>}\r\n          thresholds={thresholds.higherFlaskPresent}\r\n        />\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.flask\">Flask used</Trans>}\r\n          thresholds={thresholds.flaskPresent}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  renderFoodRequirements() {\r\n    const { thresholds } = this.props;\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.foodHigh\">High quality food used</Trans>}\r\n          thresholds={thresholds.higherFoodPresent}\r\n        />\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.food\">Food used</Trans>}\r\n          thresholds={thresholds.foodPresent}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <Rule\r\n        name={<Trans id=\"shared.modules.features.checklist.wellPrepared\">Be well prepared</Trans>}\r\n        description={<Trans id=\"shared.modules.features.checklist.wellPreparedDetails\">Being well prepared with food, flasks, potions and enchants is an easy way to improve your performance.</Trans>}\r\n      >\r\n        {this.renderEnchantRequirements()}\r\n        {this.renderWeaponEnhancementRequirements()}\r\n        {this.renderPotionRequirements()}\r\n        {this.renderFlaskRequirements()}\r\n        {this.renderFoodRequirements()}\r\n        {children}\r\n      </Rule>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreparationRule;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SpellLink from 'common/SpellLink';\r\nimport { captureException } from 'common/errorLogger';\r\n\r\nimport Requirement from './Requirement';\r\n\r\n/**\r\n * This is a common requirement for all checklists that uses settings for CastEfficiency to create a Requirement. It shows the spell and your efficiency as performance depending on the configured cast efficiency efficiency thresholds.\r\n *\r\n * This requirement is automatically disabled if the ability's CastEfficiency suggestion is disabled (i.e. if the ability's castEfficiency: { suggestion } is unset or false), or the ability is disabled completely. If you set `onlyWithSuggestion` to `false` in the object when creating this requirement you can change this behavior to always show if the ability is enabled, regardless of the CastEfficiency suggestion property being set.\r\n */\r\nclass GenericCastEfficiencyRequirement extends React.PureComponent {\r\n  static propTypes = {\r\n    spell: PropTypes.number.isRequired,\r\n    name: PropTypes.node,\r\n    castEfficiency: PropTypes.shape({\r\n      efficiency: PropTypes.number.isRequired,\r\n      gotMaxCasts: PropTypes.bool.isRequired,\r\n      recommendedEfficiency: PropTypes.number.isRequired,\r\n      averageIssueEfficiency: PropTypes.number.isRequired,\r\n      majorIssueEfficiency: PropTypes.number.isRequired,\r\n      casts: PropTypes.any,\r\n      maxCasts: PropTypes.any,\r\n    }).isRequired,\r\n    isMaxCasts: PropTypes.bool,\r\n  };\r\n\r\n  get thresholds() {\r\n    if (!this.props.castEfficiency) {\r\n      captureException(new Error(`GenericCastEfficiencyRequirement requires that you pass the castEfficiency object yourself. Spell: ${this.props.spell}`));\r\n      return null;\r\n    }\r\n\r\n    if(this.props.isMaxCasts) {\r\n      const {\r\n        casts,\r\n        maxCasts,\r\n      } = this.props.castEfficiency;\r\n\r\n      return {\r\n        actual: casts,\r\n        max: maxCasts,\r\n        isLessThan: {\r\n          minor: maxCasts,\r\n          average: maxCasts - 1,\r\n          major: maxCasts - 2,\r\n        },\r\n        style: 'number',\r\n      };\r\n    } else {\r\n      const {\r\n        efficiency,\r\n        gotMaxCasts,\r\n        recommendedEfficiency: minor,\r\n        averageIssueEfficiency: average,\r\n        majorIssueEfficiency: major,\r\n      } = this.props.castEfficiency;\r\n\r\n      return {\r\n        actual: gotMaxCasts ? 1 : efficiency,\r\n        isLessThan: {\r\n          minor,\r\n          average,\r\n          major,\r\n        },\r\n        style: 'percentage',\r\n      };\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { spell, name, ...others } = this.props;\r\n\r\n    const thresholds = this.thresholds;\r\n    if (!thresholds) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Requirement\r\n        name={name || <SpellLink id={spell} />}\r\n        thresholds={thresholds}\r\n        {...others}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenericCastEfficiencyRequirement;\r\n","export default function colorForPerformance(performance: number) {\r\n  if (performance >= 1) {\r\n    return '#4ec04e';\r\n  } else if (performance > 0.666) {\r\n    return '#a6c34c';\r\n  } else if (performance > 0.5) {\r\n    return '#ffc84a';\r\n  } else if (performance > 0.333) {\r\n    return '#df7102';\r\n  } else {\r\n    return '#ac1f39';\r\n  }\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ANIMATION_STATE_CLASSES = {\n  animating: 'rah-animating',\n  animatingUp: 'rah-animating--up',\n  animatingDown: 'rah-animating--down',\n  animatingToHeightZero: 'rah-animating--to-height-zero',\n  animatingToHeightAuto: 'rah-animating--to-height-auto',\n  animatingToHeightSpecific: 'rah-animating--to-height-specific',\n  static: 'rah-static',\n  staticHeightZero: 'rah-static--height-zero',\n  staticHeightAuto: 'rah-static--height-auto',\n  staticHeightSpecific: 'rah-static--height-specific'\n};\n\nvar PROPS_TO_OMIT = ['animateOpacity', 'animationStateClasses', 'applyInlineTransitions', 'children', 'contentClassName', 'delay', 'duration', 'easing', 'height', 'onAnimationEnd', 'onAnimationStart'];\n\nfunction omit(obj) {\n  for (var _len = arguments.length, keys = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n\n  if (!keys.length) {\n    return obj;\n  }\n\n  var res = {};\n  var objectKeys = Object.keys(obj);\n\n  for (var i = 0; i < objectKeys.length; i++) {\n    var key = objectKeys[i];\n\n    if (keys.indexOf(key) === -1) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res;\n}\n\n// Start animation helper using nested requestAnimationFrames\nfunction startAnimationHelper(callback) {\n  var requestAnimationFrameIDs = [];\n\n  requestAnimationFrameIDs[0] = requestAnimationFrame(function () {\n    requestAnimationFrameIDs[1] = requestAnimationFrame(function () {\n      callback();\n    });\n  });\n\n  return requestAnimationFrameIDs;\n}\n\nfunction cancelAnimationFrames(requestAnimationFrameIDs) {\n  requestAnimationFrameIDs.forEach(function (id) {\n    return cancelAnimationFrame(id);\n  });\n}\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction isPercentage(height) {\n  // Percentage height\n  return typeof height === 'string' && height.search('%') === height.length - 1 && isNumber(height.substr(0, height.length - 1));\n}\n\nfunction runCallback(callback, params) {\n  if (callback && typeof callback === 'function') {\n    callback(params);\n  }\n}\n\nvar AnimateHeight = function (_React$Component) {\n  _inherits(AnimateHeight, _React$Component);\n\n  function AnimateHeight(props) {\n    _classCallCheck(this, AnimateHeight);\n\n    var _this = _possibleConstructorReturn(this, (AnimateHeight.__proto__ || Object.getPrototypeOf(AnimateHeight)).call(this, props));\n\n    _this.animationFrameIDs = [];\n\n    var height = 'auto';\n    var overflow = 'visible';\n\n    if (isNumber(props.height)) {\n      // If value is string \"0\" make sure we convert it to number 0\n      height = props.height < 0 || props.height === '0' ? 0 : props.height;\n      overflow = 'hidden';\n    } else if (isPercentage(props.height)) {\n      // If value is string \"0%\" make sure we convert it to number 0\n      height = props.height === '0%' ? 0 : props.height;\n      overflow = 'hidden';\n    }\n\n    _this.animationStateClasses = _extends({}, ANIMATION_STATE_CLASSES, props.animationStateClasses);\n\n    var animationStateClasses = _this.getStaticStateClasses(height);\n\n    _this.state = {\n      animationStateClasses: animationStateClasses,\n      height: height,\n      overflow: overflow,\n      shouldUseTransitions: false\n    };\n    return _this;\n  }\n\n  _createClass(AnimateHeight, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var height = this.state.height;\n\n      // Hide content if height is 0 (to prevent tabbing into it)\n      // Check for contentElement is added cause this would fail in tests (react-test-renderer)\n      // Read more here: https://github.com/Stanko/react-animate-height/issues/17\n\n      if (this.contentElement && this.contentElement.style) {\n        this.hideContent(height);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _props = this.props,\n          delay = _props.delay,\n          duration = _props.duration,\n          height = _props.height,\n          onAnimationEnd = _props.onAnimationEnd,\n          onAnimationStart = _props.onAnimationStart;\n\n      // Check if 'height' prop has changed\n\n      if (this.contentElement && height !== prevProps.height) {\n        var _cx;\n\n        // Remove display: none from the content div\n        // if it was hidden to prevent tabbing into it\n        this.showContent(prevState.height);\n\n        // Cache content height\n        this.contentElement.style.overflow = 'hidden';\n        var contentHeight = this.contentElement.offsetHeight;\n        this.contentElement.style.overflow = '';\n\n        // set total animation time\n        var totalDuration = duration + delay;\n\n        var newHeight = null;\n        var timeoutState = {\n          height: null, // it will be always set to either 'auto' or specific number\n          overflow: 'hidden'\n        };\n        var isCurrentHeightAuto = prevState.height === 'auto';\n\n        if (isNumber(height)) {\n          // If value is string \"0\" make sure we convert it to number 0\n          newHeight = height < 0 || height === '0' ? 0 : height;\n          timeoutState.height = newHeight;\n        } else if (isPercentage(height)) {\n          // If value is string \"0%\" make sure we convert it to number 0\n          newHeight = height === '0%' ? 0 : height;\n          timeoutState.height = newHeight;\n        } else {\n          // If not, animate to content height\n          // and then reset to auto\n          newHeight = contentHeight; // TODO solve contentHeight = 0\n          timeoutState.height = 'auto';\n          timeoutState.overflow = null;\n        }\n\n        if (isCurrentHeightAuto) {\n          // This is the height to be animated to\n          timeoutState.height = newHeight;\n\n          // If previous height was 'auto'\n          // set starting height explicitly to be able to use transition\n          newHeight = contentHeight;\n        }\n\n        // Animation classes\n        var animationStateClasses = (0, _classnames2.default)((_cx = {}, _defineProperty(_cx, this.animationStateClasses.animating, true), _defineProperty(_cx, this.animationStateClasses.animatingUp, prevProps.height === 'auto' || height < prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingDown, height === 'auto' || height > prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingToHeightZero, timeoutState.height === 0), _defineProperty(_cx, this.animationStateClasses.animatingToHeightAuto, timeoutState.height === 'auto'), _defineProperty(_cx, this.animationStateClasses.animatingToHeightSpecific, timeoutState.height > 0), _cx));\n\n        // Animation classes to be put after animation is complete\n        var timeoutAnimationStateClasses = this.getStaticStateClasses(timeoutState.height);\n\n        // Set starting height and animating classes\n        // We are safe to call set state as it will not trigger infinite loop\n        // because of the \"height !== prevProps.height\" check\n        this.setState({ // eslint-disable-line react/no-did-update-set-state\n          animationStateClasses: animationStateClasses,\n          height: newHeight,\n          overflow: 'hidden',\n          // When animating from 'auto' we first need to set fixed height\n          // that change should be animated\n          shouldUseTransitions: !isCurrentHeightAuto\n        });\n\n        // Clear timeouts\n        clearTimeout(this.timeoutID);\n        clearTimeout(this.animationClassesTimeoutID);\n\n        if (isCurrentHeightAuto) {\n          // When animating from 'auto' we use a short timeout to start animation\n          // after setting fixed height above\n          timeoutState.shouldUseTransitions = true;\n\n          cancelAnimationFrames(this.animationFrameIDs);\n          this.animationFrameIDs = startAnimationHelper(function () {\n            _this2.setState(timeoutState);\n\n            // ANIMATION STARTS, run a callback if it exists\n            runCallback(onAnimationStart, { newHeight: timeoutState.height });\n          });\n\n          // Set static classes and remove transitions when animation ends\n          this.animationClassesTimeoutID = setTimeout(function () {\n            _this2.setState({\n              animationStateClasses: timeoutAnimationStateClasses,\n              shouldUseTransitions: false\n            });\n\n            // ANIMATION ENDS\n            // Hide content if height is 0 (to prevent tabbing into it)\n            _this2.hideContent(timeoutState.height);\n            // Run a callback if it exists\n            runCallback(onAnimationEnd, { newHeight: timeoutState.height });\n          }, totalDuration);\n        } else {\n          // ANIMATION STARTS, run a callback if it exists\n          runCallback(onAnimationStart, { newHeight: newHeight });\n\n          // Set end height, classes and remove transitions when animation is complete\n          this.timeoutID = setTimeout(function () {\n            timeoutState.animationStateClasses = timeoutAnimationStateClasses;\n            timeoutState.shouldUseTransitions = false;\n\n            _this2.setState(timeoutState);\n\n            // ANIMATION ENDS\n            // If height is auto, don't hide the content\n            // (case when element is empty, therefore height is 0)\n            if (height !== 'auto') {\n              // Hide content if height is 0 (to prevent tabbing into it)\n              _this2.hideContent(newHeight); // TODO solve newHeight = 0\n            }\n            // Run a callback if it exists\n            runCallback(onAnimationEnd, { newHeight: newHeight });\n          }, totalDuration);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      cancelAnimationFrames(this.animationFrameIDs);\n\n      clearTimeout(this.timeoutID);\n      clearTimeout(this.animationClassesTimeoutID);\n\n      this.timeoutID = null;\n      this.animationClassesTimeoutID = null;\n      this.animationStateClasses = null;\n    }\n  }, {\n    key: 'showContent',\n    value: function showContent(height) {\n      if (height === 0) {\n        this.contentElement.style.display = '';\n      }\n    }\n  }, {\n    key: 'hideContent',\n    value: function hideContent(newHeight) {\n      if (newHeight === 0) {\n        this.contentElement.style.display = 'none';\n      }\n    }\n  }, {\n    key: 'getStaticStateClasses',\n    value: function getStaticStateClasses(height) {\n      var _cx2;\n\n      return (0, _classnames2.default)((_cx2 = {}, _defineProperty(_cx2, this.animationStateClasses.static, true), _defineProperty(_cx2, this.animationStateClasses.staticHeightZero, height === 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightSpecific, height > 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightAuto, height === 'auto'), _cx2));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _cx3,\n          _this3 = this;\n\n      var _props2 = this.props,\n          animateOpacity = _props2.animateOpacity,\n          applyInlineTransitions = _props2.applyInlineTransitions,\n          children = _props2.children,\n          className = _props2.className,\n          contentClassName = _props2.contentClassName,\n          delay = _props2.delay,\n          duration = _props2.duration,\n          easing = _props2.easing,\n          id = _props2.id,\n          style = _props2.style;\n      var _state = this.state,\n          height = _state.height,\n          overflow = _state.overflow,\n          animationStateClasses = _state.animationStateClasses,\n          shouldUseTransitions = _state.shouldUseTransitions;\n\n\n      var componentStyle = _extends({}, style, {\n        height: height,\n        overflow: overflow || style.overflow\n      });\n\n      if (shouldUseTransitions && applyInlineTransitions) {\n        componentStyle.transition = 'height ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n\n        // Include transition passed through styles\n        if (style.transition) {\n          componentStyle.transition = style.transition + ', ' + componentStyle.transition;\n        }\n\n        // Add webkit vendor prefix still used by opera, blackberry...\n        componentStyle.WebkitTransition = componentStyle.transition;\n      }\n\n      var contentStyle = {};\n\n      if (animateOpacity) {\n        contentStyle.transition = 'opacity ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n        // Add webkit vendor prefix still used by opera, blackberry...\n        contentStyle.WebkitTransition = contentStyle.transition;\n\n        if (height === 0) {\n          contentStyle.opacity = 0;\n        }\n      }\n\n      var componentClasses = (0, _classnames2.default)((_cx3 = {}, _defineProperty(_cx3, animationStateClasses, true), _defineProperty(_cx3, className, className), _cx3));\n\n      // Check if user passed aria-hidden prop\n      var hasAriaHiddenProp = typeof this.props['aria-hidden'] !== 'undefined';\n      var ariaHidden = hasAriaHiddenProp ? this.props['aria-hidden'] : height === 0;\n\n      return _react2.default.createElement(\n        'div',\n        _extends({}, omit.apply(undefined, [this.props].concat(PROPS_TO_OMIT)), {\n          'aria-hidden': ariaHidden,\n          className: componentClasses,\n          id: id,\n          style: componentStyle\n        }),\n        _react2.default.createElement(\n          'div',\n          {\n            className: contentClassName,\n            style: contentStyle,\n            ref: function ref(el) {\n              return _this3.contentElement = el;\n            }\n          },\n          children\n        )\n      );\n    }\n  }]);\n\n  return AnimateHeight;\n}(_react2.default.Component);\n\nvar heightPropType = function heightPropType(props, propName, componentName) {\n  var value = props[propName];\n\n  if (typeof value === 'number' && value >= 0 || isPercentage(value) || value === 'auto') {\n    return null;\n  }\n\n  return new TypeError('value \"' + value + '\" of type \"' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)) + '\" is invalid type for ' + propName + ' in ' + componentName + '. ' + 'It needs to be a positive number, string \"auto\" or percentage string (e.g. \"15%\").');\n};\n\nAnimateHeight.propTypes = {\n  'aria-hidden': _propTypes2.default.bool,\n  animateOpacity: _propTypes2.default.bool,\n  animationStateClasses: _propTypes2.default.object,\n  applyInlineTransitions: _propTypes2.default.bool,\n  children: _propTypes2.default.any.isRequired,\n  className: _propTypes2.default.string,\n  contentClassName: _propTypes2.default.string,\n  delay: _propTypes2.default.number,\n  duration: _propTypes2.default.number,\n  easing: _propTypes2.default.string,\n  height: heightPropType,\n  id: _propTypes2.default.string,\n  onAnimationEnd: _propTypes2.default.func,\n  onAnimationStart: _propTypes2.default.func,\n  style: _propTypes2.default.object\n};\n\nAnimateHeight.defaultProps = {\n  animateOpacity: false,\n  animationStateClasses: ANIMATION_STATE_CLASSES,\n  applyInlineTransitions: true,\n  duration: 250,\n  delay: 0,\n  easing: 'ease',\n  style: {}\n};\n\nexports.default = AnimateHeight;","import React from 'react';\r\n\r\n// https://thenounproject.com/search/?q=dropdown&i=1871189\r\n// Dropdown by zalhan from the Noun Project\r\nconst Icon = ({ ...other }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 9\" className=\"icon\" {...other}>\r\n      <path d=\"M14.0059397,2.26485497e-14 C15.1072288,2.26485497e-14 15.3722573,0.627746582 14.5881847,1.41182411 L8.70999225,7.29005337 C8.317902,7.68214607 7.67653023,7.6764822 7.29009898,7.29005337 L1.41183294,1.41182411 C0.632099139,0.632095183 0.894513756,2.26485497e-14 1.99406028,2.26485497e-14 L14.0059397,2.26485497e-14 Z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Icon;\r\n","import React, {useState} from 'react';\r\nimport AnimateHeight from 'react-animate-height';\r\n\r\nimport './Expandable.scss';\r\n\r\ninterface Props {\r\n  header: React.ReactNode;\r\n  children: React.ReactNode;\r\n  element: React.ElementType;\r\n  className?: string;\r\n  expanded?: boolean;\r\n  inverseExpanded: () => void;\r\n}\r\n\r\nexport const Expandable = (props: Omit<Props, 'expanded'|'inverseExpanded'>) => {\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n  const handleToggle = () => {\r\n    setExpanded((prevExpanded: boolean) => !prevExpanded)\r\n  }\r\n\r\n  const { header, children, element: Element, className } = props;\r\n  \r\n  return (\r\n    <Element className={`expandable ${expanded ? 'expanded' : ''} ${className || ''}`}>\r\n      <div className=\"meta\" onClick={handleToggle}>\r\n        {header}\r\n      </div>\r\n      <AnimateHeight className=\"details\" height={expanded ? 'auto' : 0}>\r\n        {children}\r\n      </AnimateHeight>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport const ControlledExpandable = (props: Props) =>  {\r\n  const { header, children, element: Element, className } = props;\r\n\r\n  return (\r\n    <Element className={`expandable ${props.expanded ? 'expanded' : ''} ${className || ''}`}>\r\n      <div className=\"meta\" onClick={props.inverseExpanded}>\r\n        {header}\r\n      </div>\r\n      <AnimateHeight className=\"details\" height={props.expanded ? 'auto' : 0}>\r\n        {children}\r\n      </AnimateHeight>\r\n    </Element>\r\n  );\r\n}\r\n","/**\r\n * Gets raw max casts of a spell over a period of time.\r\n * @param cooldown the cooldown time of the spell, in seconds\r\n * @param duration the duration of the time period to assess, in milliseconds\r\n * @param charges the number of charges the spell has\r\n */\r\nexport default function calculateMaxCasts(cooldown: number, duration: number, charges = 1) {\r\n  return (duration / 1000 / cooldown) + charges - 1;\r\n}\r\n","import EventsNormalizer from 'parser/core/EventsNormalizer';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport { EventType } from 'parser/core/Events';\r\n\r\nclass ShadowfiendNormalizer extends EventsNormalizer {\r\n\r\n  normalize(events) {\r\n    events.forEach((event, eventIndex) => {\r\n      if (event.type === EventType.Cast) {\r\n        const spellId = event.ability.guid;\r\n        if (spellId === SPELLS.SHADOWFIEND_WITH_GLYPH_OF_THE_SHA.id || spellId === SPELLS.LIGHTSPAWN.id || spellId === SPELLS.VOIDLING.id) {\r\n          event.ability.oldGuid = event.ability.guid;\r\n          event.ability.guid = SPELLS.SHADOWFIEND.id;\r\n          event.__modified = true;\r\n        }\r\n      }\r\n    });\r\n    return events;\r\n  }\r\n}\r\n\r\nexport default ShadowfiendNormalizer;\r\n"],"sourceRoot":""}