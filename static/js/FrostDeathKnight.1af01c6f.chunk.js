(this.webpackJsonpwowanalyzer=this.webpackJsonpwowanalyzer||[]).push([[28],{744:function(e,t,a){"use strict";a.r(t);var n=a(8),i=a(10),s=a(11),r=a(776),o=a(815),c=a(26),l=a(3),u=a(785),d=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return a}(u.b);d.cooldownSpells=[].concat(Object(c.a)(u.b.cooldownSpells),[{spell:l.a.BREATH_OF_SINDRAGOSA_TALENT,summary:[u.a.DAMAGE]},{spell:l.a.PILLAR_OF_FROST,summary:[u.a.DAMAGE]},{spell:l.a.OBLITERATION_TALENT,summary:[u.a.DAMAGE]}]),d.ignoredSpells=[].concat(Object(c.a)(u.b.ignoredSpells),[l.a.REMORSELESS_WINTER_DAMAGE.id,l.a.REMORSELESS_WINTER_ENV_CAST.id]);var E=d,h=a(9),f=a(0),m=a.n(f),g=a(4),T=a(753),y=a(121),p=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"spellbook",value:function(){var e=this.selectedCombatant;return[{spell:l.a.PILLAR_OF_FROST,buffSpellId:l.a.PILLAR_OF_FROST.id,category:a.SPELL_CATEGORIES.COOLDOWNS,gcd:null,cooldown:60,castEfficiency:{suggestion:!0,recommendedEfficiency:.85,extraSuggestion:"You should aim to use this off CD."},timelineSortIndex:0},{spell:l.a.EMPOWER_RUNE_WEAPON,buffSpellId:l.a.EMPOWER_RUNE_WEAPON.id,category:a.SPELL_CATEGORIES.COOLDOWNS,gcd:null,cooldown:120,castEfficiency:{suggestion:!0,recommendedEfficiency:.8,extraSuggestion:m.a.createElement(m.a.Fragment,null,"You should use this with every ",m.a.createElement(g.a,{id:l.a.BREATH_OF_SINDRAGOSA_TALENT.id})," if it is talented. Otherwise use it with ",m.a.createElement(g.a,{id:l.a.PILLAR_OF_FROST.id}),".")},timelineSortIndex:1},{spell:l.a.HORN_OF_WINTER_TALENT,category:a.SPELL_CATEGORIES.COOLDOWNS,gcd:{base:1500},cooldown:45,enabled:e.hasTalent(l.a.HORN_OF_WINTER_TALENT.id),castEfficiency:{suggestion:!0,recommendedEfficiency:.9}},{spell:l.a.BREATH_OF_SINDRAGOSA_TALENT,buffSpellId:l.a.BREATH_OF_SINDRAGOSA_TALENT.id,category:a.SPELL_CATEGORIES.COOLDOWNS,gcd:null,cooldown:120,enabled:e.hasTalent(l.a.BREATH_OF_SINDRAGOSA_TALENT.id),castEfficiency:{suggestion:!0,recommendedEfficiency:.9,extraSuggestion:"You should only save this if there is a mechanic you will need to deal with in the next 30 seconds or if you need to save it for a particular phase"},timelineSortIndex:2},{spell:l.a.FROSTWYRMS_FURY,category:a.SPELL_CATEGORIES.COOLDOWNS,gcd:{base:1500},cooldown:180,castEfficiency:{suggestion:!0,recommendedEfficiency:.9,extraSuggestion:m.a.createElement(m.a.Fragment,null,"Although you normally want to use this off CD, you can save it to line it up with ",m.a.createElement(g.a,{id:l.a.PILLAR_OF_FROST.id,icon:!0}),".  You can also hold it if you know there will be an opportunity to hit more than one enemy in the next 30 seconds.")}},{spell:l.a.HYPOTHERMIC_PRESENCE_TALENT,category:a.SPELL_CATEGORIES.COOLDOWNS,gcd:null,cooldown:45,enabled:e.hasTalent(l.a.HYPOTHERMIC_PRESENCE_TALENT.id)},{spell:l.a.RAISE_DEAD_BLOOD_FROST,category:a.SPELL_CATEGORIES.COOLDOWNS,gcd:null,cooldown:120},{spell:l.a.OBLITERATE_CAST,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500}},{spell:l.a.REMORSELESS_WINTER,buffSpellId:l.a.REMORSELESS_WINTER.id,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500},cooldown:20,castEfficiency:{suggestion:!1,recommendedEfficiency:.9}},{spell:l.a.HOWLING_BLAST,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500}},{spell:l.a.FROST_STRIKE_CAST,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500}},{spell:l.a.FROSTSCYTHE_TALENT,category:a.SPELL_CATEGORIES.ROTATIONAL_AOE,gcd:{base:1500},enabled:e.hasTalent(l.a.FROSTSCYTHE_TALENT.id)},{spell:l.a.GLACIAL_ADVANCE_TALENT,category:a.SPELL_CATEGORIES.ROTATIONAL,cooldown:function(e){return 6/(1+e)},gcd:{base:1500},enabled:e.hasTalent(l.a.GLACIAL_ADVANCE_TALENT.id)},{spell:l.a.SACRIFICIAL_PACT,category:a.SPELL_CATEGORIES.COOLDOWNS,cooldown:120,gcd:{base:1500},castEfficiency:{suggestion:!0,recommendedEfficiency:.9}},{spell:l.a.ANTI_MAGIC_SHELL,buffSpellId:l.a.ANTI_MAGIC_SHELL.id,category:a.SPELL_CATEGORIES.DEFENSIVE,gcd:null,cooldown:60,isDefensive:!0},{spell:l.a.ICEBOUND_FORTITUDE,buffSpellId:l.a.ICEBOUND_FORTITUDE.id,category:a.SPELL_CATEGORIES.DEFENSIVE,gcd:null,cooldown:180,isDefensive:!0},{spell:l.a.DEATH_STRIKE,category:a.SPELL_CATEGORIES.DEFENSIVE,gcd:{base:1500},isDefensive:!0},{spell:l.a.DEATH_PACT_TALENT,buffSpellId:l.a.DEATH_PACT_TALENT.id,category:a.SPELL_CATEGORIES.DEFENSIVE,gcd:null,cooldown:120,isDefensive:!0,enabled:e.hasTalent(l.a.DEATH_PACT_TALENT.id)},{spell:l.a.ANTI_MAGIC_ZONE,buffSpellId:l.a.ANTI_MAGIC_ZONE_BUFF.id,category:a.SPELL_CATEGORIES.DEFENSIVE,gcd:null,cooldown:120,isDefensive:!0},{spell:l.a.LICHBORNE,buffSpellId:l.a.LICHBORNE.id,category:a.SPELL_CATEGORIES.DEFENSIVE,gcd:null,cooldown:120,isDefensive:!0},{spell:l.a.DEATH_GRIP,category:a.SPELL_CATEGORIES.UTILITY,gcd:{static:500},cooldown:25},{spell:l.a.CHAINS_OF_ICE,category:e.hasTalent(l.a.COLD_HEART_TALENT.id)?a.SPELL_CATEGORIES.ROTATIONAL:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500}},{spell:l.a.DEATHS_ADVANCE,category:a.SPELL_CATEGORIES.UTILITY,gcd:null,cooldown:45},{spell:l.a.DARK_COMMAND,category:a.SPELL_CATEGORIES.UTILITY,gcd:null,cooldown:8},{spell:l.a.RAISE_ALLY,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500},cooldown:600},{spell:l.a.MIND_FREEZE,category:a.SPELL_CATEGORIES.UTILITY,gcd:null,cooldown:15},{spell:l.a.PATH_OF_FROST,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500}},{spell:l.a.ASPHYXIATE_TALENT,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500},cooldown:45},{spell:l.a.CONTROL_UNDEAD,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500}},{spell:l.a.BLINDING_SLEET_TALENT,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500},cooldown:60,enabled:e.hasTalent(l.a.BLINDING_SLEET_TALENT.id)},{spell:l.a.WRAITH_WALK_TALENT,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500},cooldown:60,enabled:e.hasTalent(l.a.WRAITH_WALK_TALENT.id)},{spell:l.a.DEATH_AND_DECAY,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500},cooldown:30},{spell:l.a.DEATH_COIL,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500}},{spell:l.a.RUNE_1,category:a.SPELL_CATEGORIES.HIDDEN,cooldown:function(e){return 10/(1+e)},charges:2},{spell:l.a.RUNE_2,category:a.SPELL_CATEGORIES.HIDDEN,cooldown:function(e){return 10/(1+e)},charges:2},{spell:l.a.RUNE_3,category:a.SPELL_CATEGORIES.HIDDEN,cooldown:function(e){return 10/(1+e)},charges:2},{spell:l.a.SWARMING_MIST,category:a.SPELL_CATEGORIES.COOLDOWNS,cooldown:60,gcd:{base:1500},castEfficiency:{suggestion:!0,recommendedEfficiency:.9},enabled:e.hasCovenant(y.a.VENTHYR.id)},{spell:l.a.DOOR_OF_SHADOWS,category:a.SPELL_CATEGORIES.UTILITY,cooldown:60,gcd:{base:1500},enabled:e.hasCovenant(y.a.VENTHYR.id)},{spell:l.a.ABOMINATION_LIMB,category:a.SPELL_CATEGORIES.COOLDOWNS,cooldown:120,gcd:{base:1500},castEfficiency:{suggestion:!0,recommendedEfficiency:.9},enabled:e.hasCovenant(y.a.NECROLORD.id)},{spell:l.a.FLESHCRAFT,category:a.SPELL_CATEGORIES.DEFENSIVE,cooldown:120,enabled:e.hasCovenant(y.a.NECROLORD.id)},{spell:l.a.SHACKLE_THE_UNWORTHY,category:a.SPELL_CATEGORIES.COOLDOWNS,cooldown:60,gcd:{base:1500},castEfficiency:{suggestion:!0,recommendedEfficiency:.9},enabled:e.hasCovenant(y.a.KYRIAN.id)},{spell:l.a.DEATHS_DUE,category:a.SPELL_CATEGORIES.ROTATIONAL,cooldown:30,gcd:{base:1500},castEfficiency:{suggestion:!0,recommendedEfficiency:.9},enabled:e.hasCovenant(y.a.NIGHT_FAE.id)},{spell:l.a.SOULSHAPE,category:a.SPELL_CATEGORIES.UTILITY,cooldown:30,gcd:{base:1500},enabled:e.hasCovenant(y.a.NIGHT_FAE.id)}]}}]),a}(T.a),O=a(780),b=a(164),R=a(33),v=a(13),A=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"suggestions",value:function(e){e(this.downtimeSuggestionThresholds).addSuggestion((function(e,t,a){return e(m.a.createElement(m.a.Fragment,null,"Your downtime can be improved. Try to Always Be Casting (ABC), reducing time away from the boss unless due to mechanics.  If you do have to move, try casting filler spells, such as ",m.a.createElement(g.a,{id:l.a.HOWLING_BLAST.id})," or ",m.a.createElement(g.a,{id:l.a.REMORSELESS_WINTER.id}),".")).icon("spell_mage_altertime").actual(v.i18n._({id:"deathknight.frost.suggestions.alwaysBeCasting",defaults:"{0}% downtime",values:{0:Object(R.e)(t)}})).recommended("<".concat(Object(R.e)(a),"% is recommended"))}))}},{key:"downtimeSuggestionThresholds",get:function(){return{actual:this.downtimePercentage,isGreaterThan:{minor:.3,average:.35,major:.45},style:b.a.PERCENTAGE}}}]),a}(O.a),_=a(7),S=a(754),L=a(766),w=a(15),I=a(43),C=[l.a.OBLITERATE_MAIN_HAND_DAMAGE,l.a.OBLITERATE_OFF_HAND_DAMAGE,l.a.FROST_STRIKE_MAIN_HAND_DAMAGE,l.a.FROST_STRIKE_OFF_HAND_DAMAGE,l.a.FROSTSCYTHE_TALENT],N=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).lastCritTime=-2e3,i.hasIcecap=void 0,i.hasIcecap=i.selectedCombatant.hasTalent(l.a.ICECAP_TALENT.id),i.addEventListener(w.f.damage.by(I.a).spell(C),i.onDamage),i}return Object(h.a)(a,[{key:"onDamage",value:function(e){if(this.hasIcecap&&(e.hitType===L.a.CRIT||e.hitType===L.a.BLOCKED_CRIT)){var t=this.lastCritTime+1e3<=e.timestamp;this.isOnCooldown(l.a.PILLAR_OF_FROST.id)&&t&&(this.reduceCooldown(l.a.PILLAR_OF_FROST.id,4e3),this.lastCritTime=e.timestamp)}}}]),a}(S.b);N.dependencies=Object(_.a)({},S.b.dependencies);var P=N,k=a(203),D=a(767),F=a(757),j=a(777),G=a(49),H=a(781),U=a(747),B=a(746),M=a(808),Y=a(88),x=a(120),W=a(66),K=a(773),z=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).mostRecentTickTime=0,i._totalHypothermicPresenceReduction=0,i.resource=Y.a.RUNIC_POWER,i.addEventListener(w.f.damage.by(I.a).spell(l.a.BREATH_OF_SINDRAGOSA_TALENT_DAMAGE_TICK),i.onBreathDamage),i}return Object(h.a)(a,[{key:"onCast",value:function(e){e.ability.guid===l.a.BREATH_OF_SINDRAGOSA_TALENT.id?(this.spendersObj[l.a.BREATH_OF_SINDRAGOSA_TALENT.id]||this.initSpenderAbility(l.a.BREATH_OF_SINDRAGOSA_TALENT.id),this.spendersObj[l.a.BREATH_OF_SINDRAGOSA_TALENT.id].casts+=1):Object(x.a)(Object(W.a)(a.prototype),"onCast",this).call(this,e)}},{key:"onBreathDamage",value:function(e){if(e.timestamp!==this.mostRecentTickTime){var t={type:w.b.Cast,timestamp:e.timestamp,sourceID:e.sourceID,targetID:e.targetID,ability:e.ability,sourceIsFriendly:e.sourceIsFriendly,targetIsFriendly:e.targetIsFriendly},a=this.getHypothermicPresenceReduction(160,e.timestamp);a/=10,this.spendersObj[l.a.BREATH_OF_SINDRAGOSA_TALENT.id].spentByCast.push(a),a>0&&(this.spendersObj[l.a.BREATH_OF_SINDRAGOSA_TALENT.id].spent+=a),this.current-=a,this.resourceUpdates.push({timestamp:e.timestamp,current:this.current,waste:0,generated:0,used:a}),this.triggerSpendEvent(a,t),this.mostRecentTickTime=e.timestamp}}},{key:"getHypothermicPresenceReduction",value:function(e,t){if(this.selectedCombatant.hasBuff(l.a.HYPOTHERMIC_PRESENCE_TALENT.id,t)){var a=.65*e;this._totalHypothermicPresenceReduction+=e-a,e=a}return e}},{key:"getReducedCost",value:function(e){var t,a=null===(t=this.getResource(e))||void 0===t?void 0:t.cost;if(a)return this.getHypothermicPresenceReduction(a,e.timestamp)/10}},{key:"totalHypothermicPresenceReduction",get:function(){return Math.round(this._totalHypothermicPresenceReduction/10)}}]),a}(K.a),V=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).runicPowerTracker=void 0,e}return Object(h.a)(a,[{key:"suggestions",value:function(e){var t=this;e(this.suggestionThresholds).addSuggestion((function(e,a,n){return e("You wasted ".concat(Object(R.e)(t.wastedPercent),"% of your Runic Power.")).icon("inv_sword_62").actual(v.i18n._({id:"deathknight.frost.suggestions.runicPower.wasted",defaults:"{0}% wasted",values:{0:Object(R.e)(a)}})).recommended("<".concat(Object(R.e)(n),"% is recommended"))}))}},{key:"statistic",value:function(){return m.a.createElement(B.a,{position:U.a.CORE(11),size:"small",tooltip:"".concat(this.runicPowerTracker.wasted," out of ").concat(this.runicPowerTracker.wasted+this.runicPowerTracker.generated," runic power wasted.")},m.a.createElement(M.a,{resource:Y.a.RUNIC_POWER,value:"".concat(Object(R.e)(this.wastedPercent)," %"),label:"Runic Power wasted"}))}},{key:"tab",value:function(){var e=this;return{title:"Runic Power usage",url:"runic-power-usage",render:function(){return m.a.createElement(G.a,null,m.a.createElement(H.a,{tracker:e.runicPowerTracker,showSpenders:!0}))}}}},{key:"wastedPercent",get:function(){return this.runicPowerTracker.wasted/(this.runicPowerTracker.wasted+this.runicPowerTracker.generated)||0}},{key:"efficiencySuggestionThresholds",get:function(){return{actual:1-this.wastedPercent,isLessThan:{minor:.95,average:.9,major:.85},style:b.a.PERCENTAGE}}},{key:"suggestionThresholds",get:function(){return{actual:this.wastedPercent,isGreaterThan:{minor:.05,average:.1,major:.15},style:b.a.PERCENTAGE}}}]),a}(I.c);V.dependencies={runicPowerTracker:z};var q=V,Z=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(h.a)(a,[{key:"suggestionThresholds",get:function(){return{actual:1-this.runeEfficiency,isGreaterThan:{minor:.1,average:.2,major:.3},style:b.a.PERCENTAGE}}},{key:"suggestionThresholdsEfficiency",get:function(){return{actual:this.runeEfficiency,isLessThan:{minor:.9,average:.8,major:.7},style:b.a.PERCENTAGE}}}]),a}(a(848).a),J=a(770),X=a(762),Q=a(763),$=a(771),ee=a(772),te=function(e){var t=e.combatant,a=e.castEfficiency,n=e.thresholds,i=function(e){return m.a.createElement(ee.a,Object.assign({castEfficiency:a.getCastEfficiencyForSpellId(e.spell)},e))};return m.a.createElement(J.a,null,m.a.createElement(X.c,{name:"Use cooldowns as often as possible",description:m.a.createElement(m.a.Fragment,null,"You should aim to use your cooldowns as often as you can to maximize your damage output."," ",m.a.createElement("a",{href:"https://www.wowhead.com/frost-death-knight-rotation-guide#cooldown-usage",target:"_blank",rel:"noopener noreferrer"},"More info."))},m.a.createElement(i,{spell:l.a.PILLAR_OF_FROST.id}),t.hasTalent(l.a.BREATH_OF_SINDRAGOSA_TALENT.id)&&m.a.createElement(i,{spell:l.a.BREATH_OF_SINDRAGOSA_TALENT.id}),m.a.createElement(i,{spell:l.a.EMPOWER_RUNE_WEAPON.id}),a.getCastEfficiencyForSpellId(l.a.ARCANE_TORRENT_RUNIC_POWER.id)&&m.a.createElement(i,{spell:l.a.ARCANE_TORRENT_RUNIC_POWER.id})),m.a.createElement(X.c,{name:"Try to avoid being inactive for a large portion of the fight",description:m.a.createElement(m.a.Fragment,null,"While some downtime is inevitable in fights with movement, you should aim to reduce downtime to prevent capping Runes.  In a worst case scenario, you can cast ",m.a.createElement(g.a,{id:l.a.HOWLING_BLAST.id})," to prevent Rune capping")},m.a.createElement(Q.a,{name:"Downtime",thresholds:n.downtimeSuggestionThresholds})),m.a.createElement(X.c,{name:"Avoid capping Runes",description:"Death Knights are a resource based class, relying on Runes and Runic Power to cast core abilities.  You can have up to three runes recharging at once.  You want to dump runes whenever you have 4 or more runes to make sure none are wasted"},m.a.createElement(Q.a,{name:"Rune Efficiency",thresholds:n.runeEfficiency})),m.a.createElement(X.c,{name:"Avoid capping Runic Power",description:m.a.createElement(m.a.Fragment,null,"Death Knights are a resource based class, relying on Runes and Runic Power to cast core abilities.  Cast ",m.a.createElement(g.a,{id:l.a.FROST_STRIKE_CAST.id})," when you have 73+ Runic Power to avoid overcapping.")},m.a.createElement(Q.a,{name:"Runic Power Efficiency",thresholds:n.runicPowerEfficiency})),m.a.createElement($.a,{thresholds:n}))},ae=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).combatants=void 0,e.castEfficiency=void 0,e.preparationRuleAnalyzer=void 0,e.alwaysBeCasting=void 0,e.runeTracker=void 0,e.runicPowerDetails=void 0,e}return Object(h.a)(a,[{key:"render",value:function(){return m.a.createElement(te,{combatant:this.combatants.selected,castEfficiency:this.castEfficiency,thresholds:Object(_.a)(Object(_.a)({},this.preparationRuleAnalyzer.thresholds),{},{runeEfficiency:this.runeTracker.suggestionThresholdsEfficiency,runicPowerEfficiency:this.runicPowerDetails.efficiencySuggestionThresholds,downtimeSuggestionThresholds:this.alwaysBeCasting.downtimeSuggestionThresholds})})}}]),a}(k.a);ae.dependencies={combatants:F.a,castEfficiency:D.a,alwaysBeCasting:A,preparationRuleAnalyzer:j.a,runicPowerDetails:q,runeTracker:Z};var ne=ae,ie=a(756),se=a(748),re=a(760),oe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).enemies=void 0,e}return Object(h.a)(a,[{key:"suggestions",value:function(e){e(this.frostFeverUptime).isLessThan(.95).addSuggestion((function(e,t,a){return e(m.a.createElement("span",null,"Your ",m.a.createElement(g.a,{id:l.a.FROST_FEVER.id})," uptime can be improved. Try to pay attention to when Frost Fever is about to fall off the priority target, using ",m.a.createElement(g.a,{id:l.a.HOWLING_BLAST.id})," to refresh Frost Fever. Using a debuff tracker can help.")).icon(l.a.FROST_FEVER.icon).actual(v.i18n._({id:"deathknight.frost.suggestions.frostFever.uptime",defaults:"{0}% Frost Fever uptime",values:{0:Object(R.e)(t)}})).recommended(">".concat(Object(R.e)(a),"% is recommended")).regular(a-.05).major(a-.15)}))}},{key:"statistic",value:function(){return m.a.createElement(B.a,{position:U.a.CORE(20),size:"flexible"},m.a.createElement(se.a,{spell:l.a.FROST_FEVER},m.a.createElement(m.a.Fragment,null,m.a.createElement(re.a,null)," ",Object(R.e)(this.frostFeverUptime),"% ",m.a.createElement("small",null,"uptime"))))}},{key:"frostFeverUptime",get:function(){return this.enemies.getBuffUptime(l.a.FROST_FEVER.id)/this.owner.fightDuration}}]),a}(I.c);oe.dependencies={enemies:ie.a};var ce=oe,le=a(755),ue=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).rimeProcs=0,i.lastGCDTime=0,i.lastGCDDuration=0,i.lastProcTime=0,i.refreshedRimeProcs=0,i.expiredRimeProcs=0,i.addEventListener(w.f.applybuff.by(I.a).spell(l.a.RIME),i.onApplyBuff),i.addEventListener(w.f.removebuff.by(I.a).spell(l.a.RIME),i.onRemoveBuff),i.addEventListener(w.f.refreshbuff.by(I.a).spell(l.a.RIME),i.onRefreshBuff),i.addEventListener(w.f.GlobalCooldown,i.onGlobalCooldown),i}return Object(h.a)(a,[{key:"onApplyBuff",value:function(e){this.rimeProcs+=1,this.lastProcTime=e.timestamp}},{key:"onRemoveBuff",value:function(e){e.timestamp-this.lastProcTime>15e3&&(this.expiredRimeProcs+=1)}},{key:"onRefreshBuff",value:function(e){e.timestamp-this.lastGCDTime<this.lastGCDDuration+100||(this.refreshedRimeProcs+=1)}},{key:"onGlobalCooldown",value:function(e){this.lastGCDTime=e.timestamp,this.lastGCDDuration=e.duration}},{key:"suggestions",value:function(e){var t=this;e(this.suggestionThresholds).addSuggestion((function(e,a,n){return e(m.a.createElement(m.a.Fragment,null," You are wasting ",m.a.createElement(g.a,{id:l.a.RIME.id})," procs. You should be casting ",m.a.createElement(g.a,{id:l.a.HOWLING_BLAST.id})," as soon as possible when you have a Rime proc to avoid wasting it.")).icon(l.a.RIME.icon).actual(v.i18n._({id:"deathknight.frost.suggestions.rime.wastedProcs",defaults:"{0}% of Rime procs were either refreshed and lost or expired without being used",values:{0:Object(R.e)(t.wastedProcRate)}})).recommended("<".concat(n," is recommended"))}))}},{key:"statistic",value:function(){return m.a.createElement(B.a,{position:U.a.CORE(5),size:"flexible",tooltip:"You wasted ".concat(this.totalWastedProcs," out of ").concat(this.rimeProcs," Rime procs (").concat(Object(R.e)(this.wastedProcRate),"%).  ").concat(this.expiredRimeProcs," procs expired without being used and ").concat(this.refreshedRimeProcs," procs were overwritten by new procs.")},m.a.createElement(se.a,{spell:l.a.RIME},m.a.createElement(m.a.Fragment,null,Object(R.e)(this.efficiency)," % ",m.a.createElement("small",null,"efficiency"))))}},{key:"totalWastedProcs",get:function(){return this.refreshedRimeProcs+this.expiredRimeProcs}},{key:"wastedProcRate",get:function(){return this.totalWastedProcs/this.rimeProcs}},{key:"efficiency",get:function(){return 1-this.wastedProcRate}},{key:"suggestionThresholds",get:function(){return{actual:this.efficiency,isLessThan:{minor:.95,average:.9,major:.85},style:b.a.PERCENTAGE,suffix:"Average"}}}]),a}(I.c);ue.dependencies={abilityTracker:le.a};var de=ue,Ee=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).abilityTracker=void 0,i.enemies=void 0,i.castsWithoutRime=0,i.addEventListener(w.f.cast.by(I.a).spell(l.a.HOWLING_BLAST),i.onCast),i}return Object(h.a)(a,[{key:"onCast",value:function(e){var t=this.enemies.getEntity(e);t&&!this.selectedCombatant.hasBuff(l.a.RIME.id,e.timestamp)&&t.hasBuff(l.a.FROST_FEVER.id)&&(this.castsWithoutRime+=1)}},{key:"statistic",value:function(){return m.a.createElement(B.a,{position:U.a.CORE(50),size:"flexible",tooltip:"You should aim to get this as close to 0 as possible. It is almost always a DPS loss to cast Howling Blast without Rime. It is okay to do this during extended periods of being out of melee range. In this case, it is acceptable to dump runes to build RP and stop yourself from capping runes. It is also okay to hardcast to apply Frost Fever to a target. The analyzer does not count it against you when you do this"},m.a.createElement(se.a,{spell:l.a.HOWLING_BLAST},m.a.createElement(m.a.Fragment,null,this.castsWithoutRime," ",m.a.createElement("small",null,"casts without Rime proc"))))}}]),a}(I.c);Ee.dependencies={abilityTracker:le.a,enemies:ie.a};var he=Ee,fe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).abilityTracker=void 0,i.kmProcs=0,i.lastGCDTime=0,i.lastGCDDuration=0,i.lastProcTime=0,i.refreshedKMProcs=0,i.expiredKMProcs=0,i.addEventListener(w.f.GlobalCooldown,i.globalCooldown),i.addEventListener(w.f.applybuff.by(I.a).spell(l.a.KILLING_MACHINE),i.onApplyBuff),i.addEventListener(w.f.removebuff.by(I.a).spell(l.a.KILLING_MACHINE),i.onRemoveBuff),i.addEventListener(w.f.refreshbuff.by(I.a).spell(l.a.KILLING_MACHINE),i.onRefreshBuff),i}return Object(h.a)(a,[{key:"onApplyBuff",value:function(e){this.kmProcs+=1,this.lastProcTime=e.timestamp}},{key:"onRemoveBuff",value:function(e){e.timestamp-this.lastProcTime>1e4&&(this.expiredKMProcs+=1)}},{key:"onRefreshBuff",value:function(e){e.timestamp-this.lastGCDTime<this.lastGCDDuration+100||(this.refreshedKMProcs+=1)}},{key:"globalCooldown",value:function(e){this.lastGCDTime=e.timestamp,this.lastGCDDuration=e.duration}},{key:"suggestions",value:function(e){var t=this;e(this.suggestionThresholds).addSuggestion((function(e,a,n){return e(m.a.createElement(m.a.Fragment,null," You wasted ",m.a.createElement(g.a,{id:l.a.KILLING_MACHINE.id})," procs. You should be casting ",m.a.createElement(g.a,{id:l.a.OBLITERATE_CAST.id})," or ",m.a.createElement(g.a,{id:l.a.FROSTSCYTHE_TALENT.id})," within 1 or 2 GCDs of gaining a Killing Machine proc to avoid wasting it. See one of the guides on the About tab for more information on when another ability takes precedence over spending Killing Machine")).icon(l.a.KILLING_MACHINE.icon).actual(v.i18n._({id:"deathknight.frost.suggestions.killingMachine.wasted",defaults:"{0}% of Killing Machine procs were either refreshed and lost or expired without being used",values:{0:Object(R.e)(t.wastedProcRate)}})).recommended("<".concat(Object(R.e)(1-n),"% is recommended"))}))}},{key:"statistic",value:function(){return m.a.createElement(B.a,{position:U.a.CORE(5),size:"flexible",tooltip:m.a.createElement(m.a.Fragment,null,"You wasted ",this.totalWastedProcs," out of ",this.totalProcs," Killing Machine procs (",Object(R.e)(this.wastedProcRate),"%). ",m.a.createElement("br",null),this.expiredKMProcs," procs expired without being used and ",this.refreshedKMProcs," procs were overwritten by new procs.")},m.a.createElement(se.a,{spell:l.a.KILLING_MACHINE},m.a.createElement(m.a.Fragment,null,Object(R.e)(this.efficiency)," % ",m.a.createElement("small",null,"efficiency"))))}},{key:"totalWastedProcs",get:function(){return this.refreshedKMProcs+this.expiredKMProcs}},{key:"wastedProcRate",get:function(){return this.totalWastedProcs/this.kmProcs}},{key:"totalProcs",get:function(){return this.kmProcs+this.refreshedKMProcs}},{key:"efficiency",get:function(){return 1-this.wastedProcRate}},{key:"suggestionThresholds",get:function(){return{actual:this.efficiency,isLessThan:{minor:.95,average:.9,major:.85},style:b.a.PERCENTAGE,suffix:"Average"}}}]),a}(I.c);fe.dependencies={abilityTracker:le.a};var me=fe,ge=a(119),Te=a(750),ye=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).beginTimestamp=0,i.casts=0,i.badCasts=0,i.totalDuration=0,i.breathActive=!1,i.active=i.selectedCombatant.hasTalent(l.a.BREATH_OF_SINDRAGOSA_TALENT.id),i.active?(i.addEventListener(w.f.cast.by(I.a).spell(l.a.BREATH_OF_SINDRAGOSA_TALENT),i.onCast),i.addEventListener(w.f.removebuff.by(I.a).spell(l.a.BREATH_OF_SINDRAGOSA_TALENT),i.onRemoveBuff),i.addEventListener(w.f.fightend,i.onFightEnd),i):Object(ge.a)(i)}return Object(h.a)(a,[{key:"onCast",value:function(e){this.casts+=1,this.beginTimestamp=e.timestamp,this.breathActive=!0}},{key:"onRemoveBuff",value:function(e){this.breathActive=!1;var t=e.timestamp-this.beginTimestamp;t<25e3&&(this.badCasts+=1),this.totalDuration+=t}},{key:"onFightEnd",value:function(e){this.breathActive&&(this.casts-=1)}},{key:"suggestions",value:function(e){var t=this;e(this.suggestionThresholds).addSuggestion((function(e,a,n){return e(m.a.createElement(m.a.Fragment,null," You are not getting good uptime from your ",m.a.createElement(g.a,{id:l.a.BREATH_OF_SINDRAGOSA_TALENT.id})," casts. A good cast is one that lasts 25 seconds or more.  To ensure a good duration, make sure you have 70+ Runic Power pooled and have less than 4 Runes available before you start the cast.  Also make sure to use ",m.a.createElement(g.a,{id:l.a.EMPOWER_RUNE_WEAPON.id})," within a few seconds of casting Breath of Sindragosa. Pay close attention to your Runic Power and make sure you are not overcapping. ",t.tickingOnFinishedString)).icon(l.a.BREATH_OF_SINDRAGOSA_TALENT.icon).actual(v.i18n._({id:"deathknight.frost.suggestions.breathOfSindragosa.uptime",defaults:"You averaged {0} seconds of uptime per cast",values:{0:t.averageDuration.toFixed(1)}})).recommended(">".concat(n," seconds is recommended"))}))}},{key:"statistic",value:function(){return m.a.createElement(B.a,{tooltip:"You cast Breath of Sindragosa ".concat(this.casts," times for a combined total of ").concat((this.totalDuration/1e3).toFixed(1)," seconds.  ").concat(this.badCasts," casts were under 25 seconds.  ").concat(this.tickingOnFinishedString),position:Te.a.CORE(60),size:"flexible"},m.a.createElement(se.a,{spell:l.a.BREATH_OF_SINDRAGOSA_TALENT},m.a.createElement(m.a.Fragment,null,this.averageDuration.toFixed(1),"s  ",m.a.createElement("small",null,"average duration"))))}},{key:"tickingOnFinishedString",get:function(){return this.breathActive?"Your final cast was not counted in the average since it was still ticking when the fight ended":""}},{key:"averageDuration",get:function(){return(this.totalDuration/this.casts||0)/1e3}},{key:"suggestionThresholds",get:function(){return{actual:this.averageDuration,isLessThan:{minor:25,average:22.5,major:20},style:b.a.SECONDS,suffix:"Average"}}}]),a}(I.c),pe=a(809),Oe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).runicPowerTracker=void 0,i.active=i.selectedCombatant.hasTalent(l.a.HYPOTHERMIC_PRESENCE_TALENT.id),i.active?i:Object(ge.a)(i)}return Object(h.a)(a,[{key:"statistic",value:function(){return m.a.createElement(B.a,{position:Te.a.OPTIONAL(50),size:"flexible"},m.a.createElement(pe.a,{spell:l.a.HYPOTHERMIC_PRESENCE_TALENT,value:"".concat(this.runicPowerTracker.totalHypothermicPresenceReduction),label:"Runic Power saved"}))}}]),a}(I.c);Oe.dependencies={runicPowerTracker:z};var be=Oe,Re=a(921),ve=a(751),Ae=a(752),_e=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).totalCasts=0,i.bonusDamage=0,i.totalStacks=0,i.currentStacks=0,i.extendedDuration=0,i.active=i.selectedCombatant.hasTalent(l.a.GATHERING_STORM_TALENT.id),i.active?(i.addEventListener(w.f.applybuff.by(I.a).spell(l.a.GATHERING_STORM_TALENT_BUFF),i.onApplyBuff),i.addEventListener(w.f.applybuffstack.by(I.a).spell(l.a.GATHERING_STORM_TALENT_BUFF),i.onApplyBuffStack),i.addEventListener(w.f.damage.by(I.a).spell(l.a.REMORSELESS_WINTER_DAMAGE),i.onDamage),i.addEventListener(w.f.removebuff.by(I.a).spell(l.a.GATHERING_STORM_TALENT_BUFF),i.onRemoveBuff),i.addEventListener(w.f.cast.by(I.a),i.onCast),i):Object(ge.a)(i)}return Object(h.a)(a,[{key:"onApplyBuff",value:function(e){this.currentStacks=1,this.totalCasts+=1,this.totalStacks+=1}},{key:"onApplyBuffStack",value:function(e){this.currentStacks+=1,this.totalStacks+=1}},{key:"onDamage",value:function(e){var t=Object(Ae.a)(e,.1*this.currentStacks);this.bonusDamage+=t}},{key:"onRemoveBuff",value:function(e){this.currentStacks=0}},{key:"onCast",value:function(e){var t=this;this.selectedCombatant.hasBuff(l.a.REMORSELESS_WINTER.id)&&(e.ability.guid===l.a.HOWLING_BLAST.id&&this.selectedCombatant.hasBuff(l.a.RIME.id)?this.extendedDuration+=500:e.classResources&&e.classResources.filter((function(e){return e.type===Y.a.RUNES.id})).forEach((function(e){var a=e.cost;t.extendedDuration=t.extendedDuration+500*a})))}},{key:"statistic",value:function(){return m.a.createElement(B.a,{position:U.a.OPTIONAL(),size:"flexible"},m.a.createElement(se.a,{spell:l.a.GATHERING_STORM_TALENT},m.a.createElement(m.a.Fragment,null,m.a.createElement(ve.a,{amount:this.bonusDamage})," ",m.a.createElement("br",null),m.a.createElement(re.a,null)," ",this.averageExtension.toFixed(1)," ",m.a.createElement("small",null,"average seconds extended "))))}},{key:"averageExtension",get:function(){return this.extendedDuration/1e3/this.totalCasts}}]),a}(I.c),Se=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).casts=0,i.hits=-1,i.goodCasts=0,i.hitThreshold=0,i.active=i.selectedCombatant.hasTalent(l.a.FROSTSCYTHE_TALENT.id),i.active?(i.addEventListener(w.f.cast.by(I.a).spell(l.a.FROSTSCYTHE_TALENT),i.onCast),i.addEventListener(w.f.damage.by(I.a).spell(l.a.FROSTSCYTHE_TALENT),i.onDamage),i.addEventListener(w.f.fightend,i.onFightEnd),i):Object(ge.a)(i)}return Object(h.a)(a,[{key:"onCast",value:function(e){this.hits>=this.hitThreshold&&(this.goodCasts+=1),this.casts+=1,this.hitThreshold=this.selectedCombatant.hasBuff(l.a.KILLING_MACHINE.id,e.timestamp)?1:2,this.hits=0}},{key:"onDamage",value:function(e){this.hits+=1}},{key:"onFightEnd",value:function(){this.hits>=this.hitThreshold&&(this.goodCasts+=1)}},{key:"suggestions",value:function(e){e(this.efficencyThresholds).addSuggestion((function(e,t,a){return e(m.a.createElement(m.a.Fragment,null,"Your ",m.a.createElement(g.a,{id:l.a.FROSTSCYTHE_TALENT.id})," efficiency can be improved. Only cast Frostscythe if you have a ",m.a.createElement(g.a,{id:l.a.KILLING_MACHINE.id,icon:!0})," proc or you can hit 2+ targets.")).icon(l.a.FROSTSCYTHE_TALENT.icon).actual(v.i18n._({id:"deathknight.forst.frostScythe.efficiency",defaults:"{0}% Frostscythe efficiency",values:{0:Object(R.e)(t)}})).recommended(">".concat(Object(R.e)(a),"% is recommended"))}))}},{key:"statistic",value:function(){return m.a.createElement(B.a,{position:U.a.OPTIONAL(),size:"flexible",tooltip:"A good cast is one where you either hit 1+ targets with a Killing Machine buff or you hit 2+ targets.  You had ".concat(this.goodCasts," / ").concat(this.casts," good casts")},m.a.createElement(se.a,{spell:l.a.FROSTSCYTHE_TALENT},m.a.createElement(m.a.Fragment,null,Object(R.e)(this.efficiency)," % ",m.a.createElement("small",null,"efficiency"))))}},{key:"efficiency",get:function(){return this.goodCasts/this.casts}},{key:"efficencyThresholds",get:function(){return{actual:this.efficiency,isLessThan:{minor:.95,average:.85,major:.75},style:b.a.PERCENTAGE}}}]),a}(I.c),Le=a(896),we=a(897),Ie=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return a}(r.a);Ie.specModules={cooldownThroughputTracker:E,abilities:p,alwaysBeCasting:A,spellUsable:P,checklist:ne,HardHowlingBlastCasts:he,frostfeverUptime:ce,rimeEfficiency:de,killingMachineEfficiency:me,breathofSindragoa:ye,hypothermicPresence:be,runeTracker:Z,runeDetails:Re.a,runicPowerDetails:q,runicPowerTracker:z,gatheringStorm:_e,frostscythe:Se,runeOfTheFallenCrusader:Le.a,runeOfHysteria:we.a,arcaneTorrent:[o.a,{castEfficiency:.5}]};t.default=Ie},752:function(e,t,a){"use strict";function n(e,t){var a=(e.amount||0)+(e.absorbed||0);return a-a/(1+t)}a.d(t,"a",(function(){return n}))},760:function(e,t,a){"use strict";var n=a(0),i=a.n(n);t.a=function(e){var t=Object.assign({},e);return i.a.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",viewBox:"10 10 80 80",className:"icon"},t),i.a.createElement("path",{d:"M50,86.4865c17.4361,0,31.6216-14.1855,31.6216-31.6216c0-16.6168-12.8865-30.2714-29.1892-31.5189v-4.9677h7.2973v-4.8649  H40.2703v4.8649h7.2973v4.9677c-16.3027,1.2475-29.1892,14.902-29.1892,31.5189C18.3784,72.3009,32.5639,86.4865,50,86.4865z M52.4324,28.2236c3.1101,0.2817,6.0664,1.0982,8.7798,2.356l-8.7798,15.2073V28.2236z M47.5676,28.2236v26.6412 c0,1.1008,0.7393,2.0647,1.8029,2.3497c0.209,0.0561,0.4205,0.0827,0.6295,0.0827c0.8533,0,1.6642-0.4504,2.1065-1.2162 l13.3146-23.0616c6.8507,4.8503,11.3357,12.8315,11.3357,21.8454c0,14.7537-12.0031,26.7567-26.7568,26.7567 s-26.7568-12.003-26.7568-26.7567C23.2432,40.9315,33.9501,29.4573,47.5676,28.2236z"}))}},809:function(e,t,a){"use strict";var n=a(0),i=a.n(n),s=a(53);a(868);t.a=function(e){var t=e.spell,a=e.value,n=e.label,r=e.extra,o=e.className;return i.a.createElement("div",{className:"flex boring-value ".concat(o||"")},i.a.createElement("div",{className:"flex-sub icon"},i.a.createElement(s.a,{id:t.id})),i.a.createElement("div",{className:"flex-main value"},i.a.createElement("div",null,a),i.a.createElement("small",null,n),r))}},848:function(e,t,a){"use strict";var n=a(7),i=a(8),s=a(9),r=a(120),o=a(66),c=a(10),l=a(11),u=a(0),d=a.n(u),E=a(88),h=a(3),f=a(33),m=a(747),g=a(746),T=a(754),y=a(767),p=a(753),O=a(773),b=a(15),R=a(43),v=a(13),A=a(808),_=[h.a.RUNE_1,h.a.RUNE_2,h.a.RUNE_3],S=function(e){Object(c.a)(a,e);var t=Object(l.a)(a);function a(){var e;Object(i.a)(this,a);for(var n=arguments.length,s=new Array(n),r=0;r<n;r++)s[r]=arguments[r];(e=t.call.apply(t,[this].concat(s))).runesReady=[],e._fightend=!1,e.resource=E.a.RUNES,e._lastTimestamp=e.owner.fight.start_time,e._runesReadySum=[7];for(var o=0;o<=6;o+=1)e._runesReadySum[o]=0;return e.addEventListener(b.f.fightend,e.onFightend),e.addEventListener(b.f.applybuff.to(R.a).spell(h.a.RUNIC_CORRUPTION),e.onApplybuff),e.addEventListener(b.f.removebuff.to(R.a).spell(h.a.RUNIC_CORRUPTION),e.onRemovebuff),e.addEventListener(b.f.UpdateSpellUsable.spell(_),e.onUpdateSpellUsable),e}return Object(s.a)(a,[{key:"onFightend",value:function(){var e=this.runesAvailable;this._fightend=!0,this.runesReady.push({x:this.owner.fightDuration/1e3,y:e}),this._runesReadySum[e]+=this.owner.fight.end_time-this._lastTimestamp,this.addPassiveRuneRegeneration()}},{key:"onCast",value:function(e){var t=this;e.classResources&&!e.prepull&&(Object(r.a)(Object(o.a)(a.prototype),"onCast",this).call(this,e),e.classResources.filter((function(e){return e.type===t.resource.id})).forEach((function(a){a.amount;var n=a.cost||0;if(e.ability.guid===h.a.OBLITERATE_CAST.id&&t.selectedCombatant.hasBuff(h.a.OBLITERATION_TALENT.id)&&(n-=1),!(n<=0))for(var i=0;i<n;i+=1)t.startCooldown(e)})))}},{key:"onEnergize",value:function(e){if(Object(r.a)(Object(o.a)(a.prototype),"onEnergize",this).call(this,e),e.resourceChangeType===this.resource.id)for(var t=e.resourceChange,n=0;n<t;n+=1)this.addCharge()}},{key:"onApplybuff",value:function(e){var t=this;_.forEach((function(e){t.changeCooldown(e.id,.5)}))}},{key:"onRemovebuff",value:function(e){var t=this;_.forEach((function(e){t.changeCooldown(e.id,2)}))}},{key:"onUpdateSpellUsable",value:function(e){var t=0;if(e.trigger===b.b.EndCooldown||e.trigger===b.b.RestoreCharge)t+=1;else{if(e.trigger!==b.b.BeginCooldown&&e.trigger!==b.b.AddCooldownCharge)return;t-=1}this._runesReadySum[this.runesAvailable-t]+=e.timestamp-this._lastTimestamp,this._lastTimestamp=e.timestamp,this._fightend||(this.runesReady.push({x:this.timeFromStart(e.timestamp),y:this.runesAvailable-t}),this.runesReady.push({x:this.timeFromStart(e.timestamp),y:this.runesAvailable}))}},{key:"addPassiveRuneRegeneration",value:function(){var e=this.runesMaxCasts,t=this.runesWasted,a=this.addPassiveAccelerator(h.a.RUNIC_CORRUPTION.id,e,t,1);e*=1-a,t*=1-a,this.initBuilderAbility(h.a.RUNE_1.id),this.buildersObj[h.a.RUNE_1.id].generated+=Math.round(e),this.buildersObj[h.a.RUNE_1.id].wasted+=Math.round(t)}},{key:"addPassiveAccelerator",value:function(e,t,a,n){var i=this.selectedCombatant.getBuffUptime(e)/this.owner.fightDuration;if(!(i>0))return 0;this.initBuilderAbility(e);var s=i*n/(1+n),r=Math.round(t*s);this.buildersObj[e].generated+=r;var o=Math.round(a*s);return this.buildersObj[e].wasted+=o,s}},{key:"changeCooldown",value:function(e,t){if(this.spellUsable.isOnCooldown(e)){var a=this.spellUsable.cooldownRemaining(e),n=a-a*t;this.spellUsable.reduceCooldown(e,n)}}},{key:"addCharge",value:function(){var e=this.longestCooldown;if(this.spellUsable.isOnCooldown(e)){var t=this.abilities.getExpectedCooldownDuration(e,this.spellUsable.cooldownTriggerEvent(e));this.spellUsable.reduceCooldown(e,t)}}},{key:"startCooldown",value:function(e){var t=this.shortestCooldown;this.spellUsable.beginCooldown(t,e)}},{key:"getCooldown",value:function(e){if(!this.spellUsable.isOnCooldown(e))return null;var t=2-this.spellUsable.chargesAvailable(e),a=this.spellUsable.cooldownRemaining(e);return(t-1)*this.abilities.getExpectedCooldownDuration(e,this.spellUsable.cooldownTriggerEvent(e))+a}},{key:"timeFromStart",value:function(e){return(e-this.owner.fight.start_time)/1e3}},{key:"suggestions",value:function(e){e(this.suggestionThresholds).addSuggestion((function(e,t,a){return e(d.a.createElement(d.a.Fragment,null,"You overcapped ",Object(f.e)(t),"% of your runes. Try to always have at least 3 runes on cooldown.")).icon(h.a.RUNE_1.icon).actual(v.i18n._({id:"deathknight.shared.suggestions.runes.overcapped",defaults:"{0}% runes overcapped",values:{0:Object(f.e)(t)}})).recommended("<".concat(Object(f.e)(a),"% is recommended"))}))}},{key:"statistic",value:function(){var e=this,t=this.timeSpentAtRuneCount;return d.a.createElement(g.a,{position:m.a.CORE(10),size:"flexible",tooltip:d.a.createElement(d.a.Fragment,null,"Number of runes wasted: ",Object(f.d)(this.runesWasted)," ",d.a.createElement("br",null),"These numbers only include runes wasted from passive regeneration. ",d.a.createElement("br",null),"The table below shows the time spent at any given number of runes available."),dropdown:d.a.createElement("table",{className:"table table-condensed"},d.a.createElement("thead",null,d.a.createElement("tr",null,d.a.createElement("th",null,"Runes"),d.a.createElement("th",null,"Time (s)"),d.a.createElement("th",null,"Time (%)"))),d.a.createElement("tbody",null,this._runesReadySum.filter((function(e,t){return t<4})).map((function(a,n){return d.a.createElement("tr",{key:n},d.a.createElement("th",null,n),d.a.createElement("td",null,Object(f.a)(e._runesReadySum[n]/1e3)),d.a.createElement("td",null,Object(f.e)(t[n]),"%"))})),this._runesReadySum.filter((function(e,t){return t>=4})).map((function(a,n){return d.a.createElement("tr",{key:n+4},d.a.createElement("th",{style:{color:"red"}},n+4),d.a.createElement("td",null,Object(f.a)(e._runesReadySum[n+4]/1e3)),d.a.createElement("td",null,Object(f.e)(t[n+4]),"%"))}))))},d.a.createElement(A.a,{resource:E.a.RUNES,value:"".concat(Object(f.e)(1-this.runeEfficiency)," %"),label:"Runes overcapped"}))}},{key:"shortestCooldown",get:function(){var e=this.getCooldown(h.a.RUNE_1.id)||0,t=this.getCooldown(h.a.RUNE_2.id)||0,a=this.getCooldown(h.a.RUNE_3.id)||0;return e<=t&&e<=a?h.a.RUNE_1.id:t<=a?h.a.RUNE_2.id:h.a.RUNE_3.id}},{key:"longestCooldown",get:function(){var e=this.getCooldown(h.a.RUNE_1.id)||0,t=this.getCooldown(h.a.RUNE_2.id)||0,a=this.getCooldown(h.a.RUNE_3.id)||0;return e>=t&&e>=a?h.a.RUNE_1.id:t>=a?h.a.RUNE_2.id:h.a.RUNE_3.id}},{key:"runesAvailable",get:function(){var e=this,t=0;return _.forEach((function(a){t+=e.spellUsable.chargesAvailable(a.id)})),t}},{key:"runeEfficiency",get:function(){var e=this,t=[];return _.forEach((function(a){t.push(e.castEfficiency.getCastEfficiencyForSpellId(a.id).efficiency)})),t.reduce((function(e,t){return e+t}))/t.length}},{key:"runesMaxCasts",get:function(){var e=0;for(var t in this.spendersObj)e+=this.spendersObj[t].spent;return e-6+this.runesReady[this.runesReady.length-1].y}},{key:"runesWasted",get:function(){return this.runesMaxCasts*(1-this.runeEfficiency)}},{key:"timeSpentAtRuneCount",get:function(){var e=this,t=[];return this._runesReadySum.forEach((function(a){t.push(a/e.owner.fightDuration)})),t}},{key:"suggestionThresholds",get:function(){return{actual:1-this.runeEfficiency,isGreaterThan:{minor:.05,average:.1,major:.2},style:"percentage"}}},{key:"suggestionThresholdsEfficiency",get:function(){return{actual:this.runeEfficiency,isLessThan:{minor:.95,average:.9,major:.8},style:"percentage"}}}]),a}(O.a);S.dependencies=Object(n.a)(Object(n.a)({},O.a.dependencies),{},{spellUsable:T.b,castEfficiency:y.a,abilities:p.a}),t.a=S},896:function(e,t,a){"use strict";var n=a(8),i=a(9),s=a(119),r=a(10),o=a(11),c=a(0),l=a.n(c),u=a(3),d=a(43),E=a(15),h=a(747),f=a(746),m=a(748),g=a(33),T=function(e){Object(r.a)(a,e);var t=Object(o.a)(a);function a(e){var i;Object(n.a)(this,a),(i=t.call(this,e)).healing=0,i.overhealing=0;var r=i.selectedCombatant.hasWeaponEnchant(u.a.RUNE_OF_THE_FALLEN_CRUSADER);return i.active=r,r?(i.addEventListener(E.f.heal.to(d.a).spell(u.a.UNHOLY_STRENGTH_BUFF),i._onHeal),i):Object(s.a)(i)}return Object(i.a)(a,[{key:"_onHeal",value:function(e){e.overheal&&(this.overhealing+=e.overheal),this.healing+=e.amount+e.absorb}},{key:"statistic",value:function(){return l.a.createElement(f.a,{position:h.a.OPTIONAL(2),size:"flexible",tooltip:l.a.createElement(l.a.Fragment,null,l.a.createElement("strong",null,"Uptime: ")," ",Object(g.e)(this.uptime),"% ",l.a.createElement("br",null),l.a.createElement("strong",null,"Healing: ")," ",Object(g.d)(this.healing)," ",l.a.createElement("br",null),l.a.createElement("strong",null,"Overhealing: ")," ",Object(g.d)(this.overhealing)," (",Object(g.e)(this.overhealPercentage)," %) ",l.a.createElement("br",null))},l.a.createElement(m.a,{spell:u.a.RUNE_OF_THE_FALLEN_CRUSADER},l.a.createElement(l.a.Fragment,null,Object(g.e)(this.averageStrength)," % ",l.a.createElement("small",null,"average Strength"))))}},{key:"overhealPercentage",get:function(){return this.overhealing/this.healing}},{key:"uptime",get:function(){return this.selectedCombatant.getBuffUptime(u.a.UNHOLY_STRENGTH_BUFF.id)/this.owner.fightDuration}},{key:"averageStrength",get:function(){return.15*this.uptime}}]),a}(d.c);t.a=T},897:function(e,t,a){"use strict";var n=a(8),i=a(9),s=a(119),r=a(10),o=a(11),c=a(0),l=a.n(c),u=a(3),d=a(43),E=a(15),h=a(747),f=a(746),m=a(748),g=a(33),T=a(88),y=a(164),p=a(13),O=a(5),b=function(e){Object(r.a)(a,e);var t=Object(o.a)(a);function a(e){var i;Object(n.a)(this,a),(i=t.call(this,e)).runicPowerGained=0,i.runicPowerWasted=0;var r=i.selectedCombatant.hasWeaponEnchant(u.a.RUNE_OF_HYSTERIA);return i.active=r,r?(i.addEventListener(E.f.energize,i._onEnergize),i):Object(s.a)(i)}return Object(i.a)(a,[{key:"_onEnergize",value:function(e){this.selectedCombatant.hasBuff(u.a.RUNE_OF_HYSTERIA_BUFF.id,e.timestamp)&&e.resourceChangeType===T.a.RUNIC_POWER.id&&(this.runicPowerGained+=e.resourceChange,this.runicPowerWasted+=e.waste)}},{key:"suggestions",value:function(e){var t=this;e(this.efficiencySuggestionThresholds).addSuggestion((function(e,a,n){return e(l.a.createElement("span",null,"Avoid being Runic Power capped at all times, you wasted ",t.runicPowerWastedDuringHysteria," PR of ",u.a.RUNE_OF_HYSTERIA.name," by being RP capped.")).icon(u.a.RUNE_OF_HYSTERIA.icon).actual(p.i18n._({id:"deathknight.suggestions.hysteria.efficiency",defaults:"You wasted {0}% of RP from {1} by being RP capped.",values:{0:Object(g.e)(a),1:u.a.RUNE_OF_HYSTERIA.name}})).recommended("".concat(Object(g.e)(n),"% is recommended"))}))}},{key:"statistic",value:function(){var e=l.a.createElement(l.a.Fragment,null),t=l.a.createElement(l.a.Fragment,null);return this.selectedCombatant.spec===O.a.BLOOD_DEATH_KNIGHT&&(e=l.a.createElement(l.a.Fragment,null,", resulting in ",this.gainedDeathStrikes," additional ",u.a.DEATH_STRIKE.name),t=l.a.createElement(l.a.Fragment,null,", losing out on ",this.wastedDeathStrikes," ",u.a.DEATH_STRIKE.name)),l.a.createElement(f.a,{position:h.a.OPTIONAL(2),size:"flexible",tooltip:l.a.createElement(l.a.Fragment,null,"You gained ",Math.floor(this.runicPowerGainedByHysteria)," RP by using ",u.a.RUNE_OF_HYSTERIA.name,e,".",l.a.createElement("br",null),this.runicPowerWastedDuringHysteria>1&&l.a.createElement(l.a.Fragment,null,"You wasted ",this.runicPowerWastedDuringHysteria," RP (",Object(g.e)(this.wastedPercentage)," %) from Hysteria by being RP capped",t,"."))},l.a.createElement(m.a,{spell:u.a.RUNE_OF_HYSTERIA},l.a.createElement(l.a.Fragment,null,Math.floor(this.runicPowerGainedByHysteria)," ",l.a.createElement("small",null,"RP gained"))))}},{key:"runicPowerGainedByHysteria",get:function(){return.2*this.runicPowerGained}},{key:"runicPowerWastedDuringHysteria",get:function(){return.2*this.runicPowerWasted}},{key:"potentialRunicPowerGainedByHysteria",get:function(){return this.runicPowerGainedByHysteria+this.runicPowerWastedDuringHysteria}},{key:"wastedPercentage",get:function(){return this.runicPowerWastedDuringHysteria/this.runicPowerGainedByHysteria}},{key:"potentiallyGainedDeathStrikes",get:function(){return Math.floor(this.potentialRunicPowerGainedByHysteria/45)}},{key:"gainedDeathStrikes",get:function(){return Math.floor(this.runicPowerGainedByHysteria/45)}},{key:"wastedDeathStrikes",get:function(){return this.potentiallyGainedDeathStrikes-this.gainedDeathStrikes}},{key:"efficiencySuggestionThresholds",get:function(){return{actual:this.wastedPercentage,isGreaterThan:{minor:0,average:.2,major:.4},style:y.a.PERCENTAGE}}}]),a}(d.c);t.a=b},921:function(e,t,a){"use strict";var n=a(8),i=a(9),s=a(10),r=a(11),o=a(0),c=a.n(o),l=a(788),u=a(43),d=a(49),E=a(779),h=a(37),f=a.n(h),m=a(53),g=a(4),T=a(33),y=a(3),p=a(22),O=function(e){Object(s.a)(a,e);var t=Object(r.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(i.a)(a,[{key:"render",value:function(){var e=this.props,t=e.tracker,a=e.showSpenders,n=t.resource.name,i=this.prepareGenerated(t.buildersObj),s=this.prepareSpent(t.spendersObj),r=t.generated,o=t.wasted,l=t.spent,u=t.spendersCasts;return r=0===r?1:r,o=0===o?1:o,l=0===l?1:l,u=0===u?1:u,c.a.createElement("div",null,c.a.createElement("table",{className:"data-table"},c.a.createElement("thead",null,c.a.createElement("tr",null,c.a.createElement("th",null,"Ability"),c.a.createElement("th",{colSpan:"2"},c.a.createElement(p.a,{content:"Runes generated from passive regeneration and abilities that accelerate it are estimates."},n," generated")),c.a.createElement("th",{colSpan:"2"},c.a.createElement(p.a,{content:"This is the amount of resources that were generated while you were already at cap."},n," wasted")))),c.a.createElement("tbody",null,i&&i.filter((function(e){return e.abilityId===y.a.RUNE_1.id})).map((function(e){return c.a.createElement("tr",{key:e.abilityId},c.a.createElement("td",{style:{width:"30%"}},c.a.createElement(m.a,{id:e.abilityId,noLink:!0})," ","Passive Rune regeneration"),c.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},c.a.createElement(p.a,{content:"".concat(Object(T.e)(e.generated/r)," %")},e.generated)),c.a.createElement("td",{style:{width:"40%"}},c.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.generated/r*100,"%")}})),c.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},c.a.createElement(p.a,{content:"".concat(Object(T.e)(e.wasted/o)," %")},e.wasted)),c.a.createElement("td",{style:{width:"30%"}},c.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.wasted/o*100,"%")}})))})),i&&i.filter((function(e){return e.abilityId!==y.a.RUNE_1.id})).map((function(e){return c.a.createElement("tr",{key:e.abilityId},c.a.createElement("td",{style:{width:"30%"}},c.a.createElement(g.a,{id:e.abilityId})),c.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},c.a.createElement(p.a,{content:"".concat(Object(T.e)(e.generated/r)," %")},e.generated)),c.a.createElement("td",{style:{width:"40%"}},c.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.generated/r*100,"%")}})),c.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},c.a.createElement(p.a,{content:"".concat(Object(T.e)(e.wasted/o)," %")},e.wasted)),c.a.createElement("td",{style:{width:"30%"}},c.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.wasted/o*100,"%")}})))})))),a&&c.a.createElement("table",{className:"data-table"},c.a.createElement("thead",null,c.a.createElement("tr",null,c.a.createElement("th",null,"Ability"),c.a.createElement("th",{colSpan:"2"},n," spent"),c.a.createElement("th",{colSpan:"2"},"Casts"))),c.a.createElement("tbody",null,s&&s.map((function(e){return c.a.createElement("tr",{key:e.abilityId},c.a.createElement("td",{style:{width:"30%"}},c.a.createElement(g.a,{id:e.abilityId})),c.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},c.a.createElement(p.a,{content:"".concat(Object(T.e)(e.spent/l)," %")},e.spent)),c.a.createElement("td",{style:{width:"40%"}},c.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.spent/l*100,"%")}})),c.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},c.a.createElement(p.a,{content:"".concat(Object(T.e)(e.casts/u)," %")},e.casts)),c.a.createElement("td",{style:{width:"30%"}},c.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.casts/u*100,"%")}})))})))))}}]),a}(a(781).a);O.propTypes={tracker:f.a.object.isRequired,showSpenders:f.a.bool};var b=O,R=a(848),v=function(e){Object(s.a)(a,e);var t=Object(r.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(i.a)(a,[{key:"tab",value:function(){var e=this,t=this.runeTracker.runesReady,a={data:{name:"runes"},mark:{type:"line",color:"rgb(196, 31, 59)"},encoding:{x:{field:"x",type:"quantitative",axis:{labelExpr:Object(E.c)("datum.value * 1000"),grid:!1},title:null},y:{field:"y",type:"quantitative",title:"# of Runes",axis:{grid:!1,tickMinStep:1}}}};return{title:"Rune usage",url:"rune-usage",render:function(){return c.a.createElement(d.a,null,c.a.createElement(l.a,{disableHeight:!0},(function(e){var n=e.width;return c.a.createElement(E.a,{width:n,height:400,spec:a,data:{runes:t}})})),c.a.createElement(b,{tracker:e.runeTracker,showSpenders:!0}))}}}}]),a}(u.c);v.dependencies={runeTracker:R.a};t.a=v}}]);
//# sourceMappingURL=FrostDeathKnight.1af01c6f.chunk.js.map