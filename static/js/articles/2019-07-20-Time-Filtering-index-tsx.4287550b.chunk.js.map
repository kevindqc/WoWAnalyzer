{"version":3,"sources":["articles/2019-07-20-Time-Filtering/index.tsx","articles/2019-07-20-Time-Filtering/filter.jpg","articles/2019-07-20-Time-Filtering/exampleresults.jpg","interface/news/makeUrl.js","interface/news/RegularArticle.tsx"],"names":["title","publishedAt","publishedBy","Zeboot","style","textAlign","marginBottom","src","FilterExample","alt","width","className","href","ExampleResults","module","exports","makeUrl","prettyEncodeURI","RegularArticle","props","children","bodyStyle","to","makeNewsUrl","display","marginTop"],"mappings":"8GAAA,iFASE,4BAAC,IAAD,CAAgBA,MAAM,iBAAiBC,YAAY,aAAaC,YAAaC,UAA7E,mEACkE,8CADlE,IACyF,6BADzF,kSAEiS,6BAAM,6BAFvS,2VAG0V,6BACxV,yBAAKC,MAAO,CAAEC,UAAW,SAAUC,aAAc,QAC/C,yBAAKC,IAAKC,IAAeC,IAAI,iBAAiBL,MAAO,CAAEM,MAAO,UAC9D,yBAAKC,UAAU,cAAf,uGANJ,kYAQiY,6BAC/X,6BATF,4ZAU2Z,uBAAGC,KAAK,mCAAR,WAV3Z,UAUud,uBAAGA,KAAK,8CAAR,UAVvd,KAUwhB,6BACthB,yBAAKR,MAAO,CAAEC,UAAW,SAAUC,aAAc,QAC/C,yBAAKC,IAAKM,IAAgBJ,IAAI,uBAAuBL,MAAO,CAAEM,MAAO,UACrE,yBAAKC,UAAU,cAAf,sEAEF,8DAfF,iPAgBgP,6BAhBhP,4CAkBE,6BAAK,ivBAlBP,4EA+B2E,6CA/B3E,0EA+B0K,0CA/B1K,mLA+B+W,uBAAGC,KAAK,mCAAR,WA/B/W,IAgCE,6BACA,6BAjCF,wC,qBCTFE,EAAOC,QAAU,IAA0B,oC,qBCA3CD,EAAOC,QAAU,IAA0B,4C,iCCA3C,8CAEe,SAASC,EAAQhB,GAC9B,MAAM,SAAN,OAAgBiB,YAAgBjB,M,iCCHlC,qDAmCekB,IAnBQ,SAACC,GAAkB,IAChCnB,EAAyDmB,EAAzDnB,MAAOoB,EAAkDD,EAAlDC,SAAUC,EAAwCF,EAAxCE,UAAWpB,EAA6BkB,EAA7BlB,YAAaC,EAAgBiB,EAAhBjB,YAEjD,OACE,iCACE,kBAAC,IAAD,CACEF,MAAO,kBAAC,IAAD,CAAMsB,GAAIC,YAAYvB,GAAQW,UAAU,eAAeX,GAC9DqB,UAAWA,GAEVD,EAED,2BAAOhB,MAAO,CAAEoB,QAAS,QAASC,UAAW,QAA7C,gBACgBxB,EADhB,OACgC,kBAAC,IAAgBC,GADjD","file":"static/js/articles/2019-07-20-Time-Filtering-index-tsx.4287550b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Zeboot } from 'CONTRIBUTORS';\r\nimport RegularArticle from 'interface/news/RegularArticle';\r\n\r\nimport FilterExample from './filter.jpg';\r\nimport ExampleResults from './exampleresults.jpg';\r\n\r\nexport default (\r\n  <RegularArticle title=\"Time Filtering\" publishedAt=\"2019-07-23\" publishedBy={Zeboot}>\r\n    If you haven't noticed already, WoWAnalyzer has a new feature : <b>Time Filtering!</b> <br />\r\n    A much requested feature for quite some time now, WoWAnalyzer now lets you filter the report to a range of time of your choosing, giving you the possibility to evaluate for example how well you performed during cooldowns, how much damage you did / took during a certain phase, and more! <br /><br />\r\n    When you apply a time filter, we automatically attempt to try and preserve fight information from outside the time range where necessary - for example cooldown availability so we don't fault you for not using an ability that didn't come off CD during the time period - while preventing non-relevant events from contaminating the filtered data. <br />\r\n    <div style={{ textAlign: 'center', marginBottom: '1em' }}>\r\n      <img src={FilterExample} alt=\"Filter Example\" style={{ width: '100%' }} />\r\n      <div className=\"text-muted\">The new filter interface element, letting you select timestamps and phases to filter the fight by.</div>\r\n    </div>\r\n    In addition to the time filter itself, we've also provided a phase selection. If a fight has phase information defined in our source code, we'll automatically try to find the phase transitions and provide you with a dropdown menu letting you select any of these phases by their respective timestamps. In the case of a wipe, we'll of course only show you phases you actually reached. <br />\r\n    <br />\r\n    Please do keep in mind, however, that filtering events like this can obviously lead to unexpected behaviour as a lot of modules - especially older ones or ones accessing fight timestamps directly - will have to be manually adjusted to work properly with filtered results, so take these with a grain of salt (although the majority of them work as expected) and please report any unexpected behaviour to us via <a href=\"https://wowanalyzer.com/discord\">Discord</a> or on <a href=\"https://github.com/WoWAnalyzer/WoWAnalyzer\">GitHub</a>! <br />\r\n    <div style={{ textAlign: 'center', marginBottom: '1em' }}>\r\n      <img src={ExampleResults} alt=\"Example Results Page\" style={{ width: '100%' }} />\r\n      <div className=\"text-muted\">An example of the statistics page adjusted by one specific phase.</div>\r\n    </div>\r\n    <h1>What this means for developers</h1>\r\n    This change also has an impact on contributors in that the fight object has changed. In order to ensure future modules work as expected when the results are filtered, please take the time to read these small list of internal API changes: <br />\r\n    The new fight object now looks like this:\r\n    <pre><code>{`\r\n      fight: {\r\n        start_time: 9198573, //required, timestamp of the start of the selected time period\r\n        end_time: 9214374, //required, timestamp of the end of the selected time period\r\n        offset_time: 161450, //required, amount of ms between start of fight and start of time period\r\n        original_end_time: 9214374, //timestamp of the end of the fight\r\n        boss: 2273, //required, boss ID\r\n        filtered: true, //required, true if the fight is in any way filtered to a time period\r\n        phase: \"I1\", //optional, phase key if a phase is selected\r\n        instance: 0, //optional, instance of a phase if phase is selected and can occur multiple times (aka Lady Ashvane)\r\n      };\r\n      `}\r\n    </code></pre>\r\n    When displaying timestamps, for example, make sure to adjust them by the <code>offset_time</code> in order to maintain timestamp accuracy. Additionally you can use the <code>filtered</code> attribute to check whether the user is viewing the entire fight or not and adjust your analysis accordingly. For other, more precise questions feel free to reach out to us on <a href=\"https://wowanalyzer.com/discord\">Discord</a>!\r\n    <br />\r\n    <br />\r\n    We hope you enjoy this new feature!\r\n  </RegularArticle>\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/filter.e8a7c607.jpg\";","module.exports = __webpack_public_path__ + \"static/media/exampleresults.8ffa08d8.jpg\";","import prettyEncodeURI from 'common/prettyEncodeURI';\r\n\r\nexport default function makeUrl(title) {\r\n  return `/news/${prettyEncodeURI(title)}`;\r\n}\r\n","import React, { CSSProperties, ReactNode } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Contributor from 'interface/ContributorButton';\r\nimport makeNewsUrl from 'interface/news/makeUrl';\r\nimport Panel from 'interface/others/Panel';\r\nimport { ContributorType } from 'interface/ContributorButton/ContributorButton';\r\n\r\ninterface Props {\r\n  title: ReactNode;\r\n  bodyStyle?: CSSProperties;\r\n  children: ReactNode,\r\n  publishedAt: string,\r\n  publishedBy: ContributorType\r\n}\r\n\r\nconst RegularArticle = (props: Props) => {\r\n  const { title, children, bodyStyle, publishedAt, publishedBy } = props;\r\n\r\n  return (\r\n    <article>\r\n      <Panel\r\n        title={<Link to={makeNewsUrl(title)} className=\"hidden-link\">{title}</Link>}\r\n        bodyStyle={bodyStyle}\r\n      >\r\n        {children}\r\n\r\n        <small style={{ display: 'block', marginTop: '1em' }}>\r\n          Published at {publishedAt} by <Contributor {...publishedBy} />.\r\n        </small>\r\n      </Panel>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default RegularArticle;\r\n"],"sourceRoot":""}