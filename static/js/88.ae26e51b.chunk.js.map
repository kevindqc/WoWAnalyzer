{"version":3,"sources":["interface/report/Results/ScrollToTop/js/elevator.js","interface/report/Results/ScrollToTop/audio/elevator-music.mp3","interface/report/Results/ScrollToTop/audio/ding.mp3","interface/report/Results/ScrollToTop/elevate.js"],"names":["module","exports","options","startCallback","mainAudio","endAudio","endCallback","body","animation","duration","customDuration","startTime","startPosition","endPosition","targetElement","verticalPadding","elevating","that","this","animateLoop","time","t","b","c","timeSoFar","easedPosition","window","scrollTo","requestAnimationFrame","resetPositions","pause","currentTime","play","animationFinished","updateEndPosition","element","verticalOffset","offsetTop","offsetParent","getVerticalOffset","onWindowBlur","cancelAnimationFrame","elevate","document","documentElement","scrollTop","Math","abs","_options","Audio","addEventListener","defaults","option","undefined","extendParameters","preloadAudio","loopAudio","attachEvent","scroll","setAttribute","volume","init","elevator","Elevator","music","ding"],"mappings":"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","file":"static/js/88.ae26e51b.chunk.js","sourcesContent":["/* eslint-disable */\r\n// Source: https://github.com/tholman/elevator.js\r\n// MIT licensed.\r\n\r\n/*!\r\n * Elevator.js\r\n *\r\n * MIT licensed\r\n * Copyright (C) 2015 Tim Holman, http://tholman.com\r\n */\r\n\r\n/*********************************************\r\n * Elevator.js\r\n *********************************************/\r\n\r\nvar Elevator = function(options) {\r\n  \"use strict\";\r\n\r\n  // Elements\r\n  var body = null;\r\n\r\n  // Scroll vars\r\n  var animation = null;\r\n  var duration = null; // ms\r\n  var customDuration = false;\r\n  var startTime = null;\r\n  var startPosition = null;\r\n  var endPosition = 0;\r\n  var targetElement = null;\r\n  var verticalPadding = null;\r\n  var elevating = false;\r\n\r\n  var startCallback;\r\n  var mainAudio;\r\n  var endAudio;\r\n  var endCallback;\r\n\r\n  var that = this;\r\n\r\n  /**\r\n   * Utils\r\n   */\r\n\r\n  // Thanks Mr Penner - http://robertpenner.com/easing/\r\n  function easeInOutQuad(t, b, c, d) {\r\n    t /= d / 2;\r\n    if (t < 1) return c / 2 * t * t + b;\r\n    t -= 1;\r\n    return -c / 2 * (t * (t - 2) - 1) + b;\r\n  }\r\n\r\n  function extendParameters(options, defaults) {\r\n    for (var option in defaults) {\r\n      var t =\r\n        options[option] === undefined && typeof option !== \"function\";\r\n      if (t) {\r\n        options[option] = defaults[option];\r\n      }\r\n    }\r\n    return options;\r\n  }\r\n\r\n  function getVerticalOffset(element) {\r\n    var verticalOffset = 0;\r\n    while (element) {\r\n      verticalOffset += element.offsetTop || 0;\r\n      element = element.offsetParent;\r\n    }\r\n\r\n    if (verticalPadding) {\r\n      verticalOffset = verticalOffset - verticalPadding;\r\n    }\r\n\r\n    return verticalOffset;\r\n  }\r\n\r\n  /**\r\n   * Main\r\n   */\r\n\r\n  // Time is passed through requestAnimationFrame, what a world!\r\n  function animateLoop(time) {\r\n    if (!startTime) {\r\n      startTime = time;\r\n    }\r\n\r\n    var timeSoFar = time - startTime;\r\n    var easedPosition = easeInOutQuad(\r\n      timeSoFar,\r\n      startPosition,\r\n      endPosition - startPosition,\r\n      duration\r\n    );\r\n\r\n    window.scrollTo(0, easedPosition);\r\n\r\n    if (timeSoFar < duration) {\r\n      animation = requestAnimationFrame(animateLoop);\r\n    } else {\r\n      animationFinished();\r\n    }\r\n  }\r\n\r\n  //            ELEVATE!\r\n  //              /\r\n  //         ____\r\n  //       .'    '=====<0\r\n  //       |======|\r\n  //       |======|\r\n  //       [IIIIII[\\--()\r\n  //       |_______|\r\n  //       C O O O D\r\n  //      C O  O  O D\r\n  //     C  O  O  O  D\r\n  //     C__O__O__O__D\r\n  //    [_____________]\r\n  this.elevate = function() {\r\n    if (elevating) {\r\n      return;\r\n    }\r\n\r\n    elevating = true;\r\n    startPosition = document.documentElement.scrollTop || body.scrollTop;\r\n    updateEndPosition();\r\n\r\n    // No custom duration set, so we travel at pixels per millisecond. (0.75px per ms)\r\n    if (!customDuration) {\r\n      duration = Math.abs(endPosition - startPosition) * 1.5;\r\n    }\r\n\r\n    requestAnimationFrame(animateLoop);\r\n\r\n    // Start music!\r\n    if (mainAudio) {\r\n      mainAudio.play();\r\n    }\r\n\r\n    if (startCallback) {\r\n      startCallback();\r\n    }\r\n  };\r\n\r\n  function browserMeetsRequirements() {\r\n    return (\r\n      window.requestAnimationFrame &&\r\n      window.Audio &&\r\n      window.addEventListener\r\n    );\r\n  }\r\n\r\n  function resetPositions() {\r\n    startTime = null;\r\n    startPosition = null;\r\n    elevating = false;\r\n  }\r\n\r\n  function updateEndPosition() {\r\n    if (targetElement) {\r\n      endPosition = getVerticalOffset(targetElement);\r\n    }\r\n  }\r\n\r\n  function animationFinished() {\r\n    resetPositions();\r\n\r\n    // Stop music!\r\n    if (mainAudio) {\r\n      mainAudio.pause();\r\n      mainAudio.currentTime = 0;\r\n    }\r\n\r\n    if (endAudio) {\r\n      endAudio.play();\r\n    }\r\n\r\n    if (endCallback) {\r\n      endCallback();\r\n    }\r\n  }\r\n\r\n  function onWindowBlur() {\r\n    // If animating, go straight to the top. And play no more music.\r\n    if (elevating) {\r\n      cancelAnimationFrame(animation);\r\n      resetPositions();\r\n\r\n      if (mainAudio) {\r\n        mainAudio.pause();\r\n        mainAudio.currentTime = 0;\r\n      }\r\n\r\n      updateEndPosition();\r\n      window.scrollTo(0, endPosition);\r\n    }\r\n  }\r\n\r\n  function bindElevateToElement(element) {\r\n    if (element.addEventListener) {\r\n      element.addEventListener(\"click\", that.elevate, false);\r\n    } else {\r\n      // Older browsers\r\n      element.attachEvent(\"onclick\", function() {\r\n        updateEndPosition();\r\n        document.documentElement.scrollTop = endPosition;\r\n        document.body.scrollTop = endPosition;\r\n        window.scroll(0, endPosition);\r\n      });\r\n    }\r\n  }\r\n\r\n  function init(_options) {\r\n    // Take the stairs instead\r\n    if (!browserMeetsRequirements()) {\r\n      return;\r\n    }\r\n\r\n    // Bind to element click event.\r\n    body = document.body;\r\n\r\n    var defaults = {\r\n      duration: undefined,\r\n      mainAudio: false,\r\n      endAudio: false,\r\n      preloadAudio: true,\r\n      loopAudio: true,\r\n      startCallback: null,\r\n      endCallback: null\r\n    };\r\n\r\n    _options = extendParameters(_options, defaults);\r\n\r\n    if (_options.element) {\r\n      bindElevateToElement(_options.element);\r\n    }\r\n\r\n    if (_options.duration) {\r\n      customDuration = true;\r\n      duration = _options.duration;\r\n    }\r\n\r\n    if (_options.targetElement) {\r\n      targetElement = _options.targetElement;\r\n    }\r\n\r\n    if (_options.verticalPadding) {\r\n      verticalPadding = _options.verticalPadding;\r\n    }\r\n\r\n    window.addEventListener(\"blur\", onWindowBlur, false);\r\n\r\n    if (_options.mainAudio) {\r\n      mainAudio = new Audio(_options.mainAudio);\r\n      mainAudio.setAttribute(\"preload\", _options.preloadAudio);\r\n      mainAudio.setAttribute(\"loop\", _options.loopAudio);\r\n      mainAudio.volume = 0.5;\r\n    }\r\n\r\n    if (_options.endAudio) {\r\n      endAudio = new Audio(_options.endAudio);\r\n      endAudio.setAttribute(\"preload\", \"true\");\r\n      endAudio.volume = 0.5;\r\n    }\r\n\r\n    if (_options.endCallback) {\r\n      endCallback = _options.endCallback;\r\n    }\r\n\r\n    if (_options.startCallback) {\r\n      startCallback = _options.startCallback;\r\n    }\r\n  }\r\n\r\n  init(options);\r\n};\r\n\r\nif (typeof module !== \"undefined\" && module.exports) {\r\n  module.exports = Elevator;\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/elevator-music.04bbfa31.mp3\";","module.exports = __webpack_public_path__ + \"static/media/ding.4dd02c4e.mp3\";","import Elevator from './js/elevator';\r\nimport music from './audio/elevator-music.mp3';\r\nimport ding from './audio/ding.mp3';\r\n\r\nconst elevator = new Elevator({\r\n  mainAudio: music,\r\n  endAudio: ding,\r\n});\r\n\r\nexport default function elevate() {\r\n  elevator.elevate();\r\n}\r\n"],"sourceRoot":""}