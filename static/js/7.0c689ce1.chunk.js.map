{"version":3,"sources":["parser/shaman/shared/normalizers/AnkhNormalizer.js","parser/shaman/shared/talents/ElementalBlast.tsx","interface/statistics/components/BoringSpellValueText/index.tsx","parser/core/calculateEffectiveDamage.js","interface/icons/Uptime.js","parser/core/calculateEffectiveHealing.js","../node_modules/react-animate-height/lib/AnimateHeight.js","parser/shaman/restoration/constants.ts","parser/shared/modules/earlydotrefreshes/EarlyDotRefreshes.js","parser/shaman/shared/talents/EarthShield.tsx","parser/shaman/shared/constants.ts","parser/shaman/shared/talents/SpiritWolf.tsx","parser/shaman/shared/talents/StaticCharge.ts","parser/shaman/shared/spells/AstralShift.tsx","parser/shared/modules/earlydotrefreshes/EarlyDotRefreshesSuggestionByCount.js","interface/others/ResourceGenerated.js","parser/shaman/shared/spells/FlameShock.tsx"],"names":["ReincarnationNormalizer","fabricatedEvent","events","fixedEvents","forEach","event","eventIndex","type","EventType","Cast","ability","guid","SPELLS","REINCARNATION","id","timestamp","Resurrect","sourceID","targetID","sourceIsFriendly","targetIsFriendly","__fabricated","push","EventsNormalizer","ElementalBlast","options","currentBuffAmount","lastFreshApply","resultDuration","statisticOrder","STATISTIC_ORDER","OPTIONAL","active","selectedCombatant","hasTalent","ELEMENTAL_BLAST_TALENT","addEventListener","Events","removebuff","to","SELECTED_PLAYER","spell","ELEMENTAL_BLAST_BUFFS","onRemoveBuff","applybuff","onApplyBuff","this","icon","value","formatPercentage","elementalBlastUptime","label","tooltip","className","masteryUptime","critUptime","hasteUptime","getBuffUptime","ELEMENTAL_BLAST_HASTE","owner","fightDuration","ELEMENTAL_BLAST_CRIT","ELEMENTAL_BLAST_MASTERY","Analyzer","BoringSpellValueText","children","calculateEffectiveDamage","increase","raw","amount","absorbed","Icon","other","xmlns","viewBox","d","calculateEffectiveHealing","relativeHealIncrease","overheal","effectiveHealing","Math","max","Object","defineProperty","exports","_typeof","Symbol","iterator","obj","constructor","prototype","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","require","_propTypes2","_classnames2","__esModule","default","_defineProperty","ANIMATION_STATE_CLASSES","animating","animatingUp","animatingDown","animatingToHeightZero","animatingToHeightAuto","animatingToHeightSpecific","static","staticHeightZero","staticHeightAuto","staticHeightSpecific","PROPS_TO_OMIT","omit","_len","keys","Array","_key","res","objectKeys","indexOf","cancelAnimationFrames","requestAnimationFrameIDs","cancelAnimationFrame","isNumber","n","isNaN","parseFloat","isFinite","isPercentage","height","search","substr","runCallback","callback","params","AnimateHeight","_React$Component","instance","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","animationFrameIDs","overflow","animationStateClasses","getStaticStateClasses","state","shouldUseTransitions","subClass","superClass","create","setPrototypeOf","_inherits","contentElement","style","hideContent","prevProps","prevState","_this2","_props","delay","duration","onAnimationEnd","onAnimationStart","_cx","showContent","contentHeight","offsetHeight","totalDuration","newHeight","timeoutState","isCurrentHeightAuto","timeoutAnimationStateClasses","setState","clearTimeout","timeoutID","animationClassesTimeoutID","requestAnimationFrame","startAnimationHelper","setTimeout","display","_cx2","_cx3","_this3","_props2","animateOpacity","applyInlineTransitions","contentClassName","easing","_state","componentStyle","transition","WebkitTransition","contentStyle","opacity","componentClasses","ariaHidden","createElement","apply","undefined","concat","ref","el","Component","propTypes","bool","object","any","isRequired","string","number","propName","componentName","func","defaultProps","SHAMAN_BASE_ABILITIES","HEALING_WAVE","CHAIN_HEAL","HEALING_SURGE","HEALING_STREAM_TOTEM_HEAL","HEALING_TIDE_TOTEM_HEAL","RIPTIDE","HEALING_RAIN_HEAL","WELLSPRING_HEAL","UNLEASH_LIFE_TALENT","EARTH_SHIELD_HEAL","DOWNPOUR_TALENT","ASCENDANCE_INITIAL_HEAL","RESTORATION_COLORS","UNUSED","CHAIN_HEAL_COEFFICIENT","HIGH_TIDE_COEFFICIENT","SWIRLING_CURRENTS_RANKS","HEAVY_RAINFALL_RANKS","EMBRACE_OF_EARTH_RANKS","NATURES_FOCUS_RANKS","ABILITIES_AFFECTED_BY_HEALING_INCREASES","CLOUDBURST_TOTEM_HEAL","ASCENDANCE_HEAL","LEECH","BASE_ABILITIES_AFFECTED_BY_MASTERY","ABILITIES_AFFECTED_BY_MASTERY","ABILITIES_FEEDING_INTO_CBT","NATURES_GUARDIAN_HEAL","ABILITIES_NOT_FEEDING_INTO_ASCENDANCE","SPIRIT_LINK_TOTEM_REDISTRIBUTE","EarlyDotRefreshes","args","targets","lastGCD","lastCast","lastCastGoodExtension","lastCastMinWaste","Number","MAX_SAFE_INTEGER","lastCastMaxEffect","casts","dots","dot","debuffId","castId","badCasts","addedDuration","wastedDuration","refreshdebuff","by","onRefreshDebuff","applydebuff","onApplyDebuff","GlobalCooldown","onGCD","cast","onCast","text","meta","isInefficientCast","inefficientCastReason","getDot","encodeTargetString","targetInstance","extensionInfo","extendDot","wasted","min","effective","getDotByCast","checkLastCast","afterLastCastSet","lastCastBuffer","isLastCastBad","getLastBadCastText","addBadCast","name","formatDuration","spellId","find","element","extension","Error","newDuration","maxDuration","lostDuration","abilityTracker","getAbility","minor","avg","major","count","actual","badCastsEffectivePercent","isLessThan","average","dependencies","enemies","Enemies","AbilityTracker","EARTHSHIELD_HEALING_INCREASE","EarthShield","combatants","healing","buffHealing","earthShieldHealingIncrease","category","STATISTIC_CATEGORY","TALENTS","isRsham","specId","SPECS","RESTORATION_SHAMAN","EARTH_SHIELD","GENERAL","conduitRank","conduitRankBySpellID","EMBRACE_OF_EARTH","heal","onEarthShieldHeal","HEALING_ABILITIES_AMPED_BY_EARTH_SHIELD_FILTERED","HEALING_ABILITIES_AMPED_BY_EARTH_SHIELD","filter","p","onEarthShieldAmpSpellHeal","combatant","getEntity","hasBuff","position","getPercentageOfTotalHealingDone","uptimePercent","getFeeding","values","players","reduce","uptime","player","playerId","ThresholdStyle","PERCENTAGE","Combatants","SpiritWolf","damageReduced","SPIRIT_WOLF_TALENT","damage","damageTaken","SPIRIT_WOLF_BUFF","stacks","getBuff","formatNumber","totalDrps","formatThousands","StaticCharge","spellUsable","STATIC_CHARGE_TALENT","SELECTED_PLAYER_PET","STATIC_CHARGE_DEBUFF","stunApplication","cooldownRemaining","CAPACITOR_TOTEM","reduceCooldown","SpellUsable","AstralShift","ASTRAL_SHIFT","suggest","when","suggestion","addSuggestion","recommended","i18n","_","ResourceGenerated","approximate","resourceType","FlameShock","badLavaBursts","LAVA_BURST","onDamage","FLAME_SHOCK","badCastsPercent","isGreaterThan","uptimeThreshold","badRefreshSuggestion","refreshThreshold","CORE","size","EarlyDotRefreshesAnalyzer","movementFiller"],"mappings":"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","file":"static/js/7.0c689ce1.chunk.js","sourcesContent":["import EventsNormalizer from 'parser/core/EventsNormalizer';\r\nimport SPELLS from 'common/SPELLS';\r\nimport { EventType } from 'parser/core/Events';\r\n\r\nclass ReincarnationNormalizer extends EventsNormalizer {\r\n\r\n  fabricatedEvent = null;\r\n\r\n  normalize(events) {\r\n    const fixedEvents = [];\r\n    events.forEach((event, eventIndex) => {\r\n\r\n\r\n      if (event.type === EventType.Cast && event.ability.guid === SPELLS.REINCARNATION.id) {\r\n            this.fabricatedEvent = {\r\n              timestamp: event.timestamp,\r\n              type: EventType.Resurrect,\r\n              sourceID: event.sourceID,\r\n              targetID: event.sourceID,\r\n              sourceIsFriendly: true,\r\n              targetIsFriendly: true,\r\n              ability: SPELLS.REINCARNATION,\r\n              __fabricated: true,\r\n            };\r\n        fixedEvents.push(this.fabricatedEvent);\r\n      }\r\n      fixedEvents.push(event);\r\n    });\r\n    return fixedEvents;\r\n  }\r\n\r\n}\r\nexport default ReincarnationNormalizer;\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport SpellIcon from 'common/SpellIcon';\r\nimport { formatPercentage } from 'common/format';\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport StatisticBox, { STATISTIC_ORDER } from 'interface/others/StatisticBox';\r\nimport Events, { ApplyBuffEvent, RemoveBuffEvent } from 'parser/core/Events';\r\n\r\nimport { ELEMENTAL_BLAST_BUFFS } from '../constants';\r\n\r\nclass ElementalBlast extends Analyzer {\r\n  currentBuffAmount=0;\r\n  lastFreshApply=0;\r\n  resultDuration=0;\r\n\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.active = this.selectedCombatant.hasTalent(SPELLS.ELEMENTAL_BLAST_TALENT.id);\r\n    this.addEventListener(Events.removebuff.to(SELECTED_PLAYER).spell(ELEMENTAL_BLAST_BUFFS), this.onRemoveBuff);\r\n    this.addEventListener(Events.applybuff.to(SELECTED_PLAYER).spell(ELEMENTAL_BLAST_BUFFS), this.onApplyBuff);\r\n  }\r\n\r\n  onRemoveBuff(event: RemoveBuffEvent) {\r\n    this.currentBuffAmount -= 1;\r\n    if (this.currentBuffAmount===0) {\r\n      this.resultDuration += event.timestamp - this.lastFreshApply;\r\n    }\r\n  }\r\n\r\n  onApplyBuff(event: ApplyBuffEvent) {\r\n    if (this.currentBuffAmount===0) {\r\n      this.lastFreshApply = event.timestamp;\r\n    }\r\n    this.currentBuffAmount += 1;\r\n  }\r\n\r\n  get hasteUptime() {\r\n    return this.selectedCombatant.getBuffUptime(SPELLS.ELEMENTAL_BLAST_HASTE.id) / this.owner.fightDuration;\r\n  }\r\n\r\n  get critUptime() {\r\n    return this.selectedCombatant.getBuffUptime(SPELLS.ELEMENTAL_BLAST_CRIT.id) / this.owner.fightDuration;\r\n  }\r\n\r\n  get masteryUptime() {\r\n    return this.selectedCombatant.getBuffUptime(SPELLS.ELEMENTAL_BLAST_MASTERY.id) / this.owner.fightDuration;\r\n  }\r\n\r\n  get elementalBlastUptime() {\r\n    return this.resultDuration/this.owner.fightDuration;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <StatisticBox\r\n        icon={<SpellIcon id={SPELLS.ELEMENTAL_BLAST_TALENT.id} />}\r\n        value={`${formatPercentage(this.elementalBlastUptime)} %`}\r\n        label=\"Uptime\"\r\n        tooltip={(\r\n          <>\r\n            <span className=\"stat-mastery\">\r\n              <strong>{formatPercentage(this.masteryUptime)}% Mastery</strong>\r\n            </span><br />\r\n            <span className=\"stat-criticalstrike\">\r\n              <strong>{formatPercentage(this.critUptime)}% Crit</strong>\r\n            </span><br />\r\n            <span className=\"stat-haste\">\r\n              <strong>{formatPercentage(this.hasteUptime)}% Haste</strong>\r\n            </span>\r\n          </>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n  statisticOrder = STATISTIC_ORDER.OPTIONAL();\r\n}\r\n\r\nexport default ElementalBlast;\r\n","/**\r\n * A simple component that shows the spell value in the most plain way possible.\r\n * Use this only as the very last resort.\r\n */\r\nimport React from 'react';\r\n\r\nimport SpellIcon from 'common/SpellIcon';\r\nimport SpellLink from 'common/SpellLink';\r\nimport Spell from 'common/SPELLS/Spell';\r\n\r\ntype Props = {\r\n  spell: Spell;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst BoringSpellValueText = ({ spell, children, className }: Props) => (\r\n  <div className={`pad boring-text ${className || ''}`}>\r\n    <label>\r\n      <SpellIcon id={spell.id} /> <SpellLink id={spell.id} icon={false} />\r\n    </label>\r\n    <div className=\"value\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default BoringSpellValueText;\r\n","export default function calculateEffectiveDamage(event, increase) {\r\n  const raw = (event.amount || 0) + (event.absorbed || 0);\r\n  return raw - (raw / (1 + increase));\r\n}\r\n","import React from 'react';\r\n\r\n// https://thenounproject.com/term/duration/370713/\r\n// duration by Bohdan Burmich from the Noun Project\r\nconst Icon = ({ ...other }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10 10 80 80\" className=\"icon\" {...other}>\r\n    <path d=\"M50,86.4865c17.4361,0,31.6216-14.1855,31.6216-31.6216c0-16.6168-12.8865-30.2714-29.1892-31.5189v-4.9677h7.2973v-4.8649  H40.2703v4.8649h7.2973v4.9677c-16.3027,1.2475-29.1892,14.902-29.1892,31.5189C18.3784,72.3009,32.5639,86.4865,50,86.4865z M52.4324,28.2236c3.1101,0.2817,6.0664,1.0982,8.7798,2.356l-8.7798,15.2073V28.2236z M47.5676,28.2236v26.6412 c0,1.1008,0.7393,2.0647,1.8029,2.3497c0.209,0.0561,0.4205,0.0827,0.6295,0.0827c0.8533,0,1.6642-0.4504,2.1065-1.2162 l13.3146-23.0616c6.8507,4.8503,11.3357,12.8315,11.3357,21.8454c0,14.7537-12.0031,26.7567-26.7568,26.7567 s-26.7568-12.003-26.7568-26.7567C23.2432,40.9315,33.9501,29.4573,47.5676,28.2236z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Icon;\r\n","/**\r\n * Velen's is a static 15% healing increase to the raw healing going out. If that increase turns out to be overhealing it is worthless, so my approach of reducing the healing gain by the overhealing really only gives you the gain in healing that actually did something. An implementation that ignores overhealing and acts like Velen's contributed 15% of the effective healing will be inaccurate if there was any overhealing.\r\n *\r\n * I'll try to explain this PoV with an example:\r\n * Normal spell heals for 1,000 raw\r\n * With Velen's this is 1,150 raw. So Velen's increased the heal by 150 raw healing, that healing is on top of the original 1,000 raw healing the spell normally does.\r\n * Then comes overhealing;\r\n * If the spell overheals for 50, then the spell will have healed for 1,100. At this point Velen's effectively contributes 100 healing.\r\n * If the spell overheals for 100, then the spell will have healed for 1,050. So velen's effectiveness is 50;\r\n * If the spell overheals for 150, then the spell will have healed for the original 1,000 and Velen's increase was completely wasted.\r\n * If the spell overheals for 200, then 50 healing of the original spell was already overhealing, and the increased healing from Velen's did nothing (0).\r\n *\r\n * If you ignore raw healing and look at the actual healing done you may see the last 950 healing and think 15% of that was contributed by Velen's, while in fact it was 0.\r\n */\r\n\r\nexport default function calculateEffectiveHealing(event, relativeHealIncrease) {\r\n  const amount = event.amount;\r\n  const absorbed = event.absorbed || 0;\r\n  const overheal = event.overheal || 0;\r\n  const raw = amount + absorbed + overheal;\r\n  const relativeHealingIncreaseFactor = 1 + relativeHealIncrease;\r\n  const healingIncrease = raw - raw / relativeHealingIncreaseFactor;\r\n  const effectiveHealing = healingIncrease - overheal;\r\n\r\n  return Math.max(0, effectiveHealing);\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ANIMATION_STATE_CLASSES = {\n  animating: 'rah-animating',\n  animatingUp: 'rah-animating--up',\n  animatingDown: 'rah-animating--down',\n  animatingToHeightZero: 'rah-animating--to-height-zero',\n  animatingToHeightAuto: 'rah-animating--to-height-auto',\n  animatingToHeightSpecific: 'rah-animating--to-height-specific',\n  static: 'rah-static',\n  staticHeightZero: 'rah-static--height-zero',\n  staticHeightAuto: 'rah-static--height-auto',\n  staticHeightSpecific: 'rah-static--height-specific'\n};\n\nvar PROPS_TO_OMIT = ['animateOpacity', 'animationStateClasses', 'applyInlineTransitions', 'children', 'contentClassName', 'delay', 'duration', 'easing', 'height', 'onAnimationEnd', 'onAnimationStart'];\n\nfunction omit(obj) {\n  for (var _len = arguments.length, keys = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n\n  if (!keys.length) {\n    return obj;\n  }\n\n  var res = {};\n  var objectKeys = Object.keys(obj);\n\n  for (var i = 0; i < objectKeys.length; i++) {\n    var key = objectKeys[i];\n\n    if (keys.indexOf(key) === -1) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res;\n}\n\n// Start animation helper using nested requestAnimationFrames\nfunction startAnimationHelper(callback) {\n  var requestAnimationFrameIDs = [];\n\n  requestAnimationFrameIDs[0] = requestAnimationFrame(function () {\n    requestAnimationFrameIDs[1] = requestAnimationFrame(function () {\n      callback();\n    });\n  });\n\n  return requestAnimationFrameIDs;\n}\n\nfunction cancelAnimationFrames(requestAnimationFrameIDs) {\n  requestAnimationFrameIDs.forEach(function (id) {\n    return cancelAnimationFrame(id);\n  });\n}\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction isPercentage(height) {\n  // Percentage height\n  return typeof height === 'string' && height.search('%') === height.length - 1 && isNumber(height.substr(0, height.length - 1));\n}\n\nfunction runCallback(callback, params) {\n  if (callback && typeof callback === 'function') {\n    callback(params);\n  }\n}\n\nvar AnimateHeight = function (_React$Component) {\n  _inherits(AnimateHeight, _React$Component);\n\n  function AnimateHeight(props) {\n    _classCallCheck(this, AnimateHeight);\n\n    var _this = _possibleConstructorReturn(this, (AnimateHeight.__proto__ || Object.getPrototypeOf(AnimateHeight)).call(this, props));\n\n    _this.animationFrameIDs = [];\n\n    var height = 'auto';\n    var overflow = 'visible';\n\n    if (isNumber(props.height)) {\n      // If value is string \"0\" make sure we convert it to number 0\n      height = props.height < 0 || props.height === '0' ? 0 : props.height;\n      overflow = 'hidden';\n    } else if (isPercentage(props.height)) {\n      // If value is string \"0%\" make sure we convert it to number 0\n      height = props.height === '0%' ? 0 : props.height;\n      overflow = 'hidden';\n    }\n\n    _this.animationStateClasses = _extends({}, ANIMATION_STATE_CLASSES, props.animationStateClasses);\n\n    var animationStateClasses = _this.getStaticStateClasses(height);\n\n    _this.state = {\n      animationStateClasses: animationStateClasses,\n      height: height,\n      overflow: overflow,\n      shouldUseTransitions: false\n    };\n    return _this;\n  }\n\n  _createClass(AnimateHeight, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var height = this.state.height;\n\n      // Hide content if height is 0 (to prevent tabbing into it)\n      // Check for contentElement is added cause this would fail in tests (react-test-renderer)\n      // Read more here: https://github.com/Stanko/react-animate-height/issues/17\n\n      if (this.contentElement && this.contentElement.style) {\n        this.hideContent(height);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _props = this.props,\n          delay = _props.delay,\n          duration = _props.duration,\n          height = _props.height,\n          onAnimationEnd = _props.onAnimationEnd,\n          onAnimationStart = _props.onAnimationStart;\n\n      // Check if 'height' prop has changed\n\n      if (this.contentElement && height !== prevProps.height) {\n        var _cx;\n\n        // Remove display: none from the content div\n        // if it was hidden to prevent tabbing into it\n        this.showContent(prevState.height);\n\n        // Cache content height\n        this.contentElement.style.overflow = 'hidden';\n        var contentHeight = this.contentElement.offsetHeight;\n        this.contentElement.style.overflow = '';\n\n        // set total animation time\n        var totalDuration = duration + delay;\n\n        var newHeight = null;\n        var timeoutState = {\n          height: null, // it will be always set to either 'auto' or specific number\n          overflow: 'hidden'\n        };\n        var isCurrentHeightAuto = prevState.height === 'auto';\n\n        if (isNumber(height)) {\n          // If value is string \"0\" make sure we convert it to number 0\n          newHeight = height < 0 || height === '0' ? 0 : height;\n          timeoutState.height = newHeight;\n        } else if (isPercentage(height)) {\n          // If value is string \"0%\" make sure we convert it to number 0\n          newHeight = height === '0%' ? 0 : height;\n          timeoutState.height = newHeight;\n        } else {\n          // If not, animate to content height\n          // and then reset to auto\n          newHeight = contentHeight; // TODO solve contentHeight = 0\n          timeoutState.height = 'auto';\n          timeoutState.overflow = null;\n        }\n\n        if (isCurrentHeightAuto) {\n          // This is the height to be animated to\n          timeoutState.height = newHeight;\n\n          // If previous height was 'auto'\n          // set starting height explicitly to be able to use transition\n          newHeight = contentHeight;\n        }\n\n        // Animation classes\n        var animationStateClasses = (0, _classnames2.default)((_cx = {}, _defineProperty(_cx, this.animationStateClasses.animating, true), _defineProperty(_cx, this.animationStateClasses.animatingUp, prevProps.height === 'auto' || height < prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingDown, height === 'auto' || height > prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingToHeightZero, timeoutState.height === 0), _defineProperty(_cx, this.animationStateClasses.animatingToHeightAuto, timeoutState.height === 'auto'), _defineProperty(_cx, this.animationStateClasses.animatingToHeightSpecific, timeoutState.height > 0), _cx));\n\n        // Animation classes to be put after animation is complete\n        var timeoutAnimationStateClasses = this.getStaticStateClasses(timeoutState.height);\n\n        // Set starting height and animating classes\n        // We are safe to call set state as it will not trigger infinite loop\n        // because of the \"height !== prevProps.height\" check\n        this.setState({ // eslint-disable-line react/no-did-update-set-state\n          animationStateClasses: animationStateClasses,\n          height: newHeight,\n          overflow: 'hidden',\n          // When animating from 'auto' we first need to set fixed height\n          // that change should be animated\n          shouldUseTransitions: !isCurrentHeightAuto\n        });\n\n        // Clear timeouts\n        clearTimeout(this.timeoutID);\n        clearTimeout(this.animationClassesTimeoutID);\n\n        if (isCurrentHeightAuto) {\n          // When animating from 'auto' we use a short timeout to start animation\n          // after setting fixed height above\n          timeoutState.shouldUseTransitions = true;\n\n          cancelAnimationFrames(this.animationFrameIDs);\n          this.animationFrameIDs = startAnimationHelper(function () {\n            _this2.setState(timeoutState);\n\n            // ANIMATION STARTS, run a callback if it exists\n            runCallback(onAnimationStart, { newHeight: timeoutState.height });\n          });\n\n          // Set static classes and remove transitions when animation ends\n          this.animationClassesTimeoutID = setTimeout(function () {\n            _this2.setState({\n              animationStateClasses: timeoutAnimationStateClasses,\n              shouldUseTransitions: false\n            });\n\n            // ANIMATION ENDS\n            // Hide content if height is 0 (to prevent tabbing into it)\n            _this2.hideContent(timeoutState.height);\n            // Run a callback if it exists\n            runCallback(onAnimationEnd, { newHeight: timeoutState.height });\n          }, totalDuration);\n        } else {\n          // ANIMATION STARTS, run a callback if it exists\n          runCallback(onAnimationStart, { newHeight: newHeight });\n\n          // Set end height, classes and remove transitions when animation is complete\n          this.timeoutID = setTimeout(function () {\n            timeoutState.animationStateClasses = timeoutAnimationStateClasses;\n            timeoutState.shouldUseTransitions = false;\n\n            _this2.setState(timeoutState);\n\n            // ANIMATION ENDS\n            // If height is auto, don't hide the content\n            // (case when element is empty, therefore height is 0)\n            if (height !== 'auto') {\n              // Hide content if height is 0 (to prevent tabbing into it)\n              _this2.hideContent(newHeight); // TODO solve newHeight = 0\n            }\n            // Run a callback if it exists\n            runCallback(onAnimationEnd, { newHeight: newHeight });\n          }, totalDuration);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      cancelAnimationFrames(this.animationFrameIDs);\n\n      clearTimeout(this.timeoutID);\n      clearTimeout(this.animationClassesTimeoutID);\n\n      this.timeoutID = null;\n      this.animationClassesTimeoutID = null;\n      this.animationStateClasses = null;\n    }\n  }, {\n    key: 'showContent',\n    value: function showContent(height) {\n      if (height === 0) {\n        this.contentElement.style.display = '';\n      }\n    }\n  }, {\n    key: 'hideContent',\n    value: function hideContent(newHeight) {\n      if (newHeight === 0) {\n        this.contentElement.style.display = 'none';\n      }\n    }\n  }, {\n    key: 'getStaticStateClasses',\n    value: function getStaticStateClasses(height) {\n      var _cx2;\n\n      return (0, _classnames2.default)((_cx2 = {}, _defineProperty(_cx2, this.animationStateClasses.static, true), _defineProperty(_cx2, this.animationStateClasses.staticHeightZero, height === 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightSpecific, height > 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightAuto, height === 'auto'), _cx2));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _cx3,\n          _this3 = this;\n\n      var _props2 = this.props,\n          animateOpacity = _props2.animateOpacity,\n          applyInlineTransitions = _props2.applyInlineTransitions,\n          children = _props2.children,\n          className = _props2.className,\n          contentClassName = _props2.contentClassName,\n          delay = _props2.delay,\n          duration = _props2.duration,\n          easing = _props2.easing,\n          id = _props2.id,\n          style = _props2.style;\n      var _state = this.state,\n          height = _state.height,\n          overflow = _state.overflow,\n          animationStateClasses = _state.animationStateClasses,\n          shouldUseTransitions = _state.shouldUseTransitions;\n\n\n      var componentStyle = _extends({}, style, {\n        height: height,\n        overflow: overflow || style.overflow\n      });\n\n      if (shouldUseTransitions && applyInlineTransitions) {\n        componentStyle.transition = 'height ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n\n        // Include transition passed through styles\n        if (style.transition) {\n          componentStyle.transition = style.transition + ', ' + componentStyle.transition;\n        }\n\n        // Add webkit vendor prefix still used by opera, blackberry...\n        componentStyle.WebkitTransition = componentStyle.transition;\n      }\n\n      var contentStyle = {};\n\n      if (animateOpacity) {\n        contentStyle.transition = 'opacity ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n        // Add webkit vendor prefix still used by opera, blackberry...\n        contentStyle.WebkitTransition = contentStyle.transition;\n\n        if (height === 0) {\n          contentStyle.opacity = 0;\n        }\n      }\n\n      var componentClasses = (0, _classnames2.default)((_cx3 = {}, _defineProperty(_cx3, animationStateClasses, true), _defineProperty(_cx3, className, className), _cx3));\n\n      // Check if user passed aria-hidden prop\n      var hasAriaHiddenProp = typeof this.props['aria-hidden'] !== 'undefined';\n      var ariaHidden = hasAriaHiddenProp ? this.props['aria-hidden'] : height === 0;\n\n      return _react2.default.createElement(\n        'div',\n        _extends({}, omit.apply(undefined, [this.props].concat(PROPS_TO_OMIT)), {\n          'aria-hidden': ariaHidden,\n          className: componentClasses,\n          id: id,\n          style: componentStyle\n        }),\n        _react2.default.createElement(\n          'div',\n          {\n            className: contentClassName,\n            style: contentStyle,\n            ref: function ref(el) {\n              return _this3.contentElement = el;\n            }\n          },\n          children\n        )\n      );\n    }\n  }]);\n\n  return AnimateHeight;\n}(_react2.default.Component);\n\nvar heightPropType = function heightPropType(props, propName, componentName) {\n  var value = props[propName];\n\n  if (typeof value === 'number' && value >= 0 || isPercentage(value) || value === 'auto') {\n    return null;\n  }\n\n  return new TypeError('value \"' + value + '\" of type \"' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)) + '\" is invalid type for ' + propName + ' in ' + componentName + '. ' + 'It needs to be a positive number, string \"auto\" or percentage string (e.g. \"15%\").');\n};\n\nAnimateHeight.propTypes = {\n  'aria-hidden': _propTypes2.default.bool,\n  animateOpacity: _propTypes2.default.bool,\n  animationStateClasses: _propTypes2.default.object,\n  applyInlineTransitions: _propTypes2.default.bool,\n  children: _propTypes2.default.any.isRequired,\n  className: _propTypes2.default.string,\n  contentClassName: _propTypes2.default.string,\n  delay: _propTypes2.default.number,\n  duration: _propTypes2.default.number,\n  easing: _propTypes2.default.string,\n  height: heightPropType,\n  id: _propTypes2.default.string,\n  onAnimationEnd: _propTypes2.default.func,\n  onAnimationStart: _propTypes2.default.func,\n  style: _propTypes2.default.object\n};\n\nAnimateHeight.defaultProps = {\n  animateOpacity: false,\n  animationStateClasses: ANIMATION_STATE_CLASSES,\n  applyInlineTransitions: true,\n  duration: 250,\n  delay: 0,\n  easing: 'ease',\n  style: {}\n};\n\nexports.default = AnimateHeight;","import SPELLS from 'common/SPELLS';\r\n\r\nconst SHAMAN_BASE_ABILITIES = [\r\n  SPELLS.HEALING_WAVE,\r\n  SPELLS.CHAIN_HEAL,\r\n  SPELLS.HEALING_SURGE,\r\n  SPELLS.HEALING_STREAM_TOTEM_HEAL,\r\n  SPELLS.HEALING_TIDE_TOTEM_HEAL,\r\n  SPELLS.RIPTIDE,\r\n  SPELLS.HEALING_RAIN_HEAL,\r\n  SPELLS.WELLSPRING_HEAL,\r\n  SPELLS.UNLEASH_LIFE_TALENT,\r\n  SPELLS.EARTH_SHIELD_HEAL,\r\n  SPELLS.DOWNPOUR_TALENT,\r\n  SPELLS.ASCENDANCE_INITIAL_HEAL,\r\n];\r\n\r\nexport const RESTORATION_COLORS = {\r\n  CHAIN_HEAL: '#203755',\r\n  HEALING_WAVE: '#146585',\r\n  HEALING_SURGE: '#40b3bf',\r\n  RIPTIDE: '#a3dbce',\r\n  UNUSED:'#CC3D20',\r\n};\r\n\r\n// Spell Coefficients\r\nexport const CHAIN_HEAL_COEFFICIENT = 1.4;\r\nexport const HEALING_WAVE_COEFFICIENT = 1.7;\r\nexport const HEALING_SURGE_COEFFICIENT = 1.57;\r\nexport const HIGH_TIDE_COEFFICIENT = 1.68;\r\nexport const HEALING_WAVE_CAST_TIME = 2.5;\r\n\r\n// Conduit Ranks\r\nexport const SWIRLING_CURRENTS_RANKS = [20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40];\r\nexport const HEAVY_RAINFALL_RANKS = [75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 130, 135, 140, 145];\r\nexport const EMBRACE_OF_EARTH_RANKS = [5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 10.5, 11, 11.5, 12];\r\nexport const NATURES_FOCUS_RANKS = [10, 10.66, 11.33, 12, 12.66, 13.33, 14, 15, 16, 16.66, 17.33, 18, 18.66, 19.33, 20];\r\n\r\nexport const ABILITIES_AFFECTED_BY_HEALING_INCREASES = [\r\n  ...SHAMAN_BASE_ABILITIES,\r\n\r\n  // While the following spells don't double dip in healing increases, they gain the same percentual bonus from the transfer\r\n  SPELLS.CLOUDBURST_TOTEM_HEAL,\r\n  SPELLS.ASCENDANCE_HEAL,\r\n  SPELLS.LEECH,\r\n];\r\n\r\nexport const BASE_ABILITIES_AFFECTED_BY_MASTERY = [\r\n  ...SHAMAN_BASE_ABILITIES,\r\n];\r\n\r\nexport const ABILITIES_AFFECTED_BY_MASTERY = [\r\n  ...BASE_ABILITIES_AFFECTED_BY_MASTERY,\r\n  // While the following spells don't double dip in healing increases, they gain the same percentual bonus from the transfer\r\n  SPELLS.CLOUDBURST_TOTEM_HEAL,\r\n  SPELLS.ASCENDANCE_HEAL,\r\n  SPELLS.LEECH,\r\n];\r\n\r\nexport const ABILITIES_FEEDING_INTO_CBT = [\r\n  ...SHAMAN_BASE_ABILITIES,\r\n  SPELLS.ASCENDANCE_HEAL,\r\n  SPELLS.NATURES_GUARDIAN_HEAL,\r\n];\r\n\r\nexport const ABILITIES_NOT_FEEDING_INTO_ASCENDANCE = [\r\n  SPELLS.HEALING_TIDE_TOTEM_HEAL,\r\n  SPELLS.HEALING_STREAM_TOTEM_HEAL,\r\n  SPELLS.SPIRIT_LINK_TOTEM_REDISTRIBUTE,\r\n  SPELLS.LEECH,\r\n  SPELLS.ASCENDANCE_HEAL,\r\n  SPELLS.CLOUDBURST_TOTEM_HEAL,\r\n  SPELLS.ASCENDANCE_INITIAL_HEAL,\r\n];\r\n","import Analyzer, { SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport Enemies from 'parser/shared/modules/Enemies';\r\nimport AbilityTracker from 'parser/shared/modules/AbilityTracker';\r\nimport { encodeTargetString } from 'parser/shared/modules/EnemyInstances';\r\nimport { formatDuration } from 'common/format';\r\nimport Events from 'parser/core/Events';\r\n\r\nconst BUFFER_MS = 100;\r\nconst PANDEMIC_WINDOW = 0.3;\r\n\r\n// example dot:\r\n// {\r\n//   name: \"Stellar Flare\", //name of the spell for display\r\n//   debuffId: SPELLS.STELLAR_FLARE_TALENT.id, //id of the dot debuff\r\n//   castId: SPELLS.STELLAR_FLARE_TALENT.id, //id of the dot cast\r\n//   duration: 24000, //duration of the dot in ms\r\n// },\r\n\r\n// Abstract class for early dot refreshes\r\n// See /parser/Druid/Balance/Modules/Features/EarlyDotRefreshes.js for an example implementation.\r\nclass EarlyDotRefreshes extends Analyzer {\r\n  static dependencies = {\r\n    enemies: Enemies,\r\n    abilityTracker: AbilityTracker,\r\n  };\r\n\r\n  static dots = [];\r\n  targets = {};\r\n  lastGCD = null;\r\n  lastCast = null;\r\n  lastCastGoodExtension = false;\r\n  lastCastMinWaste = Number.MAX_SAFE_INTEGER;\r\n  lastCastMaxEffect = 0;\r\n  casts = {};\r\n\r\n  constructor(...args) {\r\n    super(...args);\r\n    this.constructor.dots.forEach(dot => {\r\n      this.targets[dot.debuffId] = {};\r\n      this.casts[dot.castId] = {\r\n        badCasts: 0,\r\n        addedDuration: 0,\r\n        wastedDuration: 0,\r\n      };\r\n    });\r\n    this.addEventListener(Events.refreshdebuff.by(SELECTED_PLAYER), this.onRefreshDebuff);\r\n    this.addEventListener(Events.applydebuff.by(SELECTED_PLAYER), this.onApplyDebuff);\r\n    this.addEventListener(Events.GlobalCooldown.by(SELECTED_PLAYER), this.onGCD);\r\n    this.addEventListener(Events.cast.by(SELECTED_PLAYER), this.onCast);\r\n  }\r\n\r\n  addBadCast(event, text) {\r\n    this.casts[this.lastCast.ability.guid].badCasts += 1;\r\n    this.casts[this.lastCast.ability.guid].wastedDuration += this.lastCastMinWaste;\r\n    event.meta = event.meta || {};\r\n    event.meta.isInefficientCast = true;\r\n    event.meta.inefficientCastReason = text;\r\n  }\r\n\r\n  onRefreshDebuff(event) {\r\n    const dot = this.getDot(event.ability.guid);\r\n    if (!dot) {\r\n      return;\r\n    }\r\n    const targetID = encodeTargetString(event.targetID, event.targetInstance);\r\n    const extensionInfo = this.extendDot(dot.debuffId, targetID, dot.duration, event.timestamp);\r\n    if(this.lastCastGoodExtension){\r\n      return;\r\n    }\r\n    this.lastCastGoodExtension = extensionInfo.wasted === 0;\r\n    this.lastCastMinWaste = Math.min(this.lastCastMinWaste, extensionInfo.wasted);\r\n    this.lastCastMaxEffect = Math.max(this.lastCastMaxEffect, extensionInfo.effective);\r\n  }\r\n\r\n  onApplyDebuff(event) {\r\n    const dot = this.getDot(event.ability.guid);\r\n    if (!dot) {\r\n      return;\r\n    }\r\n    this.targets[dot.debuffId][encodeTargetString(event.targetID, event.targetInstance)] = event.timestamp + dot.duration;\r\n    this.lastCastGoodExtension = true;\r\n    this.lastCastMinWaste = 0;\r\n    this.lastCastMaxEffect = dot.duration;\r\n  }\r\n\r\n  onGCD(event) {\r\n    const dot = this.getDotByCast(event.ability.guid);\r\n    if (!dot) {\r\n      return;\r\n    }\r\n    this.lastGCD = event;\r\n  }\r\n\r\n  onCast(event) {\r\n    this.checkLastCast(event);\r\n    const dot = this.getDotByCast(event.ability.guid);\r\n    if (!dot) {\r\n      return;\r\n    }\r\n    this.lastCast = event;\r\n    this.lastCastGoodExtension = false;\r\n    this.lastCastMinWaste = Number.MAX_SAFE_INTEGER;\r\n    this.lastCastMaxEffect = 0;\r\n    this.afterLastCastSet(event);\r\n  }\r\n\r\n  afterLastCastSet(event) {\r\n    //Extension to help capture state during the \"LastCast\".\r\n  }\r\n\r\n  // Determines whether the last cast should be checked or not.\r\n  checkLastCast(event) {\r\n    if (!this.lastGCD || !this.lastCast) {\r\n      return;\r\n    }\r\n    // We wait roughly a GCD to check, to account for minor travel times.\r\n    const timeSinceCast = event.timestamp - this.lastGCD.timestamp;\r\n    if (timeSinceCast < this.lastCastBuffer){\r\n      return;\r\n    }\r\n    this.casts[this.lastCast.ability.guid].addedDuration += this.lastCastMaxEffect;\r\n    this.isLastCastBad(event);\r\n    this.lastGCD = null;\r\n    this.lastCast = null;\r\n  }\r\n\r\n  get lastCastBuffer() {\r\n    return this.lastGCD.duration * 2 - BUFFER_MS;\r\n  }\r\n\r\n  // Checks the status of the last cast and marks it accordingly.\r\n  isLastCastBad(event) {\r\n    if (this.lastCastGoodExtension) {\r\n      return; // Should not be marked as bad.\r\n    }\r\n    const dot = this.getDotByCast(this.lastCast.ability.guid);\r\n    const text = this.getLastBadCastText(event, dot);\r\n    if (text !== '') {\r\n      this.addBadCast(this.lastCast, text);\r\n    }\r\n  }\r\n\r\n  // Get the suggestion for last bad cast. If empty, cast will be considered good.\r\n  getLastBadCastText(event, dot) {\r\n    return `${dot.name} was refreshed ${formatDuration(this.lastCastMinWaste/1000)} seconds before the pandemic window. It should be refreshed with at most ${formatDuration(PANDEMIC_WINDOW * dot.duration/1000)} left or part of the dot will be wasted.`;\r\n  }\r\n\r\n  //Returns the dot object\r\n  getDot(spellId) {\r\n    const dot = this.constructor.dots.find(element => element.debuffId === spellId);\r\n    return dot;\r\n  }\r\n\r\n  //Returns the dot object\r\n  getDotByCast(spellId) {\r\n    const dot = this.constructor.dots.find(element => element.castId === spellId);\r\n    return dot;\r\n  }\r\n\r\n  // Extends the dot and returns true if it was a good extension (no duration wasted) or false if it was a bad extension.\r\n  extendDot(spellId, targetID, extension, timestamp) {\r\n    const dot = this.getDot(spellId);\r\n    if (!dot) {\r\n      throw new Error(`The spellID ${spellId} is not in the list of dots to track`);\r\n    }\r\n    const remainingDuration = this.targets[dot.debuffId][targetID] - timestamp || 0;\r\n    const newDuration = remainingDuration + extension;\r\n    const maxDuration = (1 + PANDEMIC_WINDOW) * dot.duration;\r\n    const lostDuration = newDuration - maxDuration;\r\n    if (lostDuration <= 0) { //full extension\r\n      this.targets[dot.debuffId][targetID] = timestamp + newDuration;\r\n      return {wasted: 0, effective: extension};\r\n    } // Else not full extension\r\n    this.targets[dot.debuffId][targetID] = timestamp + maxDuration;\r\n    return {wasted: lostDuration, effective: extension - lostDuration};\r\n  }\r\n\r\n  badCastsPercent(spellId) {\r\n    const ability = this.abilityTracker.getAbility(spellId);\r\n    return this.casts[spellId].badCasts / ability.casts || 0;\r\n  }\r\n\r\n  badCastsEffectivePercent(spellId) {\r\n    if(!this.casts[spellId].addedDuration) {return 1;}\r\n    return this.casts[spellId].addedDuration / (this.casts[spellId].addedDuration+this.casts[spellId].wastedDuration);\r\n  }\r\n\r\n  makeSuggestionThresholds(spell, minor, avg, major) {\r\n    return {\r\n      spell: spell,\r\n      count: this.casts[spell.id].badCasts,\r\n      wastedDuration: this.casts[spell.id].wastedDuration,\r\n      actual: this.badCastsEffectivePercent(spell.id),\r\n      isLessThan: {\r\n        minor: minor,\r\n        average: avg,\r\n        major: major,\r\n      },\r\n      style: 'percentage',\r\n    };\r\n  }\r\n}\r\n\r\nexport default EarlyDotRefreshes;\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport { formatPercentage } from 'common/format';\r\nimport SpellLink from 'common/SpellLink';\r\n\r\nimport StatisticBox, { STATISTIC_ORDER } from 'interface/others/StatisticBox';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport ItemHealingDone from 'interface/ItemHealingDone';\r\nimport UptimeIcon from 'interface/icons/Uptime';\r\nimport SPECS from 'game/SPECS';\r\n\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport Events, { HealEvent } from 'parser/core/Events';\r\nimport { ThresholdStyle } from 'parser/core/ParseResults';\r\nimport calculateEffectiveHealing from 'parser/core/calculateEffectiveHealing';\r\nimport Combatants from 'parser/shared/modules/Combatants';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport { HEALING_ABILITIES_AMPED_BY_EARTH_SHIELD } from 'parser/shaman/shared/constants';\r\nimport { EMBRACE_OF_EARTH_RANKS } from 'parser/shaman/restoration/constants';\r\n\r\nexport const EARTHSHIELD_HEALING_INCREASE = 0.20;\r\n\r\nclass EarthShield extends Analyzer {\r\n  static dependencies = {\r\n    combatants: Combatants,\r\n  };\r\n\r\n  protected combatants!: Combatants;\r\n\r\n  healing = 0;\r\n  buffHealing = 0;\r\n  earthShieldHealingIncrease = EARTHSHIELD_HEALING_INCREASE;\r\n  category = STATISTIC_CATEGORY.TALENTS;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    const isRsham = this.selectedCombatant.specId === SPECS.RESTORATION_SHAMAN.id;\r\n    this.active = isRsham || this.selectedCombatant.hasTalent(SPELLS.EARTH_SHIELD.id);\r\n\r\n    if (isRsham) {\r\n      this.category = STATISTIC_CATEGORY.GENERAL;\r\n    }\r\n\r\n    const conduitRank = this.selectedCombatant.conduitRankBySpellID(SPELLS.EMBRACE_OF_EARTH.id);\r\n    if (conduitRank) {\r\n      this.earthShieldHealingIncrease += EMBRACE_OF_EARTH_RANKS[conduitRank] / 100;\r\n    }\r\n\r\n    // event listener for direct heals when taking damage with earth shield\r\n    this.addEventListener(Events.heal.by(SELECTED_PLAYER).spell(SPELLS.EARTH_SHIELD_HEAL), this.onEarthShieldHeal);\r\n\r\n    const HEALING_ABILITIES_AMPED_BY_EARTH_SHIELD_FILTERED = HEALING_ABILITIES_AMPED_BY_EARTH_SHIELD.filter(p => p !== SPELLS.EARTH_SHIELD_HEAL);\r\n    // event listener for healing being buffed by having earth shield on the target\r\n    this.addEventListener(Events.heal.by(SELECTED_PLAYER).spell(HEALING_ABILITIES_AMPED_BY_EARTH_SHIELD_FILTERED), this.onEarthShieldAmpSpellHeal);\r\n  }\r\n\r\n  get uptime() {\r\n    return Object.values((this.combatants.players)).reduce((uptime, player) => uptime + player.getBuffUptime(SPELLS.EARTH_SHIELD.id, this.owner.playerId), 0);\r\n  }\r\n\r\n  get uptimePercent() {\r\n    return this.uptime / this.owner.fightDuration;\r\n  }\r\n\r\n  get suggestionThresholds() {\r\n    return {\r\n      actual: this.uptimePercent,\r\n      isLessThan: {\r\n        minor: 0.95,\r\n        average: 0.90,\r\n        major: 0.80,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n  onEarthShieldHeal(event: HealEvent) {\r\n    this.healing += (event.amount + (event.absorbed || 0));\r\n  }\r\n\r\n  onEarthShieldAmpSpellHeal(event: HealEvent) {\r\n    const combatant = this.combatants.getEntity(event);\r\n    if (combatant && combatant.hasBuff(SPELLS.EARTH_SHIELD.id, event.timestamp)) {\r\n      this.buffHealing += calculateEffectiveHealing(event, this.earthShieldHealingIncrease);\r\n    }\r\n  }\r\n\r\n  // gets overriden by the rshaman module\r\n  getFeeding() {\r\n    return 0;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <StatisticBox\r\n        label={<SpellLink id={SPELLS.EARTH_SHIELD.id} />}\r\n        category={this.category}\r\n        position={STATISTIC_ORDER.OPTIONAL(45)}\r\n        tooltip={<Trans id=\"shaman.shared.earthShield.statistic.tooltip\">{formatPercentage(this.owner.getPercentageOfTotalHealingDone(this.healing))}% from the HoT and {formatPercentage(this.owner.getPercentageOfTotalHealingDone(this.buffHealing))}% from the healing increase.</Trans>}\r\n        value={\r\n          (\r\n            <div>\r\n              <UptimeIcon /> {formatPercentage(this.uptimePercent)}% <small>uptime</small><br />\r\n              <ItemHealingDone amount={this.healing + this.buffHealing + this.getFeeding()} />\r\n            </div>\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EarthShield;\r\n","import SPELLS from 'common/SPELLS';\r\n\r\nimport { ABILITIES_AFFECTED_BY_HEALING_INCREASES } from '../restoration/constants';\r\n\r\nexport const HEALING_ABILITIES_AMPED_BY_EARTH_SHIELD = [\r\n  ...ABILITIES_AFFECTED_BY_HEALING_INCREASES,\r\n];\r\n\r\nexport const ELEMENTAL_BLAST_BUFFS = [\r\n  SPELLS.ELEMENTAL_BLAST_CRIT,\r\n  SPELLS.ELEMENTAL_BLAST_MASTERY,\r\n  SPELLS.ELEMENTAL_BLAST_HASTE,\r\n];\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport SpellIcon from 'common/SpellIcon';\r\nimport { formatThousands, formatNumber } from 'common/format';\r\n\r\nimport StatisticBox, { STATISTIC_ORDER } from 'interface/others/StatisticBox';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\n\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport Events, { DamageEvent } from 'parser/core/Events';\r\nimport { Trans } from '@lingui/macro';\r\nimport SpellLink from 'common/SpellLink';\r\n\r\nconst SPIRIT_WOLF_DAMAGE_REDUCTION_PER_STACK = 0.05;\r\n\r\nclass SpiritWolf extends Analyzer {\r\n  damageReduced = 0;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.active = this.selectedCombatant.hasTalent(SPELLS.SPIRIT_WOLF_TALENT.id);\r\n\r\n    this.addEventListener(Events.damage.to(SELECTED_PLAYER), this.damageTaken);\r\n  }\r\n\r\n  damageTaken(event: DamageEvent) {\r\n    if (!this.selectedCombatant.hasBuff(SPELLS.SPIRIT_WOLF_BUFF.id)) {\r\n      return;\r\n    }\r\n    const stacks = this.selectedCombatant.getBuff(SPELLS.SPIRIT_WOLF_BUFF.id)?.stacks;\r\n    if (!stacks) {\r\n      return;\r\n    }\r\n    const damageTaken = event.amount + (event.absorbed || 0);\r\n    this.damageReduced += damageTaken / (1 - (SPIRIT_WOLF_DAMAGE_REDUCTION_PER_STACK * stacks)) * (SPIRIT_WOLF_DAMAGE_REDUCTION_PER_STACK * stacks);\r\n  }\r\n\r\n  get totalDrps() {\r\n    return this.damageReduced / this.owner.fightDuration * 1000;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <StatisticBox\r\n        position={STATISTIC_ORDER.OPTIONAL(45)}\r\n        category={STATISTIC_CATEGORY.TALENTS}\r\n        icon={<SpellIcon id={SPELLS.SPIRIT_WOLF_TALENT.id} />}\r\n        value={`≈${formatNumber(this.totalDrps)} DRPS`}\r\n        label={<Trans id=\"shaman.shared.damageReduced.label\">Estimated damage reduced</Trans>}\r\n        tooltip={(\r\n          <Trans id=\"shaman.shared.damageReduced.tooltip\">\r\n            The total estimated damage reduced was {formatThousands(this.damageReduced)}.<br /><br />\r\n            \r\n            This is the lowest possible value. This value is pretty accurate for this log if you are looking at the actual gain over not having <SpellLink id={SPELLS.SPIRIT_WOLF_TALENT.id} /> bonus at all, but the gain may end up higher when taking interactions with other damage reductions into account.\r\n          </Trans>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default SpiritWolf;\r\n","import SPELLS from 'common/SPELLS';\r\nimport Analyzer, { Options, SELECTED_PLAYER_PET } from 'parser/core/Analyzer';\r\nimport Events from 'parser/core/Events';\r\nimport SpellUsable from 'parser/shared/modules/SpellUsable';\r\n\r\n// Static Charge can only reduce the cooldown down to 40 seconds\r\nconst minimumCooldown = 40000;\r\nconst stunReduction = 5000;\r\n\r\nclass StaticCharge extends Analyzer {\r\n  static dependencies = {\r\n    spellUsable: SpellUsable,\r\n  };\r\n\r\n  protected spellUsable!: SpellUsable;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.active = this.selectedCombatant.hasTalent(SPELLS.STATIC_CHARGE_TALENT.id);\r\n\r\n    this.addEventListener(Events.applydebuff.by(SELECTED_PLAYER_PET).spell(SPELLS.STATIC_CHARGE_DEBUFF), this.stunApplication);\r\n  }\r\n\r\n  stunApplication() {\r\n    const cooldownRemaining = this.spellUsable.cooldownRemaining(SPELLS.CAPACITOR_TOTEM.id);\r\n    if (cooldownRemaining <= minimumCooldown) {\r\n      return;\r\n    }\r\n\r\n    this.spellUsable.reduceCooldown(SPELLS.CAPACITOR_TOTEM.id, stunReduction);\r\n  }\r\n}\r\n\r\nexport default StaticCharge;\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport SpellIcon from 'common/SpellIcon';\r\nimport { formatThousands, formatNumber } from 'common/format';\r\n\r\nimport StatisticBox, { STATISTIC_ORDER } from 'interface/others/StatisticBox';\r\n\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport Events, { DamageEvent } from 'parser/core/Events';\r\nimport { Trans } from '@lingui/macro';\r\nimport SpellLink from 'common/SpellLink';\r\n\r\nconst ASTRAL_SHIFT_DR = 0.4;\r\n\r\nclass AstralShift extends Analyzer {\r\n  damageReduced = 0;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n\r\n    this.addEventListener(Events.damage.to(SELECTED_PLAYER), this.damageTaken);\r\n  }\r\n\r\n  damageTaken(event: DamageEvent) {\r\n    if (!this.selectedCombatant.hasBuff(SPELLS.ASTRAL_SHIFT.id)) {\r\n      return;\r\n    }\r\n    const damageTaken = event.amount + (event.absorbed || 0);\r\n    this.damageReduced += damageTaken / (1 - (ASTRAL_SHIFT_DR)) * (ASTRAL_SHIFT_DR);\r\n  }\r\n\r\n  get totalDrps() {\r\n    return this.damageReduced / this.owner.fightDuration * 1000;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <StatisticBox\r\n        position={STATISTIC_ORDER.OPTIONAL()}\r\n        icon={<SpellIcon id={SPELLS.ASTRAL_SHIFT.id} />}\r\n        value={`≈${formatNumber(this.totalDrps)} DRPS`}\r\n        label={<Trans id=\"shaman.shared.damageReduced.label\">Estimated damage reduced</Trans>}\r\n        tooltip={(\r\n          <Trans id=\"shaman.shared.damageReduced.tooltip\">\r\n            The total estimated damage reduced was {formatThousands(this.damageReduced)}.<br /><br />\r\n            \r\n            This is the lowest possible value. This value is pretty accurate for this log if you are looking at the actual gain over not having <SpellLink id={SPELLS.ASTRAL_SHIFT.id} /> bonus at all, but the gain may end up higher when taking interactions with other damage reductions into account.\r\n          </Trans>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default AstralShift;\r\n","import React from 'react';\r\nimport { formatPercentage } from 'common/format';\r\nimport SpellLink from 'common/SpellLink';\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\n\r\n  function suggest(when, suggestion) {\r\n    when(suggestion).addSuggestion((suggest, actual, recommended) => suggest(<>You refreshed <SpellLink id={suggestion.spell.id} /> early {suggestion.count} times. The individual casts are highlighted on the timeline.</>)\r\n        .icon(suggestion.spell.icon)\r\n        .actual(i18n._(t('shared.suggestions.dots.countEarlyRefreshes')`${formatPercentage(actual)}% effective duration`))\r\n        .recommended(`<${formatPercentage(recommended)}% is recommended`));\r\n  }\r\n\r\n  export default suggest;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ResourceGenerated = props => {\r\n  const { amount, wasted, approximate, resourceType } = props;\r\n\r\n    return (\r\n      <>\r\n        {approximate && '≈'}{amount} {resourceType.name} generated <small>{wasted>0 && <>{approximate && '≈'}{wasted} wasted</>}</small>\r\n      </>\r\n    );\r\n};\r\n\r\nResourceGenerated.propTypes = {\r\n  amount: PropTypes.number.isRequired,\r\n  wasted: PropTypes.number,\r\n  approximate: PropTypes.bool,\r\n  resourceType: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ResourceGenerated;\r\n\r\nResourceGenerated.defaultProps = {\r\n  approximate: false,\r\n  wasted: 0,\r\n};\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport UptimeIcon from 'interface/icons/Uptime';\r\nimport SpellLink from 'common/SpellLink';\r\nimport { formatNumber, formatPercentage } from 'common/format';\r\n\r\nimport Enemies from 'parser/shared/modules/Enemies';\r\nimport EarlyDotRefreshesAnalyzer from 'parser/shared/modules/earlydotrefreshes/EarlyDotRefreshes';\r\nimport badRefreshSuggestion from 'parser/shared/modules/earlydotrefreshes/EarlyDotRefreshesSuggestionByCount';\r\n\r\nimport { STATISTIC_ORDER } from 'interface/others/StatisticBox';\r\nimport { ThresholdStyle, When } from 'parser/core/ParseResults';\r\nimport { DamageEvent } from 'parser/core/Events';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport Events from 'parser/core/Events';\r\nimport { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\n\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\n\r\nclass FlameShock extends EarlyDotRefreshesAnalyzer {\r\n  static dependencies = {\r\n    ...EarlyDotRefreshesAnalyzer.dependencies,\r\n    enemies: Enemies,\r\n  };\r\n\r\n  protected enemies!: Enemies;\r\n\r\n  static dots = [{\r\n    name: \"Flame Shock\",\r\n    debuffId: SPELLS.FLAME_SHOCK.id,\r\n    castId: SPELLS.FLAME_SHOCK.id,\r\n    duration: 18000,\r\n    movementFiller: true,\r\n  }]\r\n\r\n  badLavaBursts = 0;\r\n\r\n  get uptime() {\r\n    return this.enemies.getBuffUptime(SPELLS.FLAME_SHOCK.id) / this.owner.fightDuration;\r\n  }\r\n\r\n  get refreshThreshold() {\r\n    const casts: any = this.casts;\r\n    return {\r\n      spell: SPELLS.FLAME_SHOCK,\r\n      count: casts[SPELLS.FLAME_SHOCK.id].badCasts,\r\n      actual: this.badCastsPercent(SPELLS.FLAME_SHOCK.id),\r\n      isGreaterThan: {\r\n        minor: 0.10,\r\n        average: 0.20,\r\n        major: 0.30,\r\n      },\r\n      style: 'percentage',\r\n    };\r\n  }\r\n\r\n  get uptimeThreshold() {\r\n    return {\r\n      actual: this.uptime,\r\n      isLessThan: {\r\n        minor: 0.99,\r\n        average: 0.95,\r\n        major: 0.85,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n  constructor(options: Options){\r\n    super(options);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER).spell(SPELLS.LAVA_BURST), this.onDamage);\r\n  }\r\n\r\n  onDamage(event: DamageEvent) {\r\n    const target = this.enemies.getEntity(event);\r\n    if(target && !target.hasBuff(SPELLS.FLAME_SHOCK.id)){\r\n      this.badLavaBursts += 1;\r\n    }\r\n  }\r\n\r\n  suggestions(when: When) {\r\n    when(this.uptimeThreshold).addSuggestion((suggest, actual, recommended) => suggest(<span>Your <SpellLink id={SPELLS.FLAME_SHOCK.id} /> uptime can be improved.</span>)\r\n        .icon(SPELLS.FLAME_SHOCK.icon)\r\n        .actual(i18n._(t('shaman.elemental.suggestions.flameShock.uptime')`${formatPercentage(actual)}% uptime`))\r\n        .recommended(`>${formatPercentage(recommended)}% is recommended`));\r\n\r\n    when(this.badLavaBursts).isGreaterThan(0)\r\n      .addSuggestion((suggest, actual, recommended) => suggest(<span>Make sure to apply <SpellLink id={SPELLS.FLAME_SHOCK.id} /> to your target, so your <SpellLink id={SPELLS.LAVA_BURST.id} /> is guaranteed to critically strike.</span>)\r\n          .icon(SPELLS.LAVA_BURST.icon)\r\n          .actual(i18n._(t('shaman.elemental.suggestions.flameShock.efficiency')`${formatNumber(this.badLavaBursts)} Lava Burst casts without Flame Shock DOT`))\r\n          .recommended(`0 is recommended`)\r\n          .major(recommended+1));\r\n\r\n    badRefreshSuggestion(when, this.refreshThreshold);\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        position={STATISTIC_ORDER.CORE()}\r\n        size=\"flexible\"\r\n        tooltip=\"Flame Shock Uptime\"\r\n        >\r\n        <BoringSpellValueText spell={SPELLS.FLAME_SHOCK}>\r\n          <>\r\n            <UptimeIcon /> {formatPercentage(this.uptime)}% <small>uptime</small>\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlameShock;\r\n"],"sourceRoot":""}