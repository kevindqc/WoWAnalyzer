{"version":3,"sources":["interface/statistics/components/BoringSpellValueText/index.tsx","parser/core/calculateEffectiveDamage.js","interface/icons/Uptime.js","interface/statistics/components/BoringValueText/index.tsx","../node_modules/react-animate-height/lib/AnimateHeight.js","parser/mage/shared/constants.tsx","parser/shared/modules/CancelledCasts.tsx","parser/mage/shared/modules/features/ArcaneIntellect.tsx","parser/mage/shared/modules/features/CancelledCasts.tsx","parser/mage/shared/modules/features/RuneOfPower.tsx","parser/mage/shared/modules/features/MirrorImage.tsx","parser/mage/shared/normalizers/ShiftingPower.ts","parser/mage/shared/modules/features/ElementalBarrier.tsx","parser/mage/shared/modules/features/ShiftingPower.tsx","parser/mage/shared/modules/items/DivertedEnergy.tsx","parser/mage/shared/modules/items/GroundingSurge.tsx","parser/mage/shared/modules/items/IreOfTheAscended.tsx","parser/mage/shared/modules/items/TempestBarrier.tsx","parser/mage/shared/modules/items/SiphonedMalice.tsx"],"names":["BoringSpellValueText","spell","children","className","id","icon","calculateEffectiveDamage","event","increase","raw","amount","absorbed","Icon","other","xmlns","viewBox","d","BoringValue","label","Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","require","_propTypes2","_classnames2","__esModule","default","_defineProperty","ANIMATION_STATE_CLASSES","animating","animatingUp","animatingDown","animatingToHeightZero","animatingToHeightAuto","animatingToHeightSpecific","static","staticHeightZero","staticHeightAuto","staticHeightSpecific","PROPS_TO_OMIT","omit","_len","keys","Array","_key","res","objectKeys","indexOf","cancelAnimationFrames","requestAnimationFrameIDs","forEach","cancelAnimationFrame","isNumber","n","isNaN","parseFloat","isFinite","isPercentage","height","search","substr","runCallback","callback","params","AnimateHeight","_React$Component","instance","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","animationFrameIDs","overflow","animationStateClasses","getStaticStateClasses","state","shouldUseTransitions","subClass","superClass","create","setPrototypeOf","_inherits","contentElement","style","hideContent","prevProps","prevState","_this2","_props","delay","duration","onAnimationEnd","onAnimationStart","_cx","showContent","contentHeight","offsetHeight","totalDuration","newHeight","timeoutState","isCurrentHeightAuto","timeoutAnimationStateClasses","setState","clearTimeout","timeoutID","animationClassesTimeoutID","requestAnimationFrame","startAnimationHelper","setTimeout","display","_cx2","_cx3","_this3","_props2","animateOpacity","applyInlineTransitions","contentClassName","easing","_state","componentStyle","transition","WebkitTransition","contentStyle","opacity","componentClasses","ariaHidden","createElement","apply","undefined","concat","ref","el","Component","propTypes","bool","object","any","isRequired","string","number","propName","componentName","func","defaultProps","MS_BUFFER_100","MS_BUFFER_250","FIRESTARTER_THRESHOLD","SEARING_TOUCH_THRESHOLD","COMBUSTION_END_BUFFER","PHOENIX_FLAMES_MAX_CHARGES","SHIFTING_POWER_MS_REDUCTION_PER_TICK","WINTERS_PROTECTION_REDUCTION_SEC","FLOW_OF_TIME_REDUCTION_SEC","SHATTER_DEBUFFS","SPELLS","WINTERS_CHILL","FROST_NOVA","ICE_NOVA_TALENT","GLACIAL_SPIKE_DAMAGE","RING_OF_FROST_DAMAGE","FREEZE","FIRE_DIRECT_DAMAGE_SPELLS","FIREBALL","PYROBLAST","FIRE_BLAST","SCORCH","PHOENIX_FLAMES","SHIFTING_POWER_REDUCTION_SPELLS","BLINK","SHIMMER_TALENT","ICE_BLOCK","INVISIBILITY","COUNTERSPELL","MIRROR_IMAGE","REMOVE_CURSE","TIME_WARP","ALTER_TIME","RUNE_OF_POWER_TALENT","RAY_OF_FROST_TALENT","BLAZING_BARRIER","COMBUSTION","DRAGONS_BREATH","BLAST_WAVE_TALENT","LIVING_BOMB_TALENT","METEOR_TALENT","ICE_BARRIER","BLIZZARD","COLD_SNAP","ICY_VEINS","CONE_OF_COLD","SUMMON_WATER_ELEMENTAL","FROZEN_ORB","ICE_FLOES_TALENT","EBONBOLT_TALENT","RING_OF_FROST_TALENT","COMET_STORM_TALENT","EVOCATION","GREATER_INVISIBILITY","PRESENCE_OF_MIND","PRISMATIC_BARRIER","ARCANE_POWER","TOUCH_OF_THE_MAGI","ARCANE_FAMILIAR_TALENT","ARCANE_ORB_TALENT","SUPERNOVA_TALENT","CancelledCasts","options","castsCancelled","castsFinished","beginCastSpell","wasCastStarted","cancelledSpellList","IGNORED_ABILITIES","addEventListener","Events","begincast","by","SELECTED_PLAYER","onBeginCast","cast","onCast","fightend","onFightend","spellId","ability","guid","includes","CASTS_THAT_ARENT_CASTS","CASTABLE_WHILE_CASTING_SPELLS","timestamp","addToCancelledList","beginCastAbility","name","position","STATISTIC_ORDER","CORE","size","tooltip","totalCasts","formatPercentage","cancelledPercentage","actual","isGreaterThan","minor","average","major","ThresholdStyle","PERCENTAGE","Analyzer","ArcaneIntellect","when","suggestionThresholds","addSuggestion","suggest","recommended","ARCANE_INTELLECT","uptime","i18n","_","selectedCombatant","getBuffUptime","owner","fightDuration","isLessThan","extraMovementSpell","specId","SPECS","FROST_MAGE","ARCANE_MAGE","SLIPSTREAM_TALENT","joiner","CoreCancelledCasts","SUGGEST_ROP","FIRE_MAGE","RuneOfPower","hasROP","damage","totalRunes","overlappedRunes","showSuggestion","hasTalent","summon","RUNE_OF_POWER_AUTOCAST","onRune","onPlayerDamage","hasBuff","RUNE_OF_POWER_BUFF","damageSuggestionThresholds","INCANTERS_FLOW_TALENT","damageIncreasePercent","overlappedRunesThresholds","formatNumber","roundedSecondsSuggestionThresholds","roundedSecondsPerCast","toFixed","isTrue","FOCUS_MAGIC_TALENT","staticImportance","SUGGESTION_IMPORTANCE","REGULAR","category","STATISTIC_CATEGORY","TALENTS","damagePercent","getPercentageOfTotalDamageDone","uptimeMS","NUMBER","INCANTERS_FLOW_EXPECTED_BOOST","RUNE_DURATION","MirrorImage","abilityTracker","damageDuringMirrorImages","to","onDamageTaken","totalDamageReduction","getAbility","casts","dependencies","AbilityTracker","Combustion","events","fixedEvents","eventIndex","push","type","EventType","Cast","SHIFTING_POWER","castTimestamp","previousEventIndex","previousEvent","ApplyBuff","sourceID","splice","__modified","EventsNormalizer","ElementalBarrier","damageTaken","damageAbsorbed","barrierSpell","spec","onDamageAbsorbed","absorbedPerCast","percentAbsorbed","total","effective","DamageTaken","ShiftingPower","spellUsable","active","hasCovenant","COVENANTS","NIGHT_FAE","SHIFTING_POWER_TICK","onShiftingPowerTick","reductionPerTick","hasConduitBySpellID","DISCIPLINE_OF_THE_GROVE","isOnCooldown","reduceCooldown","SpellUsable","DivertedEnergy","healingDone","overhealing","DIVERTED_ENERGY","heal","DIVERTED_ENERGY_HEAL","onDivertedEnergyHeal","overheal","ITEMS","COOLDOWN_REDUCTION_MS","GroundingSurge","conduitRank","bonusDamage","GROUNDING_SURGE","conduitRankBySpellID","interrupt","onInterrupt","DAMAGE_BONUS","IreOfTheAscended","IRE_OF_THE_ASCENDED","onDamage","RADIANT_SPARK","TempestBarrier","TEMPEST_BARRIER","TEMPEST_BARRIER_ABSORB","onAbsorb","SiphonedMalice","SIPHONED_MALICE","buff","getBuff","SIPHONED_MALICE_BUFF","stacks"],"mappings":"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","file":"static/js/6.6f87634e.chunk.js","sourcesContent":["/**\r\n * A simple component that shows the spell value in the most plain way possible.\r\n * Use this only as the very last resort.\r\n */\r\nimport React from 'react';\r\n\r\nimport SpellIcon from 'common/SpellIcon';\r\nimport SpellLink from 'common/SpellLink';\r\nimport Spell from 'common/SPELLS/Spell';\r\n\r\ntype Props = {\r\n  spell: Spell;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst BoringSpellValueText = ({ spell, children, className }: Props) => (\r\n  <div className={`pad boring-text ${className || ''}`}>\r\n    <label>\r\n      <SpellIcon id={spell.id} /> <SpellLink id={spell.id} icon={false} />\r\n    </label>\r\n    <div className=\"value\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default BoringSpellValueText;\r\n","export default function calculateEffectiveDamage(event, increase) {\r\n  const raw = (event.amount || 0) + (event.absorbed || 0);\r\n  return raw - (raw / (1 + increase));\r\n}\r\n","import React from 'react';\r\n\r\n// https://thenounproject.com/term/duration/370713/\r\n// duration by Bohdan Burmich from the Noun Project\r\nconst Icon = ({ ...other }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10 10 80 80\" className=\"icon\" {...other}>\r\n    <path d=\"M50,86.4865c17.4361,0,31.6216-14.1855,31.6216-31.6216c0-16.6168-12.8865-30.2714-29.1892-31.5189v-4.9677h7.2973v-4.8649  H40.2703v4.8649h7.2973v4.9677c-16.3027,1.2475-29.1892,14.902-29.1892,31.5189C18.3784,72.3009,32.5639,86.4865,50,86.4865z M52.4324,28.2236c3.1101,0.2817,6.0664,1.0982,8.7798,2.356l-8.7798,15.2073V28.2236z M47.5676,28.2236v26.6412 c0,1.1008,0.7393,2.0647,1.8029,2.3497c0.209,0.0561,0.4205,0.0827,0.6295,0.0827c0.8533,0,1.6642-0.4504,2.1065-1.2162 l13.3146-23.0616c6.8507,4.8503,11.3357,12.8315,11.3357,21.8454c0,14.7537-12.0031,26.7567-26.7568,26.7567 s-26.7568-12.003-26.7568-26.7567C23.2432,40.9315,33.9501,29.4573,47.5676,28.2236z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Icon;\r\n","/**\r\n * A simple component that shows a value in the most plain way possible.\r\n * Use this only as the very last resort.\r\n */\r\nimport React from 'react';\r\n\r\ntype Props = {\r\n  label: React.ReactNode;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst BoringValue = ({ label, children, className }: Props) => (\r\n  <div className={`pad boring-text ${className || ''}`}>\r\n    <label>\r\n      {label}\r\n    </label>\r\n    <div className=\"value\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default BoringValue;\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ANIMATION_STATE_CLASSES = {\n  animating: 'rah-animating',\n  animatingUp: 'rah-animating--up',\n  animatingDown: 'rah-animating--down',\n  animatingToHeightZero: 'rah-animating--to-height-zero',\n  animatingToHeightAuto: 'rah-animating--to-height-auto',\n  animatingToHeightSpecific: 'rah-animating--to-height-specific',\n  static: 'rah-static',\n  staticHeightZero: 'rah-static--height-zero',\n  staticHeightAuto: 'rah-static--height-auto',\n  staticHeightSpecific: 'rah-static--height-specific'\n};\n\nvar PROPS_TO_OMIT = ['animateOpacity', 'animationStateClasses', 'applyInlineTransitions', 'children', 'contentClassName', 'delay', 'duration', 'easing', 'height', 'onAnimationEnd', 'onAnimationStart'];\n\nfunction omit(obj) {\n  for (var _len = arguments.length, keys = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n\n  if (!keys.length) {\n    return obj;\n  }\n\n  var res = {};\n  var objectKeys = Object.keys(obj);\n\n  for (var i = 0; i < objectKeys.length; i++) {\n    var key = objectKeys[i];\n\n    if (keys.indexOf(key) === -1) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res;\n}\n\n// Start animation helper using nested requestAnimationFrames\nfunction startAnimationHelper(callback) {\n  var requestAnimationFrameIDs = [];\n\n  requestAnimationFrameIDs[0] = requestAnimationFrame(function () {\n    requestAnimationFrameIDs[1] = requestAnimationFrame(function () {\n      callback();\n    });\n  });\n\n  return requestAnimationFrameIDs;\n}\n\nfunction cancelAnimationFrames(requestAnimationFrameIDs) {\n  requestAnimationFrameIDs.forEach(function (id) {\n    return cancelAnimationFrame(id);\n  });\n}\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction isPercentage(height) {\n  // Percentage height\n  return typeof height === 'string' && height.search('%') === height.length - 1 && isNumber(height.substr(0, height.length - 1));\n}\n\nfunction runCallback(callback, params) {\n  if (callback && typeof callback === 'function') {\n    callback(params);\n  }\n}\n\nvar AnimateHeight = function (_React$Component) {\n  _inherits(AnimateHeight, _React$Component);\n\n  function AnimateHeight(props) {\n    _classCallCheck(this, AnimateHeight);\n\n    var _this = _possibleConstructorReturn(this, (AnimateHeight.__proto__ || Object.getPrototypeOf(AnimateHeight)).call(this, props));\n\n    _this.animationFrameIDs = [];\n\n    var height = 'auto';\n    var overflow = 'visible';\n\n    if (isNumber(props.height)) {\n      // If value is string \"0\" make sure we convert it to number 0\n      height = props.height < 0 || props.height === '0' ? 0 : props.height;\n      overflow = 'hidden';\n    } else if (isPercentage(props.height)) {\n      // If value is string \"0%\" make sure we convert it to number 0\n      height = props.height === '0%' ? 0 : props.height;\n      overflow = 'hidden';\n    }\n\n    _this.animationStateClasses = _extends({}, ANIMATION_STATE_CLASSES, props.animationStateClasses);\n\n    var animationStateClasses = _this.getStaticStateClasses(height);\n\n    _this.state = {\n      animationStateClasses: animationStateClasses,\n      height: height,\n      overflow: overflow,\n      shouldUseTransitions: false\n    };\n    return _this;\n  }\n\n  _createClass(AnimateHeight, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var height = this.state.height;\n\n      // Hide content if height is 0 (to prevent tabbing into it)\n      // Check for contentElement is added cause this would fail in tests (react-test-renderer)\n      // Read more here: https://github.com/Stanko/react-animate-height/issues/17\n\n      if (this.contentElement && this.contentElement.style) {\n        this.hideContent(height);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _props = this.props,\n          delay = _props.delay,\n          duration = _props.duration,\n          height = _props.height,\n          onAnimationEnd = _props.onAnimationEnd,\n          onAnimationStart = _props.onAnimationStart;\n\n      // Check if 'height' prop has changed\n\n      if (this.contentElement && height !== prevProps.height) {\n        var _cx;\n\n        // Remove display: none from the content div\n        // if it was hidden to prevent tabbing into it\n        this.showContent(prevState.height);\n\n        // Cache content height\n        this.contentElement.style.overflow = 'hidden';\n        var contentHeight = this.contentElement.offsetHeight;\n        this.contentElement.style.overflow = '';\n\n        // set total animation time\n        var totalDuration = duration + delay;\n\n        var newHeight = null;\n        var timeoutState = {\n          height: null, // it will be always set to either 'auto' or specific number\n          overflow: 'hidden'\n        };\n        var isCurrentHeightAuto = prevState.height === 'auto';\n\n        if (isNumber(height)) {\n          // If value is string \"0\" make sure we convert it to number 0\n          newHeight = height < 0 || height === '0' ? 0 : height;\n          timeoutState.height = newHeight;\n        } else if (isPercentage(height)) {\n          // If value is string \"0%\" make sure we convert it to number 0\n          newHeight = height === '0%' ? 0 : height;\n          timeoutState.height = newHeight;\n        } else {\n          // If not, animate to content height\n          // and then reset to auto\n          newHeight = contentHeight; // TODO solve contentHeight = 0\n          timeoutState.height = 'auto';\n          timeoutState.overflow = null;\n        }\n\n        if (isCurrentHeightAuto) {\n          // This is the height to be animated to\n          timeoutState.height = newHeight;\n\n          // If previous height was 'auto'\n          // set starting height explicitly to be able to use transition\n          newHeight = contentHeight;\n        }\n\n        // Animation classes\n        var animationStateClasses = (0, _classnames2.default)((_cx = {}, _defineProperty(_cx, this.animationStateClasses.animating, true), _defineProperty(_cx, this.animationStateClasses.animatingUp, prevProps.height === 'auto' || height < prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingDown, height === 'auto' || height > prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingToHeightZero, timeoutState.height === 0), _defineProperty(_cx, this.animationStateClasses.animatingToHeightAuto, timeoutState.height === 'auto'), _defineProperty(_cx, this.animationStateClasses.animatingToHeightSpecific, timeoutState.height > 0), _cx));\n\n        // Animation classes to be put after animation is complete\n        var timeoutAnimationStateClasses = this.getStaticStateClasses(timeoutState.height);\n\n        // Set starting height and animating classes\n        // We are safe to call set state as it will not trigger infinite loop\n        // because of the \"height !== prevProps.height\" check\n        this.setState({ // eslint-disable-line react/no-did-update-set-state\n          animationStateClasses: animationStateClasses,\n          height: newHeight,\n          overflow: 'hidden',\n          // When animating from 'auto' we first need to set fixed height\n          // that change should be animated\n          shouldUseTransitions: !isCurrentHeightAuto\n        });\n\n        // Clear timeouts\n        clearTimeout(this.timeoutID);\n        clearTimeout(this.animationClassesTimeoutID);\n\n        if (isCurrentHeightAuto) {\n          // When animating from 'auto' we use a short timeout to start animation\n          // after setting fixed height above\n          timeoutState.shouldUseTransitions = true;\n\n          cancelAnimationFrames(this.animationFrameIDs);\n          this.animationFrameIDs = startAnimationHelper(function () {\n            _this2.setState(timeoutState);\n\n            // ANIMATION STARTS, run a callback if it exists\n            runCallback(onAnimationStart, { newHeight: timeoutState.height });\n          });\n\n          // Set static classes and remove transitions when animation ends\n          this.animationClassesTimeoutID = setTimeout(function () {\n            _this2.setState({\n              animationStateClasses: timeoutAnimationStateClasses,\n              shouldUseTransitions: false\n            });\n\n            // ANIMATION ENDS\n            // Hide content if height is 0 (to prevent tabbing into it)\n            _this2.hideContent(timeoutState.height);\n            // Run a callback if it exists\n            runCallback(onAnimationEnd, { newHeight: timeoutState.height });\n          }, totalDuration);\n        } else {\n          // ANIMATION STARTS, run a callback if it exists\n          runCallback(onAnimationStart, { newHeight: newHeight });\n\n          // Set end height, classes and remove transitions when animation is complete\n          this.timeoutID = setTimeout(function () {\n            timeoutState.animationStateClasses = timeoutAnimationStateClasses;\n            timeoutState.shouldUseTransitions = false;\n\n            _this2.setState(timeoutState);\n\n            // ANIMATION ENDS\n            // If height is auto, don't hide the content\n            // (case when element is empty, therefore height is 0)\n            if (height !== 'auto') {\n              // Hide content if height is 0 (to prevent tabbing into it)\n              _this2.hideContent(newHeight); // TODO solve newHeight = 0\n            }\n            // Run a callback if it exists\n            runCallback(onAnimationEnd, { newHeight: newHeight });\n          }, totalDuration);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      cancelAnimationFrames(this.animationFrameIDs);\n\n      clearTimeout(this.timeoutID);\n      clearTimeout(this.animationClassesTimeoutID);\n\n      this.timeoutID = null;\n      this.animationClassesTimeoutID = null;\n      this.animationStateClasses = null;\n    }\n  }, {\n    key: 'showContent',\n    value: function showContent(height) {\n      if (height === 0) {\n        this.contentElement.style.display = '';\n      }\n    }\n  }, {\n    key: 'hideContent',\n    value: function hideContent(newHeight) {\n      if (newHeight === 0) {\n        this.contentElement.style.display = 'none';\n      }\n    }\n  }, {\n    key: 'getStaticStateClasses',\n    value: function getStaticStateClasses(height) {\n      var _cx2;\n\n      return (0, _classnames2.default)((_cx2 = {}, _defineProperty(_cx2, this.animationStateClasses.static, true), _defineProperty(_cx2, this.animationStateClasses.staticHeightZero, height === 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightSpecific, height > 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightAuto, height === 'auto'), _cx2));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _cx3,\n          _this3 = this;\n\n      var _props2 = this.props,\n          animateOpacity = _props2.animateOpacity,\n          applyInlineTransitions = _props2.applyInlineTransitions,\n          children = _props2.children,\n          className = _props2.className,\n          contentClassName = _props2.contentClassName,\n          delay = _props2.delay,\n          duration = _props2.duration,\n          easing = _props2.easing,\n          id = _props2.id,\n          style = _props2.style;\n      var _state = this.state,\n          height = _state.height,\n          overflow = _state.overflow,\n          animationStateClasses = _state.animationStateClasses,\n          shouldUseTransitions = _state.shouldUseTransitions;\n\n\n      var componentStyle = _extends({}, style, {\n        height: height,\n        overflow: overflow || style.overflow\n      });\n\n      if (shouldUseTransitions && applyInlineTransitions) {\n        componentStyle.transition = 'height ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n\n        // Include transition passed through styles\n        if (style.transition) {\n          componentStyle.transition = style.transition + ', ' + componentStyle.transition;\n        }\n\n        // Add webkit vendor prefix still used by opera, blackberry...\n        componentStyle.WebkitTransition = componentStyle.transition;\n      }\n\n      var contentStyle = {};\n\n      if (animateOpacity) {\n        contentStyle.transition = 'opacity ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n        // Add webkit vendor prefix still used by opera, blackberry...\n        contentStyle.WebkitTransition = contentStyle.transition;\n\n        if (height === 0) {\n          contentStyle.opacity = 0;\n        }\n      }\n\n      var componentClasses = (0, _classnames2.default)((_cx3 = {}, _defineProperty(_cx3, animationStateClasses, true), _defineProperty(_cx3, className, className), _cx3));\n\n      // Check if user passed aria-hidden prop\n      var hasAriaHiddenProp = typeof this.props['aria-hidden'] !== 'undefined';\n      var ariaHidden = hasAriaHiddenProp ? this.props['aria-hidden'] : height === 0;\n\n      return _react2.default.createElement(\n        'div',\n        _extends({}, omit.apply(undefined, [this.props].concat(PROPS_TO_OMIT)), {\n          'aria-hidden': ariaHidden,\n          className: componentClasses,\n          id: id,\n          style: componentStyle\n        }),\n        _react2.default.createElement(\n          'div',\n          {\n            className: contentClassName,\n            style: contentStyle,\n            ref: function ref(el) {\n              return _this3.contentElement = el;\n            }\n          },\n          children\n        )\n      );\n    }\n  }]);\n\n  return AnimateHeight;\n}(_react2.default.Component);\n\nvar heightPropType = function heightPropType(props, propName, componentName) {\n  var value = props[propName];\n\n  if (typeof value === 'number' && value >= 0 || isPercentage(value) || value === 'auto') {\n    return null;\n  }\n\n  return new TypeError('value \"' + value + '\" of type \"' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)) + '\" is invalid type for ' + propName + ' in ' + componentName + '. ' + 'It needs to be a positive number, string \"auto\" or percentage string (e.g. \"15%\").');\n};\n\nAnimateHeight.propTypes = {\n  'aria-hidden': _propTypes2.default.bool,\n  animateOpacity: _propTypes2.default.bool,\n  animationStateClasses: _propTypes2.default.object,\n  applyInlineTransitions: _propTypes2.default.bool,\n  children: _propTypes2.default.any.isRequired,\n  className: _propTypes2.default.string,\n  contentClassName: _propTypes2.default.string,\n  delay: _propTypes2.default.number,\n  duration: _propTypes2.default.number,\n  easing: _propTypes2.default.string,\n  height: heightPropType,\n  id: _propTypes2.default.string,\n  onAnimationEnd: _propTypes2.default.func,\n  onAnimationStart: _propTypes2.default.func,\n  style: _propTypes2.default.object\n};\n\nAnimateHeight.defaultProps = {\n  animateOpacity: false,\n  animationStateClasses: ANIMATION_STATE_CLASSES,\n  applyInlineTransitions: true,\n  duration: 250,\n  delay: 0,\n  easing: 'ease',\n  style: {}\n};\n\nexports.default = AnimateHeight;","import SPELLS from 'common/SPELLS';\r\n\r\nexport const MS_BUFFER_100 = 100;\r\nexport const MS_BUFFER_250 = 250;\r\nexport const MS_BUFFER_500 = 500;\r\nexport const MS_BUFFER_1000 = 1000;\r\n\r\nexport const FIRESTARTER_THRESHOLD = .90;\r\nexport const SEARING_TOUCH_THRESHOLD = .30;\r\nexport const COMBUSTION_END_BUFFER = 3000;\r\nexport const PHOENIX_FLAMES_MAX_CHARGES = 2;\r\n\r\nexport const SHIFTING_POWER_MS_REDUCTION_PER_TICK = 2500;\r\n\r\nexport const WINTERS_PROTECTION_REDUCTION_SEC = [0, 25, 28, 30, 33, 35, 38, 40, 43, 45, 48, 50, 53, 55, 58, 60];\r\nexport const FLOW_OF_TIME_REDUCTION_SEC = [0, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 4.6, 4.8];\r\n\r\nexport const SHATTER_DEBUFFS = [\r\n  SPELLS.WINTERS_CHILL,\r\n  SPELLS.FROST_NOVA,\r\n  SPELLS.ICE_NOVA_TALENT,\r\n  SPELLS.GLACIAL_SPIKE_DAMAGE,\r\n  SPELLS.RING_OF_FROST_DAMAGE,\r\n  SPELLS.FREEZE,\r\n];\r\n\r\nexport const FIRE_DIRECT_DAMAGE_SPELLS = [\r\n  SPELLS.FIREBALL,\r\n  SPELLS.PYROBLAST,\r\n  SPELLS.FIRE_BLAST,\r\n  SPELLS.SCORCH,\r\n  SPELLS.PHOENIX_FLAMES,\r\n];\r\n\r\nexport const SHIFTING_POWER_REDUCTION_SPELLS = [\r\n  SPELLS.FROST_NOVA,\r\n  SPELLS.BLINK,\r\n  SPELLS.SHIMMER_TALENT,\r\n  SPELLS.ICE_BLOCK,\r\n  SPELLS.INVISIBILITY,\r\n  SPELLS.COUNTERSPELL,\r\n  SPELLS.MIRROR_IMAGE,\r\n  SPELLS.REMOVE_CURSE,\r\n  SPELLS.TIME_WARP,\r\n  SPELLS.ALTER_TIME,\r\n  SPELLS.RUNE_OF_POWER_TALENT,\r\n  SPELLS.RAY_OF_FROST_TALENT,\r\n  SPELLS.BLAZING_BARRIER,\r\n  SPELLS.PHOENIX_FLAMES,\r\n  SPELLS.COMBUSTION,\r\n  SPELLS.DRAGONS_BREATH,\r\n  SPELLS.FIRE_BLAST,\r\n  SPELLS.BLAST_WAVE_TALENT,\r\n  SPELLS.LIVING_BOMB_TALENT,\r\n  SPELLS.METEOR_TALENT,\r\n  SPELLS.ICE_BARRIER,\r\n  SPELLS.BLIZZARD,\r\n  SPELLS.COLD_SNAP,\r\n  SPELLS.ICY_VEINS,\r\n  SPELLS.CONE_OF_COLD,\r\n  SPELLS.SUMMON_WATER_ELEMENTAL,\r\n  SPELLS.FROZEN_ORB,\r\n  SPELLS.ICE_NOVA_TALENT,\r\n  SPELLS.ICE_FLOES_TALENT,\r\n  SPELLS.EBONBOLT_TALENT,\r\n  SPELLS.RING_OF_FROST_TALENT,\r\n  SPELLS.COMET_STORM_TALENT,\r\n  SPELLS.EVOCATION,\r\n  SPELLS.GREATER_INVISIBILITY,\r\n  SPELLS.PRESENCE_OF_MIND,\r\n  SPELLS.PRISMATIC_BARRIER,\r\n  SPELLS.ARCANE_POWER,\r\n  SPELLS.TOUCH_OF_THE_MAGI,\r\n  SPELLS.ARCANE_FAMILIAR_TALENT,\r\n  SPELLS.ARCANE_ORB_TALENT,\r\n  SPELLS.SUPERNOVA_TALENT,\r\n];\r\n","import React from 'react';\r\n\r\nimport {\r\n  formatMilliseconds,\r\n  formatNumber,\r\n  formatPercentage,\r\n} from 'common/format';\r\nimport Analyzer, { Options, SELECTED_PLAYER } from 'parser/core/Analyzer';\r\nimport { ThresholdStyle } from 'parser/core/ParseResults';\r\nimport CrossIcon from 'interface/icons/Cross';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport BoringValueText from 'interface/statistics/components/BoringValueText';\r\nimport STATISTIC_ORDER from 'interface/others/STATISTIC_ORDER';\r\nimport CASTS_THAT_ARENT_CASTS from 'parser/core/CASTS_THAT_ARENT_CASTS';\r\nimport CASTABLE_WHILE_CASTING_SPELLS from 'parser/core/CASTABLE_WHILE_CASTING_SPELLS';\r\n\r\nimport Events, { CastEvent, BeginCastEvent } from '../../core/Events';\r\n\r\nconst debug = false;\r\nconst MS_BUFFER = 100;\r\n\r\nclass CancelledCasts extends Analyzer {\r\n  castsCancelled = 0;\r\n  castsFinished = 0;\r\n  beginCastSpell: BeginCastEvent | undefined = undefined;\r\n  wasCastStarted: boolean = false;\r\n  cancelledSpellList: {\r\n    [key: number]: {\r\n      spellName: string,\r\n      amount: number\r\n    }\r\n  } = {};\r\n  IGNORED_ABILITIES: number[] = [];\r\n\r\n  constructor(options: Options){\r\n    super(options);\r\n    this.addEventListener(Events.begincast.by(SELECTED_PLAYER), this.onBeginCast);\r\n    this.addEventListener(Events.cast.by(SELECTED_PLAYER), this.onCast);\r\n    this.addEventListener(Events.fightend, this.onFightend);\r\n  }\r\n\r\n  onBeginCast(event: BeginCastEvent) {\r\n    const spellId = event.ability.guid;\r\n    if (this.IGNORED_ABILITIES.includes(spellId) || CASTS_THAT_ARENT_CASTS.includes(spellId) || CASTABLE_WHILE_CASTING_SPELLS.includes(spellId)) {\r\n      return;\r\n    }\r\n    if (this.wasCastStarted && this.beginCastSpell !== undefined &&\r\n      event.timestamp -\r\n      this.beginCastSpell.timestamp >\r\n      MS_BUFFER) {\r\n      this.castsCancelled += 1;\r\n      this.addToCancelledList();\r\n    }\r\n    this.beginCastSpell = event;\r\n    this.wasCastStarted = true;\r\n  }\r\n\r\n  onCast(event: CastEvent) {\r\n    const spellId = event.ability.guid;\r\n    const beginCastAbility = this.beginCastSpell && this.beginCastSpell.ability;\r\n    if (this.IGNORED_ABILITIES.includes(spellId) || CASTS_THAT_ARENT_CASTS.includes(spellId) || CASTABLE_WHILE_CASTING_SPELLS.includes(spellId) || !beginCastAbility) {\r\n      return;\r\n    }\r\n    if (beginCastAbility.guid !== spellId && this.wasCastStarted) {\r\n      this.castsCancelled += 1;\r\n      this.addToCancelledList();\r\n    }\r\n    if (beginCastAbility.guid === spellId && this.wasCastStarted) {\r\n      this.castsFinished += 1;\r\n    }\r\n    this.wasCastStarted = false;\r\n  }\r\n\r\n  addToCancelledList() {\r\n    if (!this.beginCastSpell) {\r\n      return;\r\n    }\r\n    const beginCastAbility = this.beginCastSpell.ability;\r\n    if (!this.cancelledSpellList[beginCastAbility.guid]) {\r\n      this.cancelledSpellList[beginCastAbility.guid] = {\r\n        'spellName': beginCastAbility.name,\r\n        'amount': 1,\r\n      };\r\n    } else {\r\n      this.cancelledSpellList[beginCastAbility.guid].amount += 1;\r\n    }\r\n    debug && this.log(beginCastAbility.name + ' cast cancelled');\r\n  }\r\n  get totalCasts() {\r\n    return this.castsCancelled + this.castsFinished;\r\n  }\r\n\r\n  get cancelledPercentage() {\r\n    return this.castsCancelled / this.totalCasts;\r\n  }\r\n\r\n  get cancelledCastSuggestionThresholds() {\r\n    return {\r\n      actual: this.cancelledPercentage,\r\n      isGreaterThan: {\r\n        minor: 0.02,\r\n        average: 0.05,\r\n        major: 0.15,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n  onFightend() {\r\n    debug &&\r\n    console.log(\r\n      formatMilliseconds(this.owner.fightDuration),\r\n      'Casts Finished:',\r\n      `${formatNumber(this.castsFinished)}`,\r\n    );\r\n    debug &&\r\n    console.log(\r\n      formatMilliseconds(this.owner.fightDuration),\r\n      'Casts Cancelled:',\r\n      `${formatNumber(this.castsCancelled)}`,\r\n    );\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        position={STATISTIC_ORDER.CORE(10)}\r\n        size=\"small\"\r\n        className=\"value\"\r\n        tooltip={(\r\n          <>\r\n            You cast {this.totalCasts} spells.\r\n            <ul>\r\n              <li>{this.castsFinished} casts were completed</li>\r\n              <li>{this.castsCancelled} casts were cancelled</li>\r\n            </ul>\r\n          </>\r\n        )}\r\n      >\r\n        <BoringValueText label=\"Cancelled Casts\">\r\n          <CrossIcon /> {formatPercentage(this.cancelledPercentage)}% <small>Casts Cancelled</small>\r\n        </BoringValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CancelledCasts;\r\n","import React from 'react';\r\nimport SPELLS from 'common/SPELLS';\r\nimport SpellLink from 'common/SpellLink';\r\nimport { formatPercentage } from 'common/format';\r\nimport Analyzer from 'parser/core/Analyzer';\r\nimport { When, ThresholdStyle } from 'parser/core/ParseResults';\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\n\r\nclass ArcaneIntellect extends Analyzer {\r\n\tget uptime() {\r\n\t\treturn this.selectedCombatant.getBuffUptime(SPELLS.ARCANE_INTELLECT.id) / this.owner.fightDuration;\r\n\t}\r\n\r\n\tget suggestionThresholds() {\r\n    return {\r\n      actual: this.uptime,\r\n      isLessThan: {\r\n        minor: 1,\r\n        average: 0.90,\r\n        major: 0.80,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n\tsuggestions(when: When) {\r\n\t\twhen(this.suggestionThresholds)\r\n\t\t\t.addSuggestion((suggest, actual, recommended) => suggest(<><SpellLink id={SPELLS.ARCANE_INTELLECT.id} /> was up for {formatPercentage(this.uptime)}% of the fight. Ensure you are casting this before the pull and recasting it every time you are ressurected.</>)\r\n\t\t\t\t\t.icon(SPELLS.ARCANE_INTELLECT.icon)\r\n\t\t\t\t\t.actual(i18n._(t('mage.shared.suggestions.arcaneIntellect.uptime')`${formatPercentage(this.uptime)}% Uptime`))\r\n\t\t\t\t\t.recommended(`${formatPercentage(recommended)}% is recommended`));\r\n\t}\r\n}\r\n\r\nexport default ArcaneIntellect;\r\n","import React from 'react';\r\nimport { When, ThresholdStyle } from 'parser/core/ParseResults';\r\nimport CoreCancelledCasts from 'parser/shared/modules/CancelledCasts';\r\nimport SPELLS from 'common/SPELLS';\r\nimport SPECS from 'game/SPECS';\r\nimport SpellLink from 'common/SpellLink';\r\nimport { formatPercentage } from 'common/format';\r\nimport { Options } from 'parser/core/Analyzer';\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\n\r\nclass CancelledCasts extends CoreCancelledCasts {\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.IGNORED_ABILITIES = [\r\n      //Include the spells that you do not want to be tracked and spells that are castable while casting (Like Fire Blast, Combustion, or Shimmer)\r\n      SPELLS.FIRE_BLAST.id,\r\n      SPELLS.COMBUSTION.id,\r\n      SPELLS.SHIMMER_TALENT.id,\r\n      SPELLS.ICE_FLOES_TALENT.id,\r\n    ];\r\n  }\r\n\r\n  get cancelledPercentage() {\r\n    return this.castsCancelled / this.totalCasts;\r\n  }\r\n\r\n  get suggestionThresholds() {\r\n    return {\r\n      actual: this.cancelledPercentage,\r\n      isGreaterThan: {\r\n        minor: 0.05,\r\n        average: 0.1,\r\n        major: 0.2,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n  suggestions(when: When) {\r\n    let extraMovementSpell: any = null;\r\n    if(this.selectedCombatant.specId === SPECS.FROST_MAGE.id) {\r\n      extraMovementSpell = <>, and <SpellLink id={SPELLS.ICE_FLOES_TALENT.id} /></>;\r\n    } else if(this.selectedCombatant.specId === SPECS.ARCANE_MAGE.id) {\r\n      extraMovementSpell = <>, and <SpellLink id={SPELLS.SLIPSTREAM_TALENT.id} /></>;\r\n    }\r\n    const joiner = extraMovementSpell === null ? ' and ' : ', ';\r\n\r\n    when(this.suggestionThresholds)\r\n      .addSuggestion((suggest, actual, recommended) => suggest(<>You cancelled {formatPercentage(this.cancelledPercentage)}% of your spells. While it is expected that you will have to cancel a few casts to react to boss mechanics or move, you should try to ensure that you are cancelling as few casts as possible by utilizing movement abilities such as <SpellLink id={SPELLS.BLINK.id} />{joiner}<SpellLink id={SPELLS.SHIMMER_TALENT.id} />{extraMovementSpell}.</>)\r\n          .icon('inv_misc_map_01')\r\n          .actual(i18n._(t('mage.shared.suggestions.castsCancelled')`${formatPercentage(actual)}% casts cancelled`))\r\n          .recommended(`<${formatPercentage(recommended)}% is recommended`));\r\n  }\r\n}\r\n\r\nexport default CancelledCasts;\r\n","import React from 'react';\r\nimport SPELLS from 'common/SPELLS';\r\nimport SPECS from 'game/SPECS';\r\nimport SpellLink from 'common/SpellLink';\r\nimport { formatNumber, formatPercentage } from 'common/format';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport Analyzer, { Options } from 'parser/core/Analyzer';\r\nimport calculateEffectiveDamage from 'parser/core/calculateEffectiveDamage';\r\nimport Events, { CastEvent, SummonEvent, DamageEvent } from 'parser/core/Events';\r\nimport { SELECTED_PLAYER } from 'parser/core/EventFilter';\r\nimport SUGGESTION_IMPORTANCE from 'parser/core/ISSUE_IMPORTANCE';\r\nimport { When, ThresholdStyle } from 'parser/core/ParseResults';\r\nimport { i18n } from '@lingui/core';\r\nimport { t } from '@lingui/macro';\r\n\r\n/*\r\n * If Rune of Power is substantially better than the rest of the row, enable\r\n * ROP talent suggestion. At time of writing, it's a substantial increase over\r\n * incanters flow for fire and arcane in all situations.\r\n */\r\nconst SUGGEST_ROP = { [SPECS.FROST_MAGE.id]: false, [SPECS.ARCANE_MAGE.id]: true, [SPECS.FIRE_MAGE.id]: true };\r\n\r\nconst DAMAGE_BONUS = 0.4;\r\nconst RUNE_DURATION = 12;\r\nconst INCANTERS_FLOW_EXPECTED_BOOST = 0.12;\r\n\r\n// FIXME due to interactions with Ignite, the damage boost number will be underrated for Fire Mages. Still fine for Arcane and Frost.\r\nclass RuneOfPower extends Analyzer {\r\n\r\n  hasROP = false;\r\n  damage = 0;\r\n  totalRunes = 0;\r\n  overlappedRunes = 0;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n\r\n    if (this.selectedCombatant.hasTalent(SPELLS.RUNE_OF_POWER_TALENT.id)) {\r\n      this.hasROP = true;\r\n      this.addEventListener(Events.cast.by(SELECTED_PLAYER).spell([SPELLS.RUNE_OF_POWER_TALENT,SPELLS.COMBUSTION,SPELLS.ICY_VEINS,SPELLS.ARCANE_POWER]), this.onCast);\r\n      this.addEventListener(Events.summon.by(SELECTED_PLAYER).spell([SPELLS.RUNE_OF_POWER_AUTOCAST, SPELLS.RUNE_OF_POWER_TALENT]), this.onRune);\r\n      this.addEventListener(Events.damage.by(SELECTED_PLAYER), this.onPlayerDamage);\r\n    }\r\n  }\r\n\r\n  onCast(event: CastEvent) {\r\n    if (this.selectedCombatant.hasBuff(SPELLS.RUNE_OF_POWER_BUFF.id)) {\r\n      this.overlappedRunes += 1;\r\n    }\r\n  }\r\n\r\n  onRune(event: SummonEvent) {\r\n    this.totalRunes += 1;\r\n  }\r\n\r\n  onPlayerDamage(event: DamageEvent) {\r\n    if (this.selectedCombatant.hasBuff(SPELLS.RUNE_OF_POWER_BUFF.id)) {\r\n      this.damage += calculateEffectiveDamage(event, DAMAGE_BONUS);\r\n    }\r\n  }\r\n\r\n  get damagePercent() {\r\n    return this.owner.getPercentageOfTotalDamageDone(this.damage);\r\n  }\r\n\r\n  get damageIncreasePercent() {\r\n    return this.damagePercent / (1 - this.damagePercent);\r\n  }\r\n\r\n  get uptimeMS() {\r\n    return this.selectedCombatant.getBuffUptime(SPELLS.RUNE_OF_POWER_BUFF.id);\r\n  }\r\n\r\n  get roundedSecondsPerCast() {\r\n    return ((this.uptimeMS / this.totalRunes) / 1000);\r\n  }\r\n\r\n  get overlappedRunesThresholds() {\r\n    return {\r\n      actual: this.overlappedRunes,\r\n      isGreaterThan: {\r\n        major: 0,\r\n      },\r\n      style: ThresholdStyle.NUMBER,\r\n    };\r\n  }\r\n\r\n  get damageSuggestionThresholds() {\r\n    return {\r\n      actual: this.damageIncreasePercent,\r\n      isLessThan: {\r\n        minor: INCANTERS_FLOW_EXPECTED_BOOST,\r\n        average: INCANTERS_FLOW_EXPECTED_BOOST,\r\n        major: INCANTERS_FLOW_EXPECTED_BOOST - 0.03,\r\n      },\r\n      style: ThresholdStyle.PERCENTAGE,\r\n    };\r\n  }\r\n\r\n  get roundedSecondsSuggestionThresholds() {\r\n    return {\r\n      actual: this.roundedSecondsPerCast,\r\n      isLessThan: {\r\n        minor: RUNE_DURATION,\r\n        average: RUNE_DURATION - 1,\r\n        major: RUNE_DURATION - 2,\r\n      },\r\n      style: ThresholdStyle.NUMBER,\r\n    };\r\n  }\r\n\r\n  showSuggestion = true;\r\n  suggestions(when: When) {\r\n    if (!this.hasROP) {\r\n      when(SUGGEST_ROP[this.selectedCombatant.specId]).isTrue()\r\n        .addSuggestion((suggest) => suggest(\r\n            <>\r\n            It is highly recommended to talent into <SpellLink id={SPELLS.RUNE_OF_POWER_TALENT.id} /> when playing this spec.\r\n            While it can take some practice to master, when played correctly it outputs substantially more DPS than <SpellLink id={SPELLS.INCANTERS_FLOW_TALENT.id} /> or <SpellLink id={SPELLS.FOCUS_MAGIC_TALENT.id} />.\r\n            </>)\r\n            .icon(SPELLS.RUNE_OF_POWER_TALENT.icon)\r\n            .staticImportance(SUGGESTION_IMPORTANCE.REGULAR));\r\n      return;\r\n    }\r\n\r\n    if (!this.showSuggestion) {\r\n      return;\r\n    }\r\n\r\n    when(this.damageSuggestionThresholds)\r\n      .addSuggestion((suggest, actual, recommended) => suggest(<>Your <SpellLink id={SPELLS.RUNE_OF_POWER_TALENT.id} /> damage boost is below the expected passive gain from <SpellLink id={SPELLS.INCANTERS_FLOW_TALENT.id} />. Either find ways to make better use of the talent, or switch to <SpellLink id={SPELLS.INCANTERS_FLOW_TALENT.id} />.</>)\r\n          .icon(SPELLS.RUNE_OF_POWER_TALENT.icon)\r\n          .actual(i18n._(t('mage.shared.suggetsions.runeOfPower.damageIncrease')`${formatPercentage(this.damageIncreasePercent)}% damage increase from Rune of Power`))\r\n          .recommended(`${formatPercentage(recommended)}% is the passive gain from Incanter's Flow`));\r\n    when(this.overlappedRunesThresholds)\r\n      .addSuggestion((suggest, actual, recommended) => suggest(<>You cast <SpellLink id={SPELLS.RUNE_OF_POWER_TALENT.id} /> or an ability that automatically casts <SpellLink id={SPELLS.RUNE_OF_POWER_TALENT.id} /> (Like <SpellLink id={SPELLS.ICY_VEINS.id} />, <SpellLink id={SPELLS.COMBUSTION.id} />, or <SpellLink id={SPELLS.ARCANE_POWER.id} />) while you still had a Rune down. Make sure you are not overlapping your <SpellLink id={SPELLS.RUNE_OF_POWER_TALENT.id} /> so you can get the most out of the damage buff that it provides.</>)\r\n          .icon(SPELLS.RUNE_OF_POWER_TALENT.icon)\r\n          .actual(`${formatNumber(actual)} overlapped runes`)\r\n          .recommended(`${formatNumber(recommended)} is recommended`));\r\n\r\n    if (this.totalRunes > 0) {\r\n      when(this.roundedSecondsSuggestionThresholds)\r\n        .addSuggestion((suggest, actual, recommended) => suggest(<>You sometimes aren't standing in your <SpellLink id={SPELLS.RUNE_OF_POWER_TALENT.id} /> for its full duration. Try to only use it when you know you won't have to move for the duration of the effect.</>)\r\n            .icon(SPELLS.RUNE_OF_POWER_TALENT.icon)\r\n            .actual(i18n._(t('mage.shared.suggestions.runeOfPower.utilization')`Average ${this.roundedSecondsPerCast.toFixed(1)}s standing in each Rune of Power`))\r\n            .recommended(`the full duration of ${formatNumber(RUNE_DURATION)}s is recommended`));\r\n    }\r\n\r\n  }\r\n\r\n  statistic() {\r\n    if (this.hasROP) {\r\n      return (\r\n        <Statistic\r\n          size=\"flexible\"\r\n          category={STATISTIC_CATEGORY.TALENTS}\r\n          tooltip={<>This is the portion of your total damage attributable to Rune of Power's boost. Expressed as an increase vs never using Rune of Power, this is a <strong>{formatPercentage(this.damageIncreasePercent)}% damage increase</strong>. Note that this number does <em>not</em> factor in the opportunity cost of casting Rune of Power instead of another damaging spell.</>}\r\n        >\r\n          <BoringSpellValueText spell={SPELLS.RUNE_OF_POWER_TALENT}>\r\n            <>\r\n              {formatPercentage(this.damagePercent, 0)}% <small>Damage added by Rune of Power</small><br />\r\n              {formatNumber(this.roundedSecondsPerCast)}s <small>Average time in Rune per cast</small>\r\n            </>\r\n          </BoringSpellValueText>\r\n        </Statistic>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default RuneOfPower;\r\n","import React from 'react';\r\nimport SPELLS from 'common/SPELLS';\r\nimport { formatNumber } from 'common/format';\r\nimport Analyzer, { SELECTED_PLAYER, Options } from 'parser/core/Analyzer';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_ORDER from 'interface/others/STATISTIC_ORDER';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport Events, { DamageEvent } from 'parser/core/Events';\r\nimport AbilityTracker from 'parser/shared/modules/AbilityTracker';\r\n\r\nconst DAMAGE_REDUCTION = 0.2;\r\n\r\nclass MirrorImage extends Analyzer {\r\n  static dependencies = {\r\n    abilityTracker: AbilityTracker,\r\n  }\r\n  protected abilityTracker!: AbilityTracker;\r\n  \r\n  damageDuringMirrorImages = 0;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.addEventListener(Events.damage.to(SELECTED_PLAYER), this.onDamageTaken);\r\n  }\r\n\r\n  onDamageTaken(event: DamageEvent) {\r\n    if (!this.selectedCombatant.hasBuff(SPELLS.MIRROR_IMAGE.id)) {\r\n      return;\r\n    }\r\n    this.damageDuringMirrorImages += event.amount + (event.absorbed || 0);\r\n  }\r\n\r\n  get totalDamageReduction() {\r\n    return this.damageDuringMirrorImages / (1 - DAMAGE_REDUCTION) * DAMAGE_REDUCTION;\r\n  }\r\n\r\n  get reductionPerCast() {\r\n    return this.totalDamageReduction / this.abilityTracker.getAbility(SPELLS.MIRROR_IMAGE.id).casts;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        position={STATISTIC_ORDER.CORE(30)}\r\n        size=\"flexible\"\r\n        tooltip={<>This is the amount of damage that your Mirror Images prevented while they were active. Remember that Mirror Image is not a damage cooldown anymore and should solely be used as a defensive ability to help reduce incoming damage.</>}\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.MIRROR_IMAGE}>\r\n          <>\r\n            {formatNumber(this.totalDamageReduction)} <small> Damage Avoided</small>\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MirrorImage;\r\n","import SPELLS from 'common/SPELLS';\r\n\r\nimport EventsNormalizer from 'parser/core/EventsNormalizer';\r\nimport { AnyEvent, EventType } from 'parser/core/Events';\r\n\r\nclass Combustion extends EventsNormalizer {\r\n  normalize(events: AnyEvent[]) {\r\n    const fixedEvents: AnyEvent[] = [];\r\n    events.forEach((event, eventIndex) => {\r\n      fixedEvents.push(event);\r\n\r\n      if (event.type === EventType.Cast && event.ability.guid === SPELLS.SHIFTING_POWER.id) {\r\n        const castTimestamp = event.timestamp;\r\n\r\n        for (let previousEventIndex = eventIndex; previousEventIndex >= 0; previousEventIndex -= 1) {\r\n          const previousEvent = fixedEvents[previousEventIndex];\r\n          if ((castTimestamp - previousEvent.timestamp) > 50) {\r\n            break;\r\n          }\r\n          if (previousEvent.type === EventType.ApplyBuff && previousEvent.ability.guid === SPELLS.SHIFTING_POWER.id && previousEvent.sourceID === event.sourceID) {\r\n            fixedEvents.splice(previousEventIndex, 1);\r\n            fixedEvents.push(previousEvent);\r\n            previousEvent.__modified = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return fixedEvents;\r\n  }\r\n}\r\n\r\nexport default Combustion;\r\n","import React from 'react';\r\nimport SPELLS from 'common/SPELLS';\r\nimport SPECS from 'game/SPECS';\r\nimport { formatNumber, formatPercentage } from 'common/format';\r\nimport Analyzer, { SELECTED_PLAYER, Options } from 'parser/core/Analyzer';\r\nimport DamageTaken from 'parser/shared/modules/throughput/DamageTaken';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport STATISTIC_ORDER from 'interface/others/STATISTIC_ORDER';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport Events, { AbsorbedEvent } from 'parser/core/Events';\r\nimport AbilityTracker from 'parser/shared/modules/AbilityTracker';\r\n\r\nclass ElementalBarrier extends Analyzer {\r\n  static dependencies = {\r\n    abilityTracker: AbilityTracker,\r\n    damageTaken: DamageTaken,\r\n  }\r\n  protected abilityTracker!: AbilityTracker;\r\n  protected damageTaken!: DamageTaken;\r\n  \r\n  damageAbsorbed = 0;\r\n  barrierSpell: {\r\n    id: number,\r\n    name: string,\r\n    icon: string,\r\n  }\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    const spec = this.selectedCombatant.specId;\r\n    this.barrierSpell = spec === SPECS.FROST_MAGE.id ? SPELLS.ICE_BARRIER : spec === SPECS.FIRE_MAGE.id ? SPELLS.BLAZING_BARRIER : SPELLS.PRISMATIC_BARRIER;\r\n    this.addEventListener(Events.absorbed.by(SELECTED_PLAYER).spell(this.barrierSpell), this.onDamageAbsorbed);\r\n  }\r\n\r\n  onDamageAbsorbed(event: AbsorbedEvent) {\r\n    this.damageAbsorbed += event.amount;\r\n  }\r\n\r\n  get percentAbsorbed() {\r\n    return this.damageAbsorbed / this.damageTaken.total.effective;\r\n  }\r\n\r\n  get absorbedPerCast() {\r\n    return this.damageAbsorbed / this.abilityTracker.getAbility(this.barrierSpell.id).casts;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        position={STATISTIC_ORDER.CORE(31)}\r\n        size=\"flexible\"\r\n        tooltip={<>This is the amount of damage that was absorbed by your {this.barrierSpell.name}. Try to use this in anticipation of incoming damage to help reduce the amount of damage that your healers need to heal.</>}\r\n      >\r\n        <BoringSpellValueText spell={this.barrierSpell}>\r\n          <>\r\n            {formatNumber(this.damageAbsorbed)} <small>Damage absorbed</small><br />\r\n            {formatNumber(this.absorbedPerCast)} <small>Avg. absorbed per barrier</small><br />\r\n            {formatPercentage(this.percentAbsorbed)}% <small> % of Damage absorbed</small>\r\n          </>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ElementalBarrier;\r\n","import Analyzer, { SELECTED_PLAYER, Options } from 'parser/core/Analyzer';\r\nimport Events, { CastEvent } from 'parser/core/Events';\r\nimport SpellUsable from 'parser/shared/modules/SpellUsable';\r\nimport SPELLS from 'common/SPELLS';\r\nimport COVENANTS from 'game/shadowlands/COVENANTS';\r\nimport { SHIFTING_POWER_MS_REDUCTION_PER_TICK, SHIFTING_POWER_REDUCTION_SPELLS } from 'parser/mage/shared/constants';\r\n\r\nconst debug = false;\r\n\r\nclass ShiftingPower extends Analyzer {\r\n  static dependencies = {\r\n    spellUsable: SpellUsable,\r\n  }\r\n  protected spellUsable!: SpellUsable;\r\n\r\n  constructor(options: Options) {\r\n    super(options);\r\n    this.active = this.selectedCombatant.hasCovenant(COVENANTS.NIGHT_FAE.id);\r\n    this.addEventListener(Events.cast.by(SELECTED_PLAYER).spell(SPELLS.SHIFTING_POWER_TICK), this.onShiftingPowerTick);\r\n  }\r\n\r\n  onShiftingPowerTick(event: CastEvent) {\r\n    const reductionPerTick = this.selectedCombatant.hasConduitBySpellID(SPELLS.DISCIPLINE_OF_THE_GROVE.id) ? SHIFTING_POWER_MS_REDUCTION_PER_TICK + 1000 : SHIFTING_POWER_MS_REDUCTION_PER_TICK;\r\n    SHIFTING_POWER_REDUCTION_SPELLS.forEach(spell => {\r\n      if (this.spellUsable.isOnCooldown(spell.id)) {\r\n        debug && this.log('Reduced ' + spell.name + ' by ' + reductionPerTick);\r\n        this.spellUsable.reduceCooldown(spell.id, reductionPerTick);\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default ShiftingPower;\r\n","import React from 'react';\r\nimport SPELLS from 'common/SPELLS';\r\nimport Analyzer, { Options } from 'parser/core/Analyzer';\r\nimport Events, { HealEvent } from 'parser/core/Events';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport ItemHealingDone from 'interface/ItemHealingDone';\r\nimport { SELECTED_PLAYER } from 'parser/core/EventFilter';\r\nimport { formatNumber } from 'common/format';\r\n\r\nclass DivertedEnergy extends Analyzer {\r\n\r\n  healingDone = 0;\r\n  overhealing = 0;\r\n\r\n  constructor(props: Options) {\r\n    super(props);\r\n    this.active = this.selectedCombatant.hasConduitBySpellID(SPELLS.DIVERTED_ENERGY.id);\r\n    this.addEventListener(Events.heal.by(SELECTED_PLAYER).spell(SPELLS.DIVERTED_ENERGY_HEAL), this.onDivertedEnergyHeal);\r\n  }\r\n\r\n  onDivertedEnergyHeal(event: HealEvent) {\r\n    this.healingDone += event.amount;\r\n    if (event.overheal) {\r\n      this.overhealing += event.overheal;\r\n    }\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        category={STATISTIC_CATEGORY.ITEMS}\r\n        size=\"flexible\"\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.DIVERTED_ENERGY}>\r\n          <ItemHealingDone amount={this.healingDone} /><br />\r\n          {formatNumber(this.overhealing)} <small>Overhealing</small>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DivertedEnergy;\r\n","import SPELLS from 'common/SPELLS';\r\nimport Analyzer, { Options } from 'parser/core/Analyzer';\r\nimport Events, { InterruptEvent } from 'parser/core/Events';\r\nimport { SELECTED_PLAYER } from 'parser/core/EventFilter';\r\nimport SpellUsable from 'parser/shared/modules/SpellUsable';\r\n\r\nconst COOLDOWN_REDUCTION_MS = [0, 2500, 2800, 3000, 3300, 3500, 3800, 4000, 4300, 4500, 4800, 5000, 5300, 5500, 5800, 6000];\r\n\r\nclass GroundingSurge extends Analyzer {\r\n  static dependencies = {\r\n    spellUsable: SpellUsable,\r\n  }\r\n  protected spellUsable!: SpellUsable;\r\n\r\n  conduitRank = 0;\r\n  bonusDamage = 0;\r\n\r\n  constructor(props: Options) {\r\n    super(props);\r\n    this.active = this.selectedCombatant.hasConduitBySpellID(SPELLS.GROUNDING_SURGE.id);\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    this.conduitRank = this.selectedCombatant.conduitRankBySpellID(SPELLS.GROUNDING_SURGE.id);\r\n    this.addEventListener(Events.interrupt.by(SELECTED_PLAYER).spell(SPELLS.COUNTERSPELL), this.onInterrupt);\r\n  }\r\n\r\n  onInterrupt(event: InterruptEvent) {\r\n    this.spellUsable.reduceCooldown(SPELLS.COUNTERSPELL.id, COOLDOWN_REDUCTION_MS[this.conduitRank]);\r\n  }\r\n}\r\n\r\nexport default GroundingSurge;\r\n","import React from 'react';\r\nimport SPELLS from 'common/SPELLS';\r\nimport Analyzer, { Options } from 'parser/core/Analyzer';\r\nimport Events, { DamageEvent } from 'parser/core/Events';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport ItemDamageDone from 'interface/ItemDamageDone';\r\nimport { SELECTED_PLAYER } from 'parser/core/EventFilter';\r\nimport calculateEffectiveDamage from 'parser/core/calculateEffectiveDamage';\r\n\r\nconst DAMAGE_BONUS = [0, .05, .06, .06, .07, .07, .08, .08, .09, .09, .10, .10, .11, .11, .12, .12];\r\n\r\nclass IreOfTheAscended extends Analyzer {\r\n\r\n  conduitRank = 0;\r\n  bonusDamage = 0;\r\n\r\n  constructor(props: Options) {\r\n    super(props);\r\n    this.active = this.selectedCombatant.hasConduitBySpellID(SPELLS.IRE_OF_THE_ASCENDED.id);\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    this.conduitRank = this.selectedCombatant.conduitRankBySpellID(SPELLS.IRE_OF_THE_ASCENDED.id);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER), this.onDamage);\r\n  }\r\n\r\n  onDamage(event: DamageEvent) {\r\n    if (!this.selectedCombatant.hasBuff(SPELLS.RADIANT_SPARK.id)) {\r\n      return;\r\n    }\r\n    this.bonusDamage += calculateEffectiveDamage(event, DAMAGE_BONUS[this.conduitRank]);\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        category={STATISTIC_CATEGORY.ITEMS}\r\n        size=\"flexible\"\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.IRE_OF_THE_ASCENDED}>\r\n          <ItemDamageDone amount={this.bonusDamage} />\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IreOfTheAscended;\r\n","import React from 'react';\r\nimport SPELLS from 'common/SPELLS';\r\nimport Analyzer, { Options } from 'parser/core/Analyzer';\r\nimport Events, { AbsorbedEvent } from 'parser/core/Events';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport { SELECTED_PLAYER } from 'parser/core/EventFilter';\r\nimport { formatNumber } from 'common/format';\r\n\r\nclass TempestBarrier extends Analyzer {\r\n\r\n  damageAbsorbed = 0;\r\n\r\n  constructor(props: Options) {\r\n    super(props);\r\n    this.active = this.selectedCombatant.hasConduitBySpellID(SPELLS.TEMPEST_BARRIER.id);\r\n    this.addEventListener(Events.absorbed.by(SELECTED_PLAYER).spell(SPELLS.TEMPEST_BARRIER_ABSORB), this.onAbsorb);\r\n  }\r\n\r\n  onAbsorb(event: AbsorbedEvent) {\r\n    this.damageAbsorbed += event.amount;\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        category={STATISTIC_CATEGORY.ITEMS}\r\n        size=\"flexible\"\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.TEMPEST_BARRIER}>\r\n          {formatNumber(this.damageAbsorbed)} <small>Damage absorbed</small>\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TempestBarrier;\r\n","import React from 'react';\r\nimport SPELLS from 'common/SPELLS';\r\nimport Analyzer, { Options } from 'parser/core/Analyzer';\r\nimport Events, { DamageEvent } from 'parser/core/Events';\r\nimport Statistic from 'interface/statistics/Statistic';\r\nimport BoringSpellValueText from 'interface/statistics/components/BoringSpellValueText';\r\nimport STATISTIC_CATEGORY from 'interface/others/STATISTIC_CATEGORY';\r\nimport ItemDamageDone from 'interface/ItemDamageDone';\r\nimport { SELECTED_PLAYER } from 'parser/core/EventFilter';\r\nimport calculateEffectiveDamage from 'parser/core/calculateEffectiveDamage';\r\n\r\nconst DAMAGE_BONUS = [0, .02, .02, .02, .03, .03, .03, .03, .03, .04, .04, .04, .04, .04, .05, .05];\r\n\r\nclass SiphonedMalice extends Analyzer {\r\n\r\n  conduitRank = 0;\r\n  bonusDamage = 0;\r\n\r\n  constructor(props: Options) {\r\n    super(props);\r\n    this.active = this.selectedCombatant.hasConduitBySpellID(SPELLS.SIPHONED_MALICE.id);\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    this.conduitRank = this.selectedCombatant.conduitRankBySpellID(SPELLS.SIPHONED_MALICE.id);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER), this.onDamage);\r\n  }\r\n\r\n  onDamage(event: DamageEvent) {\r\n    const buff = this.selectedCombatant.getBuff(SPELLS.SIPHONED_MALICE_BUFF.id);\r\n    if (!buff) {\r\n      return;\r\n    }\r\n    this.bonusDamage += calculateEffectiveDamage(event, DAMAGE_BONUS[this.conduitRank] * buff.stacks);\r\n  }\r\n\r\n  statistic() {\r\n    return (\r\n      <Statistic\r\n        category={STATISTIC_CATEGORY.ITEMS}\r\n        size=\"flexible\"\r\n      >\r\n        <BoringSpellValueText spell={SPELLS.SIPHONED_MALICE}>\r\n          <ItemDamageDone amount={this.bonusDamage} />\r\n        </BoringSpellValueText>\r\n      </Statistic>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SiphonedMalice;\r\n"],"sourceRoot":""}