(this.webpackJsonpwowanalyzer=this.webpackJsonpwowanalyzer||[]).push([[16],{721:function(e,t,a){"use strict";a.r(t);var n=a(8),i=a(10),s=a(11),r=a(776),o=a(9),l=a(3),c=a(45),u=a(753),d=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"spellbook",value:function(){var e=this.selectedCombatant;return[{spell:l.a.ICEBOUND_FORTITUDE,buffSpellId:l.a.ICEBOUND_FORTITUDE.id,category:a.SPELL_CATEGORIES.DEFENSIVE,cooldown:180,castEfficiency:{suggestion:!0,recommendedEfficiency:.5,extraSuggestion:"Defensive CDs like this are meant to be used smartly. Use it to smooth regular damage intake or to take the edge of big attacks.",importance:c.a.MINOR},timelineSortIndex:10},{spell:l.a.VAMPIRIC_BLOOD,buffSpellId:l.a.VAMPIRIC_BLOOD.id,category:a.SPELL_CATEGORIES.DEFENSIVE,cooldown:90,castEfficiency:{suggestion:!0,recommendedEfficiency:.5,extraSuggestion:"Defensive CDs like this are meant to be used smartly. Use it to smooth regular damage intake or to take the edge of big attacks.",importance:c.a.MINOR},timelineSortIndex:10},{spell:l.a.BLOOD_BOIL,category:a.SPELL_CATEGORIES.ROTATIONAL,cooldown:function(e){return 7.5/(1+e)},gcd:{base:1500},charges:2,castEfficiency:{suggestion:!0,recommendedEfficiency:.85,extraSuggestion:"Should be casting it so you have at least one recharging."},timelineSortIndex:4},{spell:l.a.CONSUMPTION_TALENT,category:a.SPELL_CATEGORIES.SEMI_DEFENSIVE,enabled:e.hasTalent(l.a.CONSUMPTION_TALENT.id),cooldown:45,gcd:{base:1500},timelineSortIndex:5},{spell:l.a.DANCING_RUNE_WEAPON,category:a.SPELL_CATEGORIES.SEMI_DEFENSIVE,buffSpellId:l.a.DANCING_RUNE_WEAPON_BUFF.id,gcd:{base:1500},cooldown:120,castEfficiency:{suggestion:!0,recommendedEfficiency:.9,extraSuggestion:"Should be used as an opener and used on CD for the dps boost."},timelineSortIndex:9},{spell:l.a.BLOODDRINKER_TALENT,category:a.SPELL_CATEGORIES.ROTATIONAL,cooldown:30,gcd:{base:1500},enabled:e.hasTalent(l.a.BLOODDRINKER_TALENT.id),castEfficiency:{suggestion:!0,recommendedEfficiency:.9,extraSuggestion:"Mostly used as a dps CD. Should be almost casted on CD. Good to use when your running to the boss or cant melee them."},timelineSortIndex:6},{spell:l.a.DEATH_STRIKE,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500},timelineSortIndex:1},{spell:l.a.DEATHS_CARESS,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500},timelineSortIndex:7},{spell:l.a.DEATH_AND_DECAY,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500},enabled:e.hasTalent(l.a.RAPID_DECOMPOSITION_TALENT.id),cooldown:15,castEfficiency:{suggestion:!0,recommendedEfficiency:.8},timelineSortIndex:5},{spell:l.a.DEATH_AND_DECAY,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500},enabled:!e.hasTalent(l.a.RAPID_DECOMPOSITION_TALENT.id),cooldown:15,timelineSortIndex:5},{spell:l.a.HEART_STRIKE,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500},timelineSortIndex:3},{spell:l.a.MARROWREND,buffSpellId:l.a.BONE_SHIELD.id,category:a.SPELL_CATEGORIES.ROTATIONAL,gcd:{base:1500},timelineSortIndex:2},{spell:l.a.ANTI_MAGIC_SHELL,buffSpellId:l.a.ANTI_MAGIC_SHELL.id,category:a.SPELL_CATEGORIES.DEFENSIVE,cooldown:e.hasTalent(l.a.ANTIMAGIC_BARRIER_TALENT.id)?45:60,castEfficiency:{suggestion:!0,recommendedEfficiency:.5,extraSuggestion:"Defensive CDs like this are meant to be used smartly. Use it to smooth regular damage intake or to take the edge of big attacks.",importance:c.a.MINOR},timelineSortIndex:10},{spell:l.a.MIND_FREEZE,category:a.SPELL_CATEGORIES.UTILITY,cooldown:15},{spell:l.a.DARK_COMMAND,category:a.SPELL_CATEGORIES.UTILITY,cooldown:8},{spell:l.a.DEATH_GRIP,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:500},cooldown:15,timelineSortIndex:14},{spell:l.a.DEATHS_ADVANCE,category:a.SPELL_CATEGORIES.UTILITY,cooldown:45,timelineSortIndex:14},{spell:l.a.WRAITH_WALK_TALENT,enabled:e.hasTalent(l.a.WRAITH_WALK_TALENT.id),category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500},cooldown:60,timelineSortIndex:14},{spell:l.a.GOREFIENDS_GRASP,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500},cooldown:e.hasTalent(l.a.TIGHTENING_GRASP_TALENT.id)?90:120,timelineSortIndex:11},{spell:l.a.RAISE_ALLY,category:a.SPELL_CATEGORIES.UTILITY,gcd:{base:1500}},{spell:l.a.ASPHYXIATE,category:a.SPELL_CATEGORIES.UTILITY,cooldown:45,gcd:{base:1500}},{spell:l.a.CONTROL_UNDEAD,category:a.SPELL_CATEGORIES.OTHERS,gcd:{base:1500}},{spell:l.a.RAISE_DEAD_BLOOD_FROST,category:a.SPELL_CATEGORIES.COOLDOWNS,cooldown:120},{spell:l.a.ANTI_MAGIC_ZONE,buffSpellId:l.a.ANTI_MAGIC_ZONE_BUFF.id,category:a.SPELL_CATEGORIES.DEFENSIVE,cooldown:120,gcd:null,isDefensive:!0},{spell:l.a.MARK_OF_BLOOD_TALENT,category:a.SPELL_CATEGORIES.ROTATIONAL,enabled:e.hasTalent(l.a.MARK_OF_BLOOD_TALENT),cooldown:6,gcd:{base:1500},timelineSortIndex:10},{spell:l.a.TOMBSTONE_TALENT,category:a.SPELL_CATEGORIES.DEFENSIVE,enabled:e.hasTalent(l.a.TOMBSTONE_TALENT.id),cooldown:60,gcd:{base:1500},castEfficiency:{suggestion:!0,recommendedEfficiency:.5,extraSuggestion:"Defensive CDs like this are meant to be used smartly. Use it to smooth regular damage intake or to take the edge of big attacks.",importance:c.a.MINOR},timelineSortIndex:10},{spell:l.a.RUNE_TAP,buffSpellId:l.a.RUNE_TAP.id,category:a.SPELL_CATEGORIES.DEFENSIVE,cooldown:25,charges:2,castEfficiency:{suggestion:!0,recommendedEfficiency:.5,extraSuggestion:"Defensive CDs like this are meant to be used smartly. Use it to smooth regular damage intake or to take the edge of big attacks.",importance:c.a.MINOR},timelineSortIndex:10},{spell:l.a.BLOOD_TAP_TALENT,category:a.SPELL_CATEGORIES.ROTATIONAL,enabled:e.hasTalent(l.a.BLOOD_TAP_TALENT.id),cooldown:60,charges:2,castEfficiency:{suggestion:!0,recommendedEfficiency:.5,extraSuggestion:"Use to generate extra runes at opportune times.",importance:c.a.MINOR},timelineSortIndex:10},{spell:l.a.BONESTORM_TALENT,category:a.SPELL_CATEGORIES.ROTATIONAL_AOE,enabled:e.hasTalent(l.a.BONESTORM_TALENT.id),cooldown:60,gcd:{base:1500},timelineSortIndex:9},{spell:l.a.RUNE_1,category:a.SPELL_CATEGORIES.HIDDEN,cooldown:function(e){return 10/(1+e)},charges:2},{spell:l.a.RUNE_2,category:a.SPELL_CATEGORIES.HIDDEN,cooldown:function(e){return 10/(1+e)},charges:2},{spell:l.a.RUNE_3,category:a.SPELL_CATEGORIES.HIDDEN,cooldown:function(e){return 10/(1+e)},charges:2}]}}]),a}(u.a),h=a(120),m=a(66),g=a(814),E=a(15),f=a(43),b=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).addEventListener(E.f.applydebuff.by(f.a),i.onApplyDebuff),i.addEventListener(E.f.removedebuff.by(f.a),i.onRemoveDebuff),i}return Object(o.a)(a,[{key:"onCast",value:function(e){e.ability.guid!==l.a.BLOODDRINKER_TALENT.id&&Object(h.a)(Object(m.a)(a.prototype),"onCast",this).call(this,e)}},{key:"cancelChannel",value:function(e,t){this.isChannelingSpell(l.a.BLOODDRINKER_TALENT.id)?this.endChannel(e):Object(h.a)(Object(m.a)(a.prototype),"cancelChannel",this).call(this,e,t)}},{key:"onApplyDebuff",value:function(e){e.ability.guid===l.a.BLOODDRINKER_TALENT.id&&this.beginChannel(e)}},{key:"onRemoveDebuff",value:function(e){e.ability.guid===l.a.BLOODDRINKER_TALENT.id&&this.isChannelingSpell(l.a.BLOODDRINKER_TALENT.id)&&this.endChannel(e)}}]),a}(g.a),O=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"onCast",value:function(e){e.ability.guid!==l.a.BLOODDRINKER_TALENT.id&&Object(h.a)(Object(m.a)(a.prototype),"onCast",this).call(this,e)}}]),a}(a(811).a),p=a(0),y=a.n(p),T=a(780),v=a(33),S=a(4),_=a(13),R=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"suggestions",value:function(e){var t=this.owner.boss;t&&t.fight.disableDowntimeSuggestion||e(this.downtimeSuggestionThresholds).addSuggestion((function(e,t,a){return e(y.a.createElement(y.a.Fragment,null,"While some downtime is inevitable in fights with movement, you should aim to reduce downtime to prevent capping Runes.  You can reduce downtime by casting ranged/filler abilities like ",y.a.createElement(S.a,{id:l.a.BLOODDRINKER_TALENT.id})," or ",y.a.createElement(S.a,{id:l.a.BLOOD_BOIL.id}))).icon("spell_mage_altertime").actual(_.i18n._({id:"deathknight.blood.suggestions.alwaysBeCasting.downtime",defaults:"{0}% downtime",values:{0:Object(v.e)(t)}})).recommended("<".concat(Object(v.e)(a),"% is recommended"))}))}},{key:"downtimeSuggestionThresholds",get:function(){return{actual:this.downtimePercentage,isGreaterThan:{minor:.2,average:.3,major:.4},style:"percentage"}}}]),a}(T.a),A=a(26),k=a(785),N=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return a}(k.b);N.cooldownSpells=[].concat(Object(A.a)(k.b.cooldownSpells),[{spell:l.a.DANCING_RUNE_WEAPON_BUFF,summary:[k.a.DAMAGE]},{spell:l.a.VAMPIRIC_BLOOD,summary:[k.a.HEALING,k.a.OVERHEALING]},{spell:l.a.ANTI_MAGIC_SHELL,summary:[k.a.ABSORBED]}]);var D=N,C=a(756),L=a(747),w=a(746),I=a(748),P=a(760),j=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"suggestions",value:function(e){e(this.uptimeSuggestionThresholds).addSuggestion((function(e,t,a){return e("Your Blood Plague uptime can be improved. Keeping Blood Boil on cooldown should keep it up at all times.").icon(l.a.BLOOD_PLAGUE.icon).actual(_.i18n._({id:"deathknight.blood.suggestions.bloodPlague.uptime",defaults:"{0}% Blood Plague uptime",values:{0:Object(v.e)(t)}})).recommended(">".concat(Object(v.e)(a),"% is recommended"))}))}},{key:"statistic",value:function(){return y.a.createElement(w.a,{size:"small",position:L.a.CORE(2)},y.a.createElement(I.a,{spell:l.a.BLOOD_PLAGUE},y.a.createElement(y.a.Fragment,null,y.a.createElement(P.a,null)," ",Object(v.e)(this.uptime),"% ",y.a.createElement("small",null,"uptime"))))}},{key:"uptime",get:function(){return this.enemies.getBuffUptime(l.a.BLOOD_PLAGUE.id)/this.owner.fightDuration}},{key:"uptimeSuggestionThresholds",get:function(){return{actual:this.uptime,isLessThan:{minor:.95,average:.9,major:.8},style:"percentage"}}}]),a}(f.c);j.dependencies={enemies:C.a};var B=j,M=a(755),U=a(754),H=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).crimsonScourgeProcsCounter=0,i.freeDeathAndDecayCounter=0,i.endOfCombatCast=!1,i.addEventListener(E.f.cast.by(f.a).spell(l.a.DEATH_AND_DECAY),i.onCast),i.addEventListener(E.f.applybuff.by(f.a).spell(l.a.CRIMSON_SCOURGE),i.onApplyBuff),i}return Object(o.a)(a,[{key:"onCast",value:function(e){this.selectedCombatant.hasBuff(l.a.CRIMSON_SCOURGE.id,e.timestamp)&&(this.freeDeathAndDecayCounter+=1,this.endOfCombatCast&&(this.endOfCombatCast=!1))}},{key:"onApplyBuff",value:function(e){this.crimsonScourgeProcsCounter+=1,this.spellUsable.isOnCooldown(l.a.DEATH_AND_DECAY.id)&&this.spellUsable.endCooldown(l.a.DEATH_AND_DECAY.id),e.timestamp+8e3>this.owner.fight.end_time&&(this.endOfCombatCast=!0)}},{key:"suggestions",value:function(e){this.selectedCombatant.hasTalent(l.a.RAPID_DECOMPOSITION_TALENT.id)||e(this.suggestionThresholds).addSuggestion((function(e,t,a){return e(y.a.createElement(y.a.Fragment,null,"You had unspent ",y.a.createElement(S.a,{id:l.a.CRIMSON_SCOURGE.id})," procs. Make sure you always use them.")).icon(l.a.CRIMSON_SCOURGE.icon).actual(_.i18n._({id:"deathknight.blood.suggestions.crimsonScourge.procsWasted",defaults:"{0}% Crimson Scourge procs wasted",values:{0:Object(v.e)(t)}})).recommended("<".concat(Object(v.e)(a),"% is recommended"))}))}},{key:"statistic",value:function(){return y.a.createElement(w.a,{position:L.a.CORE(6),size:"flexible",tooltip:"".concat(this.wastedCrimsonScourgeProcs," out of ").concat(this.crimsonScourgeProcsCounter," procs wasted.")},y.a.createElement(I.a,{spell:l.a.CRIMSON_SCOURGE},y.a.createElement(y.a.Fragment,null,Object(v.e)(this.wastedCrimsonScourgeProcsPercent)," % ",y.a.createElement("small",null,"procs wasted"))))}},{key:"wastedCrimsonScourgeProcs",get:function(){var e=this.crimsonScourgeProcsCounter-this.freeDeathAndDecayCounter;return this.endOfCombatCast?e-1:e}},{key:"wastedCrimsonScourgeProcsPercent",get:function(){return this.wastedCrimsonScourgeProcs/this.crimsonScourgeProcsCounter}},{key:"efficiencySuggestionThresholds",get:function(){return{actual:1-this.wastedCrimsonScourgeProcsPercent,isLessThan:{minor:.95,average:.9,major:.85},style:"percentage"}}},{key:"suggestionThresholds",get:function(){return{actual:this.wastedCrimsonScourgeProcsPercent,isGreaterThan:{minor:.05,average:.1,major:.15},style:"percentage"}}}]),a}(f.c);H.dependencies={abilityTracker:M.a,spellUsable:U.b};var F=H,G=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s)))._totalTicks=0,e._totalCasts=0,e._currentTicks=0,e._wastedTicks=0,e._ruinedCasts=0,e.totalDamage=0,e.totalHealing=0,e.active=e.selectedCombatant.hasTalent(l.a.BLOODDRINKER_TALENT.id),e.addEventListener(E.f.cast.by(f.a).spell(l.a.BLOODDRINKER_TALENT),e.onCast),e.addEventListener(E.f.damage.by(f.a).spell(l.a.BLOODDRINKER_TALENT),e.onDamage),e.addEventListener(E.f.heal.to(f.a).spell(l.a.BLOODDRINKER_TALENT),e.onHeal),e.addEventListener(E.f.removedebuff.by(f.a).spell(l.a.BLOODDRINKER_TALENT),e.onRemoveDebuff),e}return Object(o.a)(a,[{key:"onCast",value:function(e){this._totalCasts+=1}},{key:"onDamage",value:function(e){this.totalDamage+=e.amount+(e.absorbed||0),this._currentTicks+=1}},{key:"onHeal",value:function(e){this.totalHealing+=(e.amount||0)+(e.absorbed||0)}},{key:"onRemoveDebuff",value:function(e){this._currentTicks<4&&(this._wastedTicks+=4-this._currentTicks,this._ruinedCasts+=1),this._currentTicks=0}},{key:"statistic",value:function(){return this._totalTicks=4*this._totalCasts,y.a.createElement(w.a,{position:L.a.CORE(6),size:"flexible",tooltip:y.a.createElement(y.a.Fragment,null,"You lost ",y.a.createElement("strong",null,this._wastedTicks)," out of ",y.a.createElement("strong",null,this._totalTicks)," ticks.",y.a.createElement("br",null),y.a.createElement("strong",null,"Damage:")," ",Object(v.f)(this.totalDamage)," / ",this.owner.formatItemDamageDone(this.totalDamage),y.a.createElement("br",null),y.a.createElement("strong",null,"Healing:")," ",Object(v.f)(this.totalHealing)," / ",this.owner.formatItemHealingDone(this.totalHealing),y.a.createElement("br",null))},y.a.createElement(I.a,{spell:l.a.BLOODDRINKER_TALENT},y.a.createElement(y.a.Fragment,null,this._ruinedCasts," / ",this._totalCasts," ",y.a.createElement("small",null,"Channels cancelled early"))))}}]),a}(f.c);G.dependencies={abilityTracker:M.a};var W=G,x=a(7),K=a(203),Y=a(767),z=a(757),V=a(777),q=a(770),J=a(762),Z=a(763),X=a(771),Q=a(772),$=function(e){var t=e.combatant,a=e.castEfficiency,n=e.thresholds,i=function(e){return y.a.createElement(Q.a,Object.assign({castEfficiency:a.getCastEfficiencyForSpellId(e.spell)},e))};return y.a.createElement(q.a,null,y.a.createElement(J.c,{name:"Use your short cooldowns",description:"These should generally always be recharging to maximize efficiency."},y.a.createElement(i,{spell:l.a.BLOOD_BOIL.id}),t.hasTalent(l.a.RAPID_DECOMPOSITION_TALENT.id)&&y.a.createElement(i,{spell:l.a.DEATH_AND_DECAY.id}),t.hasTalent(l.a.BLOODDRINKER_TALENT.id)&&y.a.createElement(i,{spell:l.a.BLOODDRINKER_TALENT.id}),t.hasTalent(l.a.RAPID_DECOMPOSITION_TALENT.id)&&y.a.createElement(Z.a,{name:y.a.createElement(y.a.Fragment,null,y.a.createElement(S.a,{id:l.a.CRIMSON_SCOURGE.id})," procs spent"),thresholds:n.crimsonScourge})),y.a.createElement(J.c,{name:"Do not overcap your resources",description:"Death Knights are a resource based class, relying on Runes and Runic Power to cast core abilities. Try to spend Runic Power before reaching the maximum amount and always keep atleast 3 Runes on cooldown to avoid wasting resources."},y.a.createElement(Z.a,{name:"Runic Power Efficiency",thresholds:n.runicPower}),y.a.createElement(Z.a,{name:"Rune Efficiency",thresholds:n.runes}),y.a.createElement(Z.a,{name:y.a.createElement(y.a.Fragment,null,y.a.createElement(S.a,{id:l.a.MARROWREND.id})," Efficiency"),thresholds:n.marrowrend}),y.a.createElement(Z.a,{name:y.a.createElement(y.a.Fragment,null,y.a.createElement(S.a,{id:l.a.DEATHS_CARESS.id})," Efficiency"),thresholds:n.deathsCaress})),y.a.createElement(J.c,{name:"Use your offensive cooldowns",description:"You should aim to use these cooldowns as often as you can to maximize your damage output unless you are saving them for their defensive value."},y.a.createElement(i,{spell:l.a.DANCING_RUNE_WEAPON.id}),t.hasTalent(l.a.CONSUMPTION_TALENT.id)&&y.a.createElement(Z.a,{name:y.a.createElement(y.a.Fragment,null,"Possible ",y.a.createElement(S.a,{id:l.a.CONSUMPTION_TALENT.id})," Hits"),thresholds:n.consumption}),t.hasTalent(l.a.BONESTORM_TALENT.id)&&y.a.createElement(Z.a,{name:y.a.createElement(y.a.Fragment,null,y.a.createElement(S.a,{id:l.a.BONESTORM_TALENT.id})," Efficiency"),thresholds:n.bonestorm})),y.a.createElement(J.c,{name:"Maintain your buffs and debuffs",description:"It is important to maintain these as they contribute a large amount to your DPS and HPS."},y.a.createElement(Z.a,{name:y.a.createElement(y.a.Fragment,null,y.a.createElement(S.a,{id:l.a.BLOOD_PLAGUE.id})," Uptime"),thresholds:n.bloodPlague}),t.hasTalent(l.a.MARK_OF_BLOOD_TALENT.id)&&y.a.createElement(Z.a,{name:y.a.createElement(y.a.Fragment,null,y.a.createElement(S.a,{id:l.a.MARK_OF_BLOOD_TALENT.id})," Uptime"),thresholds:n.markOfBlood}),y.a.createElement(Z.a,{name:y.a.createElement(y.a.Fragment,null,y.a.createElement(S.a,{id:l.a.BONE_SHIELD.id})," Uptime"),thresholds:n.boneShield})),y.a.createElement(J.c,{name:"Use your defensive cooldowns",description:"Use these to block damage spikes and keep damage smooth to reduce external healing required."},y.a.createElement(i,{spell:l.a.VAMPIRIC_BLOOD.id}),y.a.createElement(i,{spell:l.a.ICEBOUND_FORTITUDE.id}),y.a.createElement(i,{spell:l.a.ANTI_MAGIC_SHELL.id}),t.hasTalent(l.a.RUNE_TAP.id)&&y.a.createElement(i,{spell:l.a.RUNE_TAP.id}),t.hasTalent(l.a.TOMBSTONE_TALENT.id)&&y.a.createElement(i,{spell:l.a.TOMBSTONE_TALENT.id})),y.a.createElement(X.a,{thresholds:n}))},ee=a(122),te=a(831),ae=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).boneShieldStacks=[],e.lastBoneShieldStack=0,e.lastBoneShieldUpdate=e.owner.fight.start_time,e.boneShieldStacks=Array.from({length:11},(function(e){return[]})),e.addEventListener(E.f.applybuff.by(f.a).spell(l.a.BONE_SHIELD),e.handleStacks),e.addEventListener(E.f.applybuffstack.by(f.a).spell(l.a.BONE_SHIELD),e.handleStacks),e.addEventListener(E.f.removebuff.by(f.a).spell(l.a.BONE_SHIELD),e.handleStacks),e.addEventListener(E.f.removebuffstack.by(f.a).spell(l.a.BONE_SHIELD),e.handleStacks),e.addEventListener(E.f.fightend,e.handleStacks),e}return Object(o.a)(a,[{key:"handleStacks",value:function(e){this.boneShieldStacks[this.lastBoneShieldStack].push(e.timestamp-this.lastBoneShieldUpdate),e.type!==E.b.FightEnd&&(this.lastBoneShieldUpdate=e.timestamp,this.lastBoneShieldStack=Object(te.a)(e))}},{key:"boneShieldTimesByStacks",get:function(){return this.boneShieldStacks}},{key:"averageBoneShieldStacks",get:function(){var e=this,t=0;return this.boneShieldStacks.forEach((function(a,n){t+=a.reduce((function(e,t){return e+t}),0)/e.owner.fightDuration*n})),t}}]),a}(f.c),ne=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"suggestions",value:function(e){e(this.uptimeSuggestionThresholds).addSuggestion((function(e,t,a){return e("Your Bone Shield uptime can be improved. Try to keep it up at all times.").icon(l.a.BONE_SHIELD.icon).actual(_.i18n._({id:"deathknight.blood.suggestions.boneShield.uptime",defaults:"{0}% Bone Shield uptime",values:{0:Object(v.e)(t)}})).recommended(">".concat(Object(v.e)(a),"% is recommended"))}))}},{key:"statistic",value:function(){var e=this;return y.a.createElement(w.a,{position:L.a.CORE(5),size:"flexible",dropdown:y.a.createElement(y.a.Fragment,null,y.a.createElement("table",{className:"table table-condensed"},y.a.createElement("thead",null,y.a.createElement("tr",null,y.a.createElement("th",null,"Stacks"),y.a.createElement("th",null,"Time (s)"),y.a.createElement("th",null,"Time (%)"))),y.a.createElement("tbody",null,Object.values(this.boneShieldTimesByStack).map((function(t,a){return y.a.createElement("tr",{key:a},y.a.createElement("th",null,a),y.a.createElement("td",null,Object(v.a)(t.reduce((function(e,t){return e+t}),0)/1e3)),y.a.createElement("td",null,Object(v.e)(t.reduce((function(e,t){return e+t}),0)/e.owner.fightDuration),"%"))})))))},y.a.createElement(I.a,{spell:l.a.BONE_SHIELD},y.a.createElement(y.a.Fragment,null,y.a.createElement(P.a,null)," ",Object(v.e)(this.uptime),"% ",y.a.createElement("small",null,"uptime"))))}},{key:"boneShieldTimesByStack",get:function(){return this.boneShieldTimesByStacks.boneShieldTimesByStacks}},{key:"uptime",get:function(){return this.selectedCombatant.getBuffUptime(l.a.BONE_SHIELD.id)/this.owner.fightDuration}},{key:"uptimeSuggestionThresholds",get:function(){return{actual:this.uptime,isLessThan:{minor:.95,average:.9,major:.8},style:"percentage"}}}]),a}(f.c);ne.dependencies={statTracker:ee.a,boneShieldTimesByStacks:ae};var ie=ne,se=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).currentBoneShieldStacks=0,e.currentBoneShieldBuffer=0,e.lastMarrowrendCast=0,e.bsStacksWasted=0,e.botdStacksWasted=0,e.refreshMRCasts=0,e.totalMRCasts=0,e.badMRCasts=0,e.hasBonesOfTheDamned=!1,e.refreshAtStacks=7,e.bonesOfTheDamnedProc=0,e.totalStacksGenerated=0,e.addEventListener(E.f.applybuff.to(f.a).spell(l.a.BONE_SHIELD),e.onApplyBuff),e.addEventListener(E.f.applybuffstack.to(f.a).spell(l.a.BONE_SHIELD),e.onApplyBuff),e.addEventListener(E.f.removebuff.to(f.a).spell(l.a.BONE_SHIELD),e.onRemoveBuff),e.addEventListener(E.f.removebuffstack.to(f.a).spell(l.a.BONE_SHIELD),e.onRemoveBuffStack),e.addEventListener(E.f.cast.by(f.a).spell(l.a.MARROWREND),e.onCast),e}return Object(o.a)(a,[{key:"onApplyBuff",value:function(e){this.currentBoneShieldBuffer+=1,this.currentBoneShieldStacks=e.stack}},{key:"onRemoveBuff",value:function(e){this.currentBoneShieldStacks=0}},{key:"onRemoveBuffStack",value:function(e){this.currentBoneShieldBuffer=0,this.currentBoneShieldStacks=e.stack}},{key:"onCast",value:function(e){var t=30-(e.timestamp-this.lastMarrowrendCast)/1e3;if(t<=6)this.refreshMRCasts+=1;else{var a=this.currentBoneShieldStacks-this.currentBoneShieldBuffer,n="";if(a>7){var i=3-this.currentBoneShieldBuffer;this.badMRCasts+=1,this.bsStacksWasted+=i,n+="You made this cast with ".concat(a," stacks of Bone Shield while it had ").concat(t.toFixed(1)," seconds left, wasting ").concat(i," charges.")}this.hasBonesOfTheDamned&&a>=7&&(this.botdStacksWasted+=1,n+="This cast couldn't proc ".concat(l.a.BONES_OF_THE_DAMNED.name," because you had already ").concat(a," stacks.")),""!==n&&(e.meta=e.meta||{},e.meta.isInefficientCast=!0,e.meta.inefficientCastReason=n)}this.currentBoneShieldBuffer>3&&this.hasBonesOfTheDamned&&(e.meta=e.meta||{},e.meta.isEnhancedCast=!0,e.meta.enhancedCastReason="This ".concat(l.a.MARROWREND.name," cast procced ").concat(l.a.BONES_OF_THE_DAMNED.name),this.bonesOfTheDamnedProc+=1),this.totalStacksGenerated+=this.currentBoneShieldBuffer,this.currentBoneShieldBuffer=0,this.lastMarrowrendCast=e.timestamp,this.totalMRCasts+=1}},{key:"suggestions",value:function(e){var t=this;e(this.suggestionThresholds).addSuggestion((function(e,a,n){var i=t.hasBonesOfTheDamned?" (not counting possible ".concat(l.a.BONES_OF_THE_DAMNED.name," procs)"):"";return e(y.a.createElement(y.a.Fragment,null,"You casted ",t.badMRCasts," Marrowrends with more than ",7," stacks of ",y.a.createElement(S.a,{id:l.a.BONE_SHIELD.id})," that were not about to expire, wasting ",t.bsStacksWasted," stacks",i,".",y.a.createElement("br",null),"Cast ",y.a.createElement(S.a,{id:l.a.HEART_STRIKE.id})," instead if you are at ",t.refreshAtStacks," stacks or above.")).icon(l.a.MARROWREND.icon).actual(_.i18n._({id:"deathknight.blood.suggestions.boneShield.stacksWasted",defaults:"{0}% wasted {1} stacks",values:{0:Object(v.e)(a),1:l.a.BONE_SHIELD.name}})).recommended("".concat(t.bsStacksWasted," stacks wasted, ").concat(t.totalStacksGenerated," stacks generated"))}))}},{key:"statistic",value:function(){return y.a.createElement(w.a,{position:L.a.CORE(3),size:"flexible",tooltip:y.a.createElement(y.a.Fragment,null,this.refreshMRCasts," casts to refresh Bone Shield, those do not count towards bad casts.",y.a.createElement("br",null),this.hasBonesOfTheDamned&&y.a.createElement(y.a.Fragment,null,this.wastedbonesOfTheDamnedProcs," casts with ",7," stacks of ",l.a.BONE_SHIELD.name,", wasting potential ",l.a.BONES_OF_THE_DAMNED.name," procs.",y.a.createElement("br",null)),this.badMRCasts," casts with more than ",7," stacks of Bone Shield wasting ",this.bsStacksWasted," stacks.",y.a.createElement("br",null),y.a.createElement("br",null),"Avoid casting Marrowrend unless you have ",this.refreshAtStacks," or less stacks or if Bone Shield has less than 6sec of its duration left.")},y.a.createElement(I.a,{spell:l.a.MARROWREND},y.a.createElement(y.a.Fragment,null,this.badMRCasts," / ",this.totalMRCasts," ",y.a.createElement("small",null,"bad casts"))))}},{key:"bonesOfTheDamnedProcs",get:function(){return this.bonesOfTheDamnedProc}},{key:"wastedbonesOfTheDamnedProcs",get:function(){return this.botdStacksWasted}},{key:"totalBoneShieldStacksGenerated",get:function(){return this.totalStacksGenerated}},{key:"wastedBoneShieldStacksPercent",get:function(){return this.bsStacksWasted/(this.totalStacksGenerated+this.bsStacksWasted)}},{key:"marrowrendCasts",get:function(){return this.totalMRCasts}},{key:"refreshWithStacks",get:function(){return this.refreshAtStacks}},{key:"suggestionThresholds",get:function(){return{actual:this.wastedBoneShieldStacksPercent,isGreaterThan:{minor:0,average:.1,major:.2},style:"percentage"}}},{key:"suggestionThresholdsEfficiency",get:function(){return{actual:1-this.wastedBoneShieldStacksPercent,isLessThan:{minor:1,average:.9,major:.8},style:"percentage"}}}]),a}(f.c);se.dependencies={abilityTracker:M.a};var re=se,oe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).dcCasts=0,e.cast=[],e.spellsThatShouldBeUsedFirst=[l.a.DEATH_AND_DECAY.id],e.addEventListener(E.f.cast.by(f.a).spell(l.a.DEATHS_CARESS),e.onCast),e.addEventListener(E.f.damage.by(f.a).spell(l.a.DEATHS_CARESS),e.onDamage),e.selectedCombatant.hasTalent(l.a.BLOODDRINKER_TALENT.id)&&e.spellsThatShouldBeUsedFirst.push(l.a.BLOODDRINKER_TALENT.id),e}return Object(o.a)(a,[{key:"onCast",value:function(e){var t=this,a=this.spellsThatShouldBeUsedFirst.some((function(e){return t.spellUsable.isAvailable(e)}));this.dcCasts+=1,this.cast.push({timestamp:e.timestamp,hadAnotherRangedSpell:a,playerPosition:{x:e.x,y:e.y},enemyPosition:{x:0,y:0}})}},{key:"onDamage",value:function(e){0!==this.cast.length&&(this.cast[this.cast.length-1].enemyPosition={x:e.x,y:e.y})}},{key:"calculateDistance",value:function(e,t,a,n){return Math.sqrt((e-a)*(e-a)+(t-n)*(t-n))/100}},{key:"suggestions",value:function(e){var t=this;e(this.averageCastSuggestionThresholds).addSuggestion((function(e,a,n){return e(y.a.createElement(y.a.Fragment,null,"Avoid casting ",y.a.createElement(S.a,{id:l.a.DEATHS_CARESS.id})," unless you're out of melee range and about to cap your runes while ",y.a.createElement(S.a,{id:l.a.DEATH_AND_DECAY.id})," and ",y.a.createElement(S.a,{id:l.a.BLOODDRINKER_TALENT.id})," are on cooldown. Dump runes primarily with ",y.a.createElement(S.a,{id:l.a.HEART_STRIKE.id}),".")).icon(l.a.DEATHS_CARESS.icon).actual(_.i18n._({id:"deathknight.blood.suggestions.deathCaress.badCasts",defaults:"{0}% bad {1} casts",values:{0:Object(v.e)(t.badDcCasts/t.dcCasts),1:l.a.DEATHS_CARESS.name}})).recommended("0% are recommended")}))}},{key:"badDcCasts",get:function(){var e=this,t=0;return this.cast.forEach((function(a){0===a.enemyPosition.x&&0===a.enemyPosition.y||(e.calculateDistance(a.enemyPosition.x,a.enemyPosition.y,a.playerPosition.x,a.playerPosition.y)<=12||a.hadAnotherRangedSpell)&&(t+=1)})),t}},{key:"averageCastSuggestionThresholds",get:function(){return{actual:1-this.badDcCasts/this.dcCasts,isLessThan:{minor:1,average:.95,major:.9},style:"percentage"}}}]),a}(f.c);oe.dependencies={spellUsable:U.b};var le=oe,ce=a(774),ue=a(88),de=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).bsCasts=[],e.totalBonestormDamage=0,e.active=e.selectedCombatant.hasTalent(l.a.BONESTORM_TALENT.id),e.addEventListener(E.f.cast.by(f.a).spell(l.a.BONESTORM_TALENT),e.onCast),e.addEventListener(E.f.damage.by(f.a).spell(l.a.BONESTORM_HIT),e.onDamage),e}return Object(o.a)(a,[{key:"onCast",value:function(e){var t,a=null===(t=e.classResources)||void 0===t?void 0:t.find((function(e){return e.type===ue.a.RUNIC_POWER.id}));a&&this.bsCasts.push({cost:a.cost,hits:[]})}},{key:"onDamage",value:function(e){0===this.bsCasts.length&&this.bsCasts.push({cost:100,hits:[]});var t=e.amount+(e.absorbed||0);this.bsCasts[this.bsCasts.length-1].hits.push(t),this.totalBonestormDamage+=t}},{key:"suggestions",value:function(e){e(this.suggestionThresholds).addSuggestion((function(e,t,a){return e(y.a.createElement(y.a.Fragment,null,"Try to cast ",y.a.createElement(S.a,{id:l.a.BONESTORM_TALENT.id})," only if you can reliable hit 2 or more targets to maximize the damage and healing. Casting ",y.a.createElement(S.a,{id:l.a.BONESTORM_TALENT.id})," with only one target in range is only a minor DPS gain (~10 DPS) at the cost of pooling Runic Power, use ",y.a.createElement(S.a,{id:l.a.DEATH_STRIKE.id})," instead.")).icon(l.a.BONESTORM_TALENT.icon).actual(_.i18n._({id:"deathknight.blood.suggestions.boneStorm.notEnoughTargets",defaults:"{0}% casts hit {SUGGESTED_MIN_TARGETS_FOR_BONESTORM} or more targets",values:{0:Object(v.e)(t),SUGGESTED_MIN_TARGETS_FOR_BONESTORM:1.5}})).recommended("".concat(Object(v.e)(a),"%is recommended"))}))}},{key:"statistic",value:function(){return y.a.createElement(ce.a,{talent:l.a.BONESTORM_TALENT.id,position:L.a.OPTIONAL(7),value:"".concat(Object(v.e)(this.owner.getPercentageOfTotalDamageDone(this.totalBonestormDamage))," %"),label:"of your total damage",tooltip:this.bonestormTooltip})}},{key:"goodBonestormCasts",get:function(){return this.bsCasts.filter((function(e){return e.hits.length/(e.cost/100)>=1.5})).length}},{key:"totalBonestormCasts",get:function(){return this.bsCasts.length}},{key:"suggestionThresholds",get:function(){return{actual:this.goodBonestormCasts/this.totalBonestormCasts,isLessThan:{minor:1,average:.8,major:.6},style:"percentage"}}},{key:"bonestormTooltip",get:function(){var e=[];return this.bsCasts.forEach((function(t,a){var n=Object(v.d)(t.hits.reduce((function(e,t){return e+t}),0)/t.hits.length||0),i=Object(v.d)(t.hits.reduce((function(e,t){return e+t}),0)),s=Object(v.d)(t.hits.length/t.cost*100||0,1),r=Object(v.d)(t.cost/10);e.push(y.a.createElement(y.a.Fragment,null,"Cast #",a+1," (for ",r," RP) hit an average of ",s," target",s<=1?"":"s"," for ",n," per hit. (",i," total)",y.a.createElement("br",null)))})),e}}]),a}(f.c),he=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).active=e.selectedCombatant.hasTalent(l.a.MARK_OF_BLOOD_TALENT.id),e}return Object(o.a)(a,[{key:"suggestions",value:function(e){e(this.uptimeSuggestionThresholds).addSuggestion((function(e,t,a){return e(y.a.createElement(y.a.Fragment,null,"Your ",y.a.createElement(S.a,{id:l.a.MARK_OF_BLOOD_TALENT.id})," uptime can be improved.")).icon(l.a.MARK_OF_BLOOD_TALENT.icon).actual(_.i18n._({id:"deathknight.blood.suggestions.markOfBlood.uptime",defaults:"{0}% Mark Of Blood Uptime",values:{0:Object(v.e)(t)}})).recommended(">".concat(Object(v.e)(a),"% is recommended"))}))}},{key:"statistic",value:function(){return y.a.createElement(ce.a,{talent:l.a.MARK_OF_BLOOD_TALENT.id,position:L.a.OPTIONAL(6),value:"".concat(Object(v.e)(this.uptime)," %"),label:"Mark Of Blood Uptime"})}},{key:"uptime",get:function(){return this.enemies.getBuffUptime(l.a.MARK_OF_BLOOD_TALENT.id)/this.owner.fightDuration}},{key:"uptimeSuggestionThresholds",get:function(){return{actual:this.uptime,isLessThan:{minor:.95,average:.9,major:.8},style:"percentage"}}}]),a}(f.c);he.dependencies={enemies:C.a};var me=he,ge=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).ability=l.a.CONSUMPTION_TALENT,e.active=e.selectedCombatant.hasTalent(l.a.CONSUMPTION_TALENT.id),e}return a}(a(966).a),Ee=a(49),fe=a(781),be=a(808),Oe=a(773),pe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).totalCooldownReduction=0,e.totalCooldownReductionWasted=0,e.resource=ue.a.RUNIC_POWER,e}return Object(o.a)(a,[{key:"getReducedCost",value:function(e){if(!this.getResource(e).cost)return 0;var t=this.getResource(e).cost/10;return e.ability.guid===l.a.DEATH_STRIKE.id&&(this.reduceCooldown(t),this.selectedCombatant.hasBuff(l.a.OSSUARY.id)&&(t-=5)),t}},{key:"reduceCooldown",value:function(e){if(this.selectedCombatant.hasTalent(l.a.RED_THIRST_TALENT.id)){var t=100*e;if(this.spellUsable.isOnCooldown(l.a.VAMPIRIC_BLOOD.id)){var a=this.spellUsable.reduceCooldown(l.a.VAMPIRIC_BLOOD.id,t);this.totalCooldownReduction+=a,this.totalCooldownReductionWasted+=t-a}else this.totalCooldownReductionWasted+=t}}},{key:"cooldownReduction",get:function(){return this.totalCooldownReduction}},{key:"cooldownReductionWasted",get:function(){return this.totalCooldownReductionWasted}}]),a}(Oe.a);pe.dependencies=Object(x.a)(Object(x.a)({},Oe.a.dependencies),{},{spellUsable:U.b});var ye=pe,Te=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"suggestions",value:function(e){var t=this;e(this.suggestionThresholds).addSuggestion((function(e,a,n){return e("You wasted ".concat(Object(v.e)(t.wastedPercent),"% of your Runic Power.")).icon("inv_sword_62").actual(_.i18n._({id:"deathknight.blood.suggestions.runicPower.wasted",defaults:"{0}% wasted",values:{0:Object(v.e)(a)}})).recommended("<".concat(Object(v.e)(n),"% is recommended"))}))}},{key:"statistic",value:function(){return y.a.createElement(w.a,{position:L.a.CORE(3),size:"small",tooltip:"".concat(this.runicPowerTracker.wasted," out of ").concat(this.runicPowerTracker.wasted+this.runicPowerTracker.generated," runic power wasted.")},y.a.createElement(be.a,{resource:ue.a.RUNIC_POWER,value:"".concat(Object(v.e)(this.wastedPercent)," %"),label:"Runic Power wasted"}))}},{key:"tab",value:function(){var e=this;return{title:"Runic Power usage",url:"runic-power-usage",render:function(){return y.a.createElement(Ee.a,null,y.a.createElement(fe.a,{tracker:e.runicPowerTracker,showSpenders:!0}))}}}},{key:"wastedPercent",get:function(){return this.runicPowerTracker.wasted/(this.runicPowerTracker.wasted+this.runicPowerTracker.generated)||0}},{key:"efficiencySuggestionThresholds",get:function(){return{actual:1-this.wastedPercent,isLessThan:{minor:.95,average:.9,major:.85},style:"percentage"}}},{key:"suggestionThresholds",get:function(){return{actual:this.wastedPercent,isGreaterThan:{minor:.05,average:.1,major:.15},style:"percentage"}}}]),a}(f.c);Te.dependencies={runicPowerTracker:ye};var ve=Te,Se=a(848),_e=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(o.a)(a,[{key:"render",value:function(){return y.a.createElement($,{combatant:this.combatants.selected,castEfficiency:this.castEfficiency,thresholds:Object(x.a)(Object(x.a)({},this.preparationRuleAnalyzer.thresholds),{},{crimsonScourge:this.crimsonScourge.efficiencySuggestionThresholds,runicPower:this.runicPowerDetails.efficiencySuggestionThresholds,runes:this.runeTracker.suggestionThresholdsEfficiency,marrowrend:this.marrowrendUsage.suggestionThresholdsEfficiency,deathsCaress:this.deathsCaress.averageCastSuggestionThresholds,consumption:this.consumption.hitSuggestionThreshold,bonestorm:this.bonestorm.suggestionThresholds,bloodPlague:this.bloodplagueUptime.uptimeSuggestionThresholds,markOfBlood:this.markOfBloodUptime.uptimeSuggestionThresholds,boneShield:this.boneShield.uptimeSuggestionThresholds})})}}]),a}(K.a);_e.dependencies={combatants:z.a,castEfficiency:Y.a,alwaysBeCasting:R,preparationRuleAnalyzer:V.a,bloodplagueUptime:B,boneShield:ie,deathsCaress:le,bonestorm:de,consumption:ge,markOfBloodUptime:me,crimsonScourge:F,marrowrendUsage:re,runicPowerDetails:ve,runeTracker:Se.a};var Re=_e,Ae=[l.a.DEATH_STRIKE.id,l.a.HEART_STRIKE.id,l.a.BLOOD_BOIL.id,l.a.MARROWREND.id,l.a.CONSUMPTION_TALENT.id],ke=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).castsDuringDRW=[],i.addEventListener(E.f.cast.by(f.a),i.onCast),i}return Object(o.a)(a,[{key:"onCast",value:function(e){this.selectedCombatant.hasBuff(l.a.DANCING_RUNE_WEAPON_BUFF.id)&&e.ability.guid!==l.a.RAISE_ALLY.id&&e.ability.guid!==l.a.DANCING_RUNE_WEAPON.id&&void 0!==this.abilities.getAbility(e.ability.guid)&&this.abilities.getAbility(e.ability.guid).gcd&&this.castsDuringDRW.push(e.ability.guid)}},{key:"spellLinks",value:function(e,t){return e===l.a.CONSUMPTION_TALENT.id?y.a.createElement(y.a.Fragment,{key:e},"and (if in AoE)",y.a.createElement(S.a,{id:e})):t+2===Ae.length?y.a.createElement(y.a.Fragment,{key:e},y.a.createElement(S.a,{id:e})," "):y.a.createElement(y.a.Fragment,{key:e},y.a.createElement(S.a,{id:e}),", ")}},{key:"suggestions",value:function(e){var t=this;e(this.SuggestionThresholds).addSuggestion((function(e,a,n){return e(y.a.createElement(y.a.Fragment,null,"Avoid casting spells during ",y.a.createElement(S.a,{id:l.a.DANCING_RUNE_WEAPON.id})," that don't benefit from the coppies such as ",y.a.createElement(S.a,{id:l.a.BLOODDRINKER_TALENT.id})," and ",y.a.createElement(S.a,{id:l.a.DEATH_AND_DECAY.id}),". Check the cooldown-tab below for more detailed breakdown.",t.goodDRWSpells)).icon(l.a.DANCING_RUNE_WEAPON.icon).actual(_.i18n._({id:"deathknight.blood.suggestions.dancingRuneWeapon.numberCasts",defaults:"{0} out of {1} casts during DRW were good",values:{0:t.goodDRWCasts.length,1:t.castsDuringDRW.length}})).recommended("".concat(t.castsDuringDRW.length," recommended"))}))}},{key:"goodDRWCasts",get:function(){return this.castsDuringDRW.filter((function(e,t){return Ae.includes(e)}))}},{key:"SuggestionThresholds",get:function(){return{actual:this.goodDRWCasts.length/this.castsDuringDRW.length,isLessThan:{minor:1,average:.9,major:.8},style:"percentage"}}},{key:"goodDRWSpells",get:function(){var e=this;return y.a.createElement("div",null,"Try and prioritize ",Ae.map((function(t,a){return e.spellLinks(t,a)})))}}]),a}(f.c);ke.dependencies={spellUsable:U.b,abilities:u.a};var Ne=ke,De=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).firstMRCast=!1,i.firstMRCastWithoutDRW=!1,i.addEventListener(E.f.cast.by(f.a).spell(l.a.MARROWREND),i.onCast),i}return Object(o.a)(a,[{key:"onCast",value:function(e){this.firstMRCast||(this.firstMRCast=!0,this.selectedCombatant.hasBuff(l.a.DANCING_RUNE_WEAPON_BUFF.id)||(this.firstMRCastWithoutDRW=!0))}},{key:"suggestions",value:function(e){e(this.initialMRThresholds).isTrue().addSuggestion((function(e,t,a){return e(y.a.createElement(y.a.Fragment,null,"Use your first ",y.a.createElement(S.a,{id:l.a.MARROWREND.id})," together with ",y.a.createElement(S.a,{id:l.a.DANCING_RUNE_WEAPON.id})," to build up stacks of ",y.a.createElement(S.a,{id:l.a.BONE_SHIELD.id})," faster without wasting as much runes. This will also increase your initial threat-genration as your burst DPS will increase significantly. Don't treat ",y.a.createElement(S.a,{id:l.a.DANCING_RUNE_WEAPON.id})," as a defensive CD unless you really need the parry and increased Runic Power generation defensively.")).icon(l.a.DANCING_RUNE_WEAPON.icon)}))}},{key:"initialMRThresholds",get:function(){return{actual:this.firstMRCastWithoutDRW,isEqual:!0,style:"boolean"}}}]),a}(f.c);De.dependencies={abilities:u.a};var Ce=De,Le=a(967),we=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).selfHealSpell=l.a.DEATH_STRIKE_HEAL,e.tabTitle="Death Strike Timing",e.tabURL="death-strike-timings",e}return Object(o.a)(a,[{key:"render",value:function(){return y.a.createElement(Le.a,null)}}]),a}(Le.a),Ie=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).buffCheckPhysical=[l.a.BONE_SHIELD.id,l.a.DANCING_RUNE_WEAPON_BUFF.id],e.buffCheckMagical=[l.a.ANTI_MAGIC_SHELL.id],e.buffCheckPhysAndMag=[l.a.BLOOD_SHIELD.id,l.a.VAMPIRIC_BLOOD.id,l.a.ICEBOUND_FORTITUDE.id,l.a.TOMBSTONE_TALENT.id],e}return a}(a(849).a),Pe=a(921),je=a(58),Be=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).casts=0,e.active=e.selectedCombatant.hasTalent(l.a.RED_THIRST_TALENT.id),e.addEventListener(E.f.cast.by(f.a).spell(l.a.VAMPIRIC_BLOOD),e.onCast),e}return Object(o.a)(a,[{key:"onCast",value:function(e){this.casts+=1}},{key:"statistic",value:function(){return y.a.createElement(w.a,{position:L.a.OPTIONAL(2),category:je.a.TALENTS,size:"flexible",tooltip:y.a.createElement(y.a.Fragment,null,Object(v.d)(this.reduction)," sec total effective reduction and ",Object(v.d)(this.wastedReduction)," sec (",Object(v.e)(this.wastedPercent),"%) wasted reduction.")},y.a.createElement(I.a,{spell:l.a.RED_THIRST_TALENT},y.a.createElement(y.a.Fragment,null,y.a.createElement(P.a,null)," ",Object(v.d)(this.averageReduction)," sec ",y.a.createElement("small",null,"average reduction"))))}},{key:"reduction",get:function(){return this.runicPowerTracker.cooldownReduction/1e3}},{key:"wastedReduction",get:function(){return this.runicPowerTracker.cooldownReductionWasted/1e3}},{key:"averageReduction",get:function(){return this.reduction/this.casts||0}},{key:"wastedPercent",get:function(){return this.wastedReduction/(this.wastedReduction+this.reduction)}}]),a}(f.c);Be.dependencies={runicPowerTracker:ye};var Me=Be,Ue=a(752),He=a(769),Fe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).buffedDeathStrikes=0,e.unbuffedDeathStrikes=0,e.buffStack=0,e.usedBuffs=0,e.wastedBuffs=0,e.gainedBuffs=0,e.damage=0,e.heal=0,e.active=e.selectedCombatant.hasTalent(l.a.HEMOSTASIS_TALENT.id),e.addEventListener(E.f.heal.by(f.a).spell(l.a.DEATH_STRIKE_HEAL),e.onHeal),e.addEventListener(E.f.damage.by(f.a).spell([l.a.DEATH_STRIKE,l.a.BLOOD_BOIL]),e.onDamage),e}return Object(o.a)(a,[{key:"onHeal",value:function(e){this.buffStack>0&&(this.heal+=Object(He.a)(e,.08*this.buffStack))}},{key:"onDamage",value:function(e){var t=e.ability.guid;if(t===l.a.DEATH_STRIKE.id){if(this.buffStack>0)return this.buffedDeathStrikes+=1,this.usedBuffs+=this.buffStack,this.damage+=Object(Ue.a)(e,.08*this.buffStack),void(this.buffStack=0);this.unbuffedDeathStrikes+=1}t===l.a.BLOOD_BOIL.id&&(5===this.buffStack?this.wastedBuffs+=1:(this.buffStack+=1,this.gainedBuffs+=1))}},{key:"statistic",value:function(){return y.a.createElement(w.a,{position:L.a.OPTIONAL(2),category:je.a.TALENTS,size:"flexible",tooltip:y.a.createElement(y.a.Fragment,null,"Resulting in ",Object(v.d)(this.damage)," additional damage and ",Object(v.d)(this.heal)," additional healing.",y.a.createElement("br",null),"You gained ",this.gainedBuffs," and wasted ",this.wastedBuffs," stacks.")},y.a.createElement(I.a,{spell:l.a.HEMOSTASIS_TALENT},y.a.createElement(y.a.Fragment,null,Object(v.e)(this.averageIncrease)," % ",y.a.createElement("small",null,"average DS increase"))))}},{key:"averageIncrease",get:function(){return this.usedBuffs/(this.buffedDeathStrikes+this.unbuffedDeathStrikes)*.08}}]),a}(f.c),Ge=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).active=e.selectedCombatant.hasTalent(l.a.FOUL_BULWARK_TALENT.id),e}return Object(o.a)(a,[{key:"statistic",value:function(){var e=this;return y.a.createElement(ce.a,{talent:l.a.FOUL_BULWARK_TALENT.id,position:L.a.OPTIONAL(3),value:"".concat(this.averageFoulBullwark,"%"),label:"average Foul Bulwark buff"},y.a.createElement("table",{className:"table table-condensed"},y.a.createElement("thead",null,y.a.createElement("tr",null,y.a.createElement("th",null,"HP-bonus"),y.a.createElement("th",null,"Time (s)"),y.a.createElement("th",null,"Time (%)"))),y.a.createElement("tbody",null,this.boneShieldTimesByStack.map((function(t,a){return y.a.createElement("tr",{key:a},y.a.createElement("th",null,(.01*a*100).toFixed(0),"%"),y.a.createElement("td",null,Object(v.a)(t.reduce((function(e,t){return e+t}),0)/1e3)),y.a.createElement("td",null,Object(v.e)(t.reduce((function(e,t){return e+t}),0)/e.owner.fightDuration),"%"))})))))}},{key:"boneShieldTimesByStack",get:function(){return this.boneShieldTimesByStacks.boneShieldTimesByStacks}},{key:"averageFoulBullwark",get:function(){return Object(v.e)(.01*this.boneShieldTimesByStacks.averageBoneShieldStacks)}}]),a}(f.c);Ge.dependencies={boneShieldTimesByStacks:ae};var We=Ge,xe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).rpGains=[],e.hsCasts=0,e.active=e.selectedCombatant.hasTalent(l.a.HEARTBREAKER_TALENT.id),e.addEventListener(E.f.cast.by(f.a).spell(l.a.HEART_STRIKE),e.onCast),e.addEventListener(E.f.energize.spell(l.a.HEARTBREAKER),e.onEnergize),e}return Object(o.a)(a,[{key:"onCast",value:function(e){this.hsCasts+=1}},{key:"onEnergize",value:function(e){e.resourceChangeType===ue.a.RUNIC_POWER.id&&this.rpGains.push(e.resourceChange)}},{key:"statistic",value:function(){return y.a.createElement(ce.a,{talent:l.a.HEARTBREAKER_TALENT.id,position:L.a.OPTIONAL(1),value:this.totalRPGained,label:"Runic Power gained",tooltip:y.a.createElement(y.a.Fragment,null,"Resulting in about ",Math.floor(this.totalRPGained/40)," extra Death Strikes.",y.a.createElement("br",null),"Your Heart Strike hit on average ",this.averageHearStrikeHits," targets.")})}},{key:"totalRPGained",get:function(){return this.rpGains.reduce((function(e,t){return e+t}),0)}},{key:"averageHearStrikeHits",get:function(){return(this.rpGains.length/this.hsCasts).toFixed(2)}}]),a}(f.c),Ke=a(765),Ye=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).totalSummons=0,e.totalHealing=0,e.totalDamage=0,e.poppedEarly=0,e.wormID=0,e.bloodworm=[],e.active=e.selectedCombatant.hasTalent(l.a.BLOODWORMS_TALENT.id),e.addEventListener(E.f.summon.by(f.a).spell(l.a.BLOODWORM),e.onSummon),e.addEventListener(E.f.damage.by(f.b),e.onDamage),e.addEventListener(E.f.instakill.by(f.b).spell(l.a.BLOODWORM_DEATH),e.onInstakill),e.addEventListener(E.f.heal.to(f.a).spell(l.a.BLOODWORM_DEATH),e.onHeal),e}return Object(o.a)(a,[{key:"poppedWorms",value:function(e){return e.filter((function(e){return e.killedTime-e.summonedTime<=14900})).length}},{key:"onSummon",value:function(e){this.bloodworm.push({uniqueID:e.targetInstance,summonedTime:e.timestamp}),this.totalSummons+=1,this.wormID=e.targetID}},{key:"onDamage",value:function(e){e.sourceID===this.wormID&&(this.totalDamage+=e.amount+(e.absorbed||0))}},{key:"onInstakill",value:function(e){var t=-1;this.bloodworm.forEach((function(a,n){a.uniqueID===e.targetInstance&&(t=n)})),-1!==t&&(this.bloodworm[t].killedTime=e.timestamp)}},{key:"onHeal",value:function(e){this.totalHealing+=(e.amount||0)+(e.absorbed||0)}},{key:"statistic",value:function(){return y.a.createElement(w.a,{position:L.a.OPTIONAL(2),category:je.a.TALENTS,size:"flexible",tooltip:y.a.createElement(y.a.Fragment,null,y.a.createElement("strong",null,"Damage:")," ",Object(v.f)(this.totalDamage)," / ",this.owner.formatItemDamageDone(this.totalDamage),y.a.createElement("br",null),y.a.createElement("strong",null,"Number of worms summoned:")," ",this.totalSummons,y.a.createElement("br",null),y.a.createElement("strong",null,"Number of worms popped early:")," ",this.poppedWorms(this.bloodworm))},y.a.createElement(I.a,{spell:l.a.BLOODWORMS_TALENT},y.a.createElement(y.a.Fragment,null,y.a.createElement(Ke.a,{amount:this.totalHealing}))))}}]),a}(f.c);Ye.dependencies={abilityTracker:M.a};var ze=Ye,Ve=a(22),qe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).tombstone=[],e.casts=0,e.rpGained=0,e.rpWasted=0,e.absorbSize=0,e.totalAbsorbed=0,e.active=e.selectedCombatant.hasTalent(l.a.TOMBSTONE_TALENT.id),e.addEventListener(E.f.applybuff.to(f.a).spell(l.a.TOMBSTONE_TALENT),e.onApplyBuff),e.addEventListener(E.f.energize.to(f.a).spell(l.a.TOMBSTONE_TALENT),e.onEnergize),e.addEventListener(E.f.absorbed.to(f.a).spell(l.a.TOMBSTONE_TALENT),e.onAbsorb),e.addEventListener(E.f.removebuff.to(f.a).spell(l.a.TOMBSTONE_TALENT),e.onRemoveBuff),e}return Object(o.a)(a,[{key:"onApplyBuff",value:function(e){this.casts+=1,this.absorbSize=e.absorb}},{key:"onEnergize",value:function(e){this.rpGained=e.resourceChange,this.rpWasted=e.waste}},{key:"onAbsorb",value:function(e){this.totalAbsorbed+=e.amount}},{key:"onRemoveBuff",value:function(e){this.tombstone.push({rpGained:this.rpGained,rpWasted:this.rpWasted,absorbSize:this.absorbSize,totalAbsorbed:this.totalAbsorbed,absorbedWasted:this.absorbSize-this.totalAbsorbed,charges:this.rpGained/6}),this.totalAbsorbed=0}},{key:"suggestions",value:function(e){var t=this;e(this.suggestionThresholdsEfficiency).addSuggestion((function(e,a,n){return e(y.a.createElement(y.a.Fragment,null,"You casted ",t.wastedCasts," ",y.a.createElement(S.a,{id:l.a.TOMBSTONE_TALENT.id})," with less than 5 charges causing a reduced absorb shield.")).icon(l.a.TOMBSTONE_TALENT.icon).actual(_.i18n._({id:"deathknight.blood.suggestions.tomestone.badCasts",defaults:"{0}% bad Tombstone casts",values:{0:Object(v.e)(a)}})).recommended("<".concat(Object(v.e)(n),"% is recommended"))}))}},{key:"statistic",value:function(){var e=this;return y.a.createElement(ce.a,{talent:l.a.TOMBSTONE_TALENT.id,position:L.a.OPTIONAL(3),value:this.wastedCasts,label:"Bad Casts",tooltip:"Any cast without 5 charges is considered a wasted cast."},y.a.createElement("table",{className:"table table-condensed"},y.a.createElement("thead",null,y.a.createElement("tr",null,y.a.createElement("th",null,"Charges"),y.a.createElement("th",null,"RP Wasted"),y.a.createElement("th",null,"Absorb Used (%)"))),y.a.createElement("tbody",null,Object.values(this.tombstone).map((function(t,a){return y.a.createElement("tr",{key:a},y.a.createElement("th",null,e.tombstone[a].charges),y.a.createElement("td",null,y.a.createElement(Ve.a,{content:y.a.createElement(y.a.Fragment,null,y.a.createElement("strong",null,"RP Generated:")," ",e.tombstone[a].rpGained-e.tombstone[a].rpWasted)},e.tombstone[a].rpWasted)),y.a.createElement("td",null,y.a.createElement(Ve.a,{content:y.a.createElement(y.a.Fragment,null,y.a.createElement("strong",null,"Damage Absorbed:")," ",Object(v.d)(e.tombstone[a].totalAbsorbed)," ",y.a.createElement("br",null),y.a.createElement("strong",null,"Absorb Shield: ")," ",Object(v.d)(e.tombstone[a].absorbSize)," ",y.a.createElement("br",null),y.a.createElement("strong",null,"Healing: ")," ",e.owner.formatItemHealingDone(e.tombstone[a].totalAbsorbed))},Object(v.e)(e.tombstone[a].totalAbsorbed/e.tombstone[a].absorbSize),"%")))})))))}},{key:"wastedCasts",get:function(){return this.tombstone.filter((function(e){return e.charges<5})).length}},{key:"suggestionThresholdsEfficiency",get:function(){return{actual:1-this.wastedCasts/this.casts,isLessThan:{minor:.95,average:.9,major:.8},style:"percentage"}}}]),a}(f.c);qe.dependencies={damageTracker:M.a};var Je=qe,Ze=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).active=e.selectedCombatant.hasTalent(l.a.VORACIOUS_TALENT.id),e}return Object(o.a)(a,[{key:"statistic",value:function(){return y.a.createElement(ce.a,{talent:l.a.VORACIOUS_TALENT.id,position:L.a.OPTIONAL(6),value:"".concat(Object(v.e)(this.uptime)," %"),label:"Voracious uptime"})}},{key:"uptime",get:function(){return this.selectedCombatant.getBuffUptime(l.a.VORACIOUS.id)/this.owner.fightDuration}},{key:"uptimeSuggestionThresholds",get:function(){return{actual:this.uptime,isLessThan:{minor:.95,average:.9,major:.8},style:"percentage"}}}]),a}(f.c),Xe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).bpDamage=0,e.dndDamage=0,e.totalDamage=0,e.active=e.selectedCombatant.hasTalent(l.a.RAPID_DECOMPOSITION_TALENT.id),e.addEventListener(E.f.damage.by(f.a).spell([l.a.BLOOD_PLAGUE,l.a.DEATH_AND_DECAY_DAMAGE_TICK]),e.onDamage),e}return Object(o.a)(a,[{key:"onDamage",value:function(e){e.ability.guid===l.a.BLOOD_PLAGUE.id?this.bpDamage+=Object(Ue.a)(e,.15):this.dndDamage+=Object(Ue.a)(e,.15),this.totalDamage=this.bpDamage+this.dndDamage}},{key:"statistic",value:function(){return y.a.createElement(ce.a,{talent:l.a.RAPID_DECOMPOSITION_TALENT.id,position:L.a.OPTIONAL(2),value:this.owner.formatItemDamageDone(this.totalDamage),tooltip:y.a.createElement(y.a.Fragment,null,y.a.createElement("strong",null,"Blood Plague:")," ",this.owner.formatItemDamageDone(this.bpDamage),y.a.createElement("br",null),y.a.createElement("strong",null,"Death And Decay:")," ",this.owner.formatItemDamageDone(this.dndDamage))})}}]),a}(f.c),Qe=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).totalWotnAbsorbed=0,e.currentWotnAbsorbed=0,e.activated=0,e.spellDamageId=0,e.goodAbsorbCount=0,e.nextEvent=!1,e.active=e.selectedCombatant.hasTalent(l.a.WILL_OF_THE_NECROPOLIS_TALENT.id),e.addEventListener(E.f.absorbed.by(f.a).spell(l.a.WILL_OF_THE_NECROPOLIS_TALENT),e.onAbsorbed),e.addEventListener(E.f.damage.to(f.a),e.onDamageTaken),e}return Object(o.a)(a,[{key:"onAbsorbed",value:function(e){this.totalWotnAbsorbed+=e.amount,this.currentWotnAbsorbed=e.amount,this.activated+=1,this.spellDamageId=e.extraAbility.guid,this.nextEvent=!0}},{key:"onDamageTaken",value:function(e){var t=e.maxHitPoints,a=this.currentWotnAbsorbed/t;e.ability.guid===this.spellDamageId&&!1!==this.nextEvent&&(this.nextEvent=!1,this.playerHealth=e.maxHitPoints,a>.05&&(this.goodAbsorbCount+=1))}},{key:"statistic",value:function(){return y.a.createElement(w.a,{position:L.a.OPTIONAL(2),category:je.a.TALENTS,size:"flexible",tooltip:y.a.createElement(y.a.Fragment,null,y.a.createElement("strong",null,"Total Damage Absorbed: ")," ",Object(v.d)(this.totalWotnAbsorbed)," ",y.a.createElement("br",null),y.a.createElement("strong",null,"Activated: ")," ",this.activated,y.a.createElement("br",null),y.a.createElement("strong",null,"Absorbed 5% Max Health or more count: ")," ",this.goodAbsorbCount)},y.a.createElement(I.a,{spell:l.a.WILL_OF_THE_NECROPOLIS_TALENT},y.a.createElement(y.a.Fragment,null,y.a.createElement(Ke.a,{amount:this.totalWotnAbsorbed}))))}}]),a}(f.c),$e=a(164),et=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).runicPowerGained=0,i.runicPowerWasted=0,i.healing=0,i.overhealing=0,i.active=i.selectedCombatant.hasTalent(l.a.RELISH_IN_BLOOD_TALENT.id),i.addEventListener(E.f.energize.spell(l.a.RELISH_IN_BLOOD),i._relishBuffed),i.addEventListener(E.f.heal.by(f.a).spell(l.a.RELISH_IN_BLOOD),i._onHeal),i}return Object(o.a)(a,[{key:"_relishBuffed",value:function(e){e.resourceChangeType===ue.a.RUNIC_POWER.id&&(this.runicPowerGained+=e.resourceChange,this.runicPowerWasted+=e.waste)}},{key:"_onHeal",value:function(e){e.overheal&&(this.overhealing+=e.overheal),this.healing+=e.amount+e.absorb}},{key:"suggestions",value:function(e){var t=this;e(this.efficiencySuggestionThresholds).addSuggestion((function(e,a,n){return e(y.a.createElement("span",null,"Avoid being Runic Power capped at all times, you wasted ",t.runicPowerWasted," PR by being RP capped.")).icon(l.a.RELISH_IN_BLOOD_TALENT.icon).actual(_.i18n._({id:"deathknight.suggestions.hysteria.efficiency",defaults:"You wasted {0}% of RP from {1} by being RP capped.",values:{0:Object(v.e)(a),1:l.a.RELISH_IN_BLOOD_TALENT.name}})).recommended("".concat(Object(v.e)(n),"% is recommended"))}))}},{key:"statistic",value:function(){return y.a.createElement(w.a,{position:L.a.OPTIONAL(2),category:je.a.TALENTS,size:"flexible",tooltip:y.a.createElement(y.a.Fragment,null,y.a.createElement("strong",null,"RP wasted: ")," ",this.runicPowerWasted," (",Object(v.e)(this.rpWastePercentage)," %)",y.a.createElement("br",null),y.a.createElement("strong",null,"Healing: ")," ",Object(v.d)(this.healing)," ",y.a.createElement("br",null),y.a.createElement("strong",null,"Overhealing: ")," ",Object(v.d)(this.overhealing)," (",Object(v.e)(this.overhealPercentage)," %) ",y.a.createElement("br",null))},y.a.createElement(I.a,{spell:l.a.RELISH_IN_BLOOD_TALENT},y.a.createElement(y.a.Fragment,null,this.runicPowerGained," ",y.a.createElement("small",null,"RP gained"))))}},{key:"overhealPercentage",get:function(){return this.overhealing/this.healing}},{key:"rpWastePercentage",get:function(){return this.runicPowerWasted/this.runicPowerGained}},{key:"efficiencySuggestionThresholds",get:function(){return{actual:this.rpWastePercentage,isGreaterThan:{minor:0,average:.2,major:.4},style:$e.a.PERCENTAGE}}}]),a}(f.c),tt=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).runeForges=[{forge:l.a.RUNE_OF_THE_STONESKIN_GARGOYLE,importance:c.a.MAJOR,suggestion:y.a.createElement(y.a.Fragment,null,y.a.createElement(S.a,{id:l.a.RUNE_OF_THE_STONESKIN_GARGOYLE.id})," is a survivability runeforge at the cost of damage and healing. Use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_THE_FALLEN_CRUSADER.id})," as there is no need for SSGs EHP increase right now.")},{forge:l.a.RUNE_OF_RAZORICE,importance:c.a.MAJOR,suggestion:y.a.createElement(y.a.Fragment,null,"Don't use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_RAZORICE.id})," as Blood Death Knight, use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_THE_FALLEN_CRUSADER.id})," instead.")},{forge:l.a.RUNE_OF_SANGUINATION,importance:c.a.MAJOR,suggestion:y.a.createElement(y.a.Fragment,null,"Don't use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_SANGUINATION.id})," as Blood Death Knight, use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_THE_FALLEN_CRUSADER.id})," instead.")},{forge:l.a.RUNE_OF_APOCALYPSE,importance:c.a.MAJOR,suggestion:y.a.createElement(y.a.Fragment,null,"Don't use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_APOCALYPSE.id})," as Blood Death Knight, use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_THE_FALLEN_CRUSADER.id})," instead.")},{forge:l.a.RUNE_OF_UNENDING_THIRST,importance:c.a.MAJOR,suggestion:y.a.createElement(y.a.Fragment,null,"Don't use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_UNENDING_THIRST.id})," as Blood Death Knight, use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_THE_FALLEN_CRUSADER.id})," instead.")},{forge:l.a.RUNE_OF_SPELLWARDING,importance:c.a.MAJOR,suggestion:y.a.createElement(y.a.Fragment,null,"Don't use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_SPELLWARDING.id})," as Blood Death Knight, use ",y.a.createElement(S.a,{id:l.a.RUNE_OF_THE_FALLEN_CRUSADER.id})," instead.")}],i}return a}(function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){var e;Object(n.a)(this,a);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).runeForges=[],e}return Object(o.a)(a,[{key:"suggestions",value:function(e){var t=this;e(this.showSuggestion).addSuggestion((function(e){var a,n;return e(y.a.createElement("span",null,null===(a=t.activeSuggestion)||void 0===a?void 0:a.suggestion)).icon(l.a.RUNEFORGING.icon).staticImportance((null===(n=t.activeSuggestion)||void 0===n?void 0:n.importance)||c.a.MINOR)}))}},{key:"activeSuggestion",get:function(){var e=this;return this.runeForges.find((function(t,a){return e.selectedCombatant.hasWeaponEnchant(t.forge)&&t.suggestion}))}},{key:"showSuggestion",get:function(){return{actual:Boolean(this.activeSuggestion),isEqual:!0,style:$e.a.BOOLEAN}}}]),a}(f.c)),at=a(896),nt=a(897),it=function(e){Object(i.a)(a,e);var t=Object(s.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return a}(r.a);it.specModules={mitigationCheck:Ie,abilities:d,channeling:b,globalCooldown:O,alwaysBeCasting:R,cooldownThroughputTracker:D,crimsonScourge:F,dancingRuneWeapon:Ne,initialMarrowrendCast:Ce,blooddrinkerTicks:W,checklist:Re,deathStrikeTiming:we,marrowrendUsage:re,boneShield:ie,boneShieldTimesByStacks:ae,deathsCaress:le,bloodplagueUptime:B,runicPowerTracker:ye,runicPowerDetails:ve,runeTracker:Se.a,runeDetails:Pe.a,redThirst:Me,boneStorm:de,markOfBlood:me,hemostasis:Fe,foulBulwark:We,heartbreaker:xe,bloodworms:ze,tombstone:Je,voracious:Ze,rapidDecomposition:Xe,willOfTheNecropolis:Qe,consumption:ge,relishInBlood:et,runeForgeChecker:tt,runeOfTheFallenCrusader:at.a,runeOfHysteria:nt.a};t.default=it},752:function(e,t,a){"use strict";function n(e,t){var a=(e.amount||0)+(e.absorbed||0);return a-a/(1+t)}a.d(t,"a",(function(){return n}))},760:function(e,t,a){"use strict";var n=a(0),i=a.n(n);t.a=function(e){var t=Object.assign({},e);return i.a.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",viewBox:"10 10 80 80",className:"icon"},t),i.a.createElement("path",{d:"M50,86.4865c17.4361,0,31.6216-14.1855,31.6216-31.6216c0-16.6168-12.8865-30.2714-29.1892-31.5189v-4.9677h7.2973v-4.8649  H40.2703v4.8649h7.2973v4.9677c-16.3027,1.2475-29.1892,14.902-29.1892,31.5189C18.3784,72.3009,32.5639,86.4865,50,86.4865z M52.4324,28.2236c3.1101,0.2817,6.0664,1.0982,8.7798,2.356l-8.7798,15.2073V28.2236z M47.5676,28.2236v26.6412 c0,1.1008,0.7393,2.0647,1.8029,2.3497c0.209,0.0561,0.4205,0.0827,0.6295,0.0827c0.8533,0,1.6642-0.4504,2.1065-1.2162 l13.3146-23.0616c6.8507,4.8503,11.3357,12.8315,11.3357,21.8454c0,14.7537-12.0031,26.7567-26.7568,26.7567 s-26.7568-12.003-26.7568-26.7567C23.2432,40.9315,33.9501,29.4573,47.5676,28.2236z"}))}},769:function(e,t,a){"use strict";function n(e,t){var a=e.amount,n=e.absorbed||0,i=e.overheal||0,s=a+n+i,r=s-s/(1+t)-i;return Math.max(0,r)}a.d(t,"a",(function(){return n}))},774:function(e,t,a){"use strict";var n=a(27),i=a(0),s=a.n(i),r=a(4),o=a(53),l=a(58),c=a(750),u=(a(747),function(e){var t=e.talent,a=e.icon,i=e.label,l=Object(n.a)(e,["talent","icon","label"]);return s.a.createElement(c.b,Object.assign({},l,{icon:a||s.a.createElement(o.a,{id:t}),label:i||s.a.createElement(r.a,{id:t,icon:!1})}))});u.defaultProps={category:l.a.TALENTS},t.a=u},831:function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));var n=a(15);function i(e){switch(e.type){case n.b.RemoveBuff:case n.b.RemoveDebuff:return 0;case n.b.ApplyBuff:case n.b.ApplyDebuff:return 1;case n.b.ApplyBuffStack:case n.b.RemoveBuffStack:case n.b.ApplyDebuffStack:case n.b.RemoveDebuffStack:return e.stack}throw new Error("Invalid event type for currentStacks")}},844:function(e,t,a){"use strict";function n(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t/1e3/e+a-1}a.d(t,"a",(function(){return n}))},848:function(e,t,a){"use strict";var n=a(7),i=a(8),s=a(9),r=a(120),o=a(66),l=a(10),c=a(11),u=a(0),d=a.n(u),h=a(88),m=a(3),g=a(33),E=a(747),f=a(746),b=a(754),O=a(767),p=a(753),y=a(773),T=a(15),v=a(43),S=a(13),_=a(808),R=[m.a.RUNE_1,m.a.RUNE_2,m.a.RUNE_3],A=function(e){Object(l.a)(a,e);var t=Object(c.a)(a);function a(){var e;Object(i.a)(this,a);for(var n=arguments.length,s=new Array(n),r=0;r<n;r++)s[r]=arguments[r];(e=t.call.apply(t,[this].concat(s))).runesReady=[],e._fightend=!1,e.resource=h.a.RUNES,e._lastTimestamp=e.owner.fight.start_time,e._runesReadySum=[7];for(var o=0;o<=6;o+=1)e._runesReadySum[o]=0;return e.addEventListener(T.f.fightend,e.onFightend),e.addEventListener(T.f.applybuff.to(v.a).spell(m.a.RUNIC_CORRUPTION),e.onApplybuff),e.addEventListener(T.f.removebuff.to(v.a).spell(m.a.RUNIC_CORRUPTION),e.onRemovebuff),e.addEventListener(T.f.UpdateSpellUsable.spell(R),e.onUpdateSpellUsable),e}return Object(s.a)(a,[{key:"onFightend",value:function(){var e=this.runesAvailable;this._fightend=!0,this.runesReady.push({x:this.owner.fightDuration/1e3,y:e}),this._runesReadySum[e]+=this.owner.fight.end_time-this._lastTimestamp,this.addPassiveRuneRegeneration()}},{key:"onCast",value:function(e){var t=this;e.classResources&&!e.prepull&&(Object(r.a)(Object(o.a)(a.prototype),"onCast",this).call(this,e),e.classResources.filter((function(e){return e.type===t.resource.id})).forEach((function(a){a.amount;var n=a.cost||0;if(e.ability.guid===m.a.OBLITERATE_CAST.id&&t.selectedCombatant.hasBuff(m.a.OBLITERATION_TALENT.id)&&(n-=1),!(n<=0))for(var i=0;i<n;i+=1)t.startCooldown(e)})))}},{key:"onEnergize",value:function(e){if(Object(r.a)(Object(o.a)(a.prototype),"onEnergize",this).call(this,e),e.resourceChangeType===this.resource.id)for(var t=e.resourceChange,n=0;n<t;n+=1)this.addCharge()}},{key:"onApplybuff",value:function(e){var t=this;R.forEach((function(e){t.changeCooldown(e.id,.5)}))}},{key:"onRemovebuff",value:function(e){var t=this;R.forEach((function(e){t.changeCooldown(e.id,2)}))}},{key:"onUpdateSpellUsable",value:function(e){var t=0;if(e.trigger===T.b.EndCooldown||e.trigger===T.b.RestoreCharge)t+=1;else{if(e.trigger!==T.b.BeginCooldown&&e.trigger!==T.b.AddCooldownCharge)return;t-=1}this._runesReadySum[this.runesAvailable-t]+=e.timestamp-this._lastTimestamp,this._lastTimestamp=e.timestamp,this._fightend||(this.runesReady.push({x:this.timeFromStart(e.timestamp),y:this.runesAvailable-t}),this.runesReady.push({x:this.timeFromStart(e.timestamp),y:this.runesAvailable}))}},{key:"addPassiveRuneRegeneration",value:function(){var e=this.runesMaxCasts,t=this.runesWasted,a=this.addPassiveAccelerator(m.a.RUNIC_CORRUPTION.id,e,t,1);e*=1-a,t*=1-a,this.initBuilderAbility(m.a.RUNE_1.id),this.buildersObj[m.a.RUNE_1.id].generated+=Math.round(e),this.buildersObj[m.a.RUNE_1.id].wasted+=Math.round(t)}},{key:"addPassiveAccelerator",value:function(e,t,a,n){var i=this.selectedCombatant.getBuffUptime(e)/this.owner.fightDuration;if(!(i>0))return 0;this.initBuilderAbility(e);var s=i*n/(1+n),r=Math.round(t*s);this.buildersObj[e].generated+=r;var o=Math.round(a*s);return this.buildersObj[e].wasted+=o,s}},{key:"changeCooldown",value:function(e,t){if(this.spellUsable.isOnCooldown(e)){var a=this.spellUsable.cooldownRemaining(e),n=a-a*t;this.spellUsable.reduceCooldown(e,n)}}},{key:"addCharge",value:function(){var e=this.longestCooldown;if(this.spellUsable.isOnCooldown(e)){var t=this.abilities.getExpectedCooldownDuration(e,this.spellUsable.cooldownTriggerEvent(e));this.spellUsable.reduceCooldown(e,t)}}},{key:"startCooldown",value:function(e){var t=this.shortestCooldown;this.spellUsable.beginCooldown(t,e)}},{key:"getCooldown",value:function(e){if(!this.spellUsable.isOnCooldown(e))return null;var t=2-this.spellUsable.chargesAvailable(e),a=this.spellUsable.cooldownRemaining(e);return(t-1)*this.abilities.getExpectedCooldownDuration(e,this.spellUsable.cooldownTriggerEvent(e))+a}},{key:"timeFromStart",value:function(e){return(e-this.owner.fight.start_time)/1e3}},{key:"suggestions",value:function(e){e(this.suggestionThresholds).addSuggestion((function(e,t,a){return e(d.a.createElement(d.a.Fragment,null,"You overcapped ",Object(g.e)(t),"% of your runes. Try to always have at least 3 runes on cooldown.")).icon(m.a.RUNE_1.icon).actual(S.i18n._({id:"deathknight.shared.suggestions.runes.overcapped",defaults:"{0}% runes overcapped",values:{0:Object(g.e)(t)}})).recommended("<".concat(Object(g.e)(a),"% is recommended"))}))}},{key:"statistic",value:function(){var e=this,t=this.timeSpentAtRuneCount;return d.a.createElement(f.a,{position:E.a.CORE(10),size:"flexible",tooltip:d.a.createElement(d.a.Fragment,null,"Number of runes wasted: ",Object(g.d)(this.runesWasted)," ",d.a.createElement("br",null),"These numbers only include runes wasted from passive regeneration. ",d.a.createElement("br",null),"The table below shows the time spent at any given number of runes available."),dropdown:d.a.createElement("table",{className:"table table-condensed"},d.a.createElement("thead",null,d.a.createElement("tr",null,d.a.createElement("th",null,"Runes"),d.a.createElement("th",null,"Time (s)"),d.a.createElement("th",null,"Time (%)"))),d.a.createElement("tbody",null,this._runesReadySum.filter((function(e,t){return t<4})).map((function(a,n){return d.a.createElement("tr",{key:n},d.a.createElement("th",null,n),d.a.createElement("td",null,Object(g.a)(e._runesReadySum[n]/1e3)),d.a.createElement("td",null,Object(g.e)(t[n]),"%"))})),this._runesReadySum.filter((function(e,t){return t>=4})).map((function(a,n){return d.a.createElement("tr",{key:n+4},d.a.createElement("th",{style:{color:"red"}},n+4),d.a.createElement("td",null,Object(g.a)(e._runesReadySum[n+4]/1e3)),d.a.createElement("td",null,Object(g.e)(t[n+4]),"%"))}))))},d.a.createElement(_.a,{resource:h.a.RUNES,value:"".concat(Object(g.e)(1-this.runeEfficiency)," %"),label:"Runes overcapped"}))}},{key:"shortestCooldown",get:function(){var e=this.getCooldown(m.a.RUNE_1.id)||0,t=this.getCooldown(m.a.RUNE_2.id)||0,a=this.getCooldown(m.a.RUNE_3.id)||0;return e<=t&&e<=a?m.a.RUNE_1.id:t<=a?m.a.RUNE_2.id:m.a.RUNE_3.id}},{key:"longestCooldown",get:function(){var e=this.getCooldown(m.a.RUNE_1.id)||0,t=this.getCooldown(m.a.RUNE_2.id)||0,a=this.getCooldown(m.a.RUNE_3.id)||0;return e>=t&&e>=a?m.a.RUNE_1.id:t>=a?m.a.RUNE_2.id:m.a.RUNE_3.id}},{key:"runesAvailable",get:function(){var e=this,t=0;return R.forEach((function(a){t+=e.spellUsable.chargesAvailable(a.id)})),t}},{key:"runeEfficiency",get:function(){var e=this,t=[];return R.forEach((function(a){t.push(e.castEfficiency.getCastEfficiencyForSpellId(a.id).efficiency)})),t.reduce((function(e,t){return e+t}))/t.length}},{key:"runesMaxCasts",get:function(){var e=0;for(var t in this.spendersObj)e+=this.spendersObj[t].spent;return e-6+this.runesReady[this.runesReady.length-1].y}},{key:"runesWasted",get:function(){return this.runesMaxCasts*(1-this.runeEfficiency)}},{key:"timeSpentAtRuneCount",get:function(){var e=this,t=[];return this._runesReadySum.forEach((function(a){t.push(a/e.owner.fightDuration)})),t}},{key:"suggestionThresholds",get:function(){return{actual:1-this.runeEfficiency,isGreaterThan:{minor:.05,average:.1,major:.2},style:"percentage"}}},{key:"suggestionThresholdsEfficiency",get:function(){return{actual:this.runeEfficiency,isLessThan:{minor:.95,average:.9,major:.8},style:"percentage"}}}]),a}(y.a);A.dependencies=Object(n.a)(Object(n.a)({},y.a.dependencies),{},{spellUsable:b.b,castEfficiency:O.a,abilities:p.a}),t.a=A},849:function(e,t,a){"use strict";var n=a(26),i=a(8),s=a(9),r=a(119),o=a(10),l=a(11),c=a(0),u=a.n(c),d=a(43),h=a(3),m=a(53),g=a(33),E=a(4),f=a(756),b=a(54),O=a(750),p=a(766),y=a(826),T=a(15),v=function(e){Object(o.a)(a,e);var t=Object(l.a)(a);function a(){var e;Object(i.a)(this,a);for(var s=arguments.length,o=new Array(s),l=0;l<s;l++)o[l]=arguments[l];if((e=t.call.apply(t,[this].concat(o))).checksPassedMap=new Map,e.checksFailedMap=new Map,e.checksPhysical=[],e.checksMagical=[],e.buffCheckPhysical=[],e.buffCheckMagical=[],e.buffCheckPhysAndMag=[],e.debuffCheckPhysical=[],e.debuffCheckMagical=[],e.debuffCheckPhysAndMag=[],null==e.owner.boss)return e.active=!1,Object(r.a)(e);var c=Object(b.a)(e.owner.boss.id);return c.fight.softMitigationChecks&&c.fight.softMitigationChecks.physical&&c.fight.softMitigationChecks.magical?(e.checksPhysical=c.fight.softMitigationChecks.physical,e.checksMagical=c.fight.softMitigationChecks.magical,void 0!==e.checksPhysical&&void 0!==e.checksMagical||(e.checksPhysical=[],e.checksMagical=[])):(e.checksPhysical=[],e.checksMagical=[],e.buffCheckPhysical=[],e.buffCheckMagical=[],e.buffCheckPhysAndMag=[],e.debuffCheckPhysical=[],e.debuffCheckMagical=[],e.debuffCheckPhysAndMag=[]),[].concat(Object(n.a)(e.checksPhysical),Object(n.a)(e.checksMagical)).forEach((function(t){e.checksPassedMap.set(t,0),e.checksFailedMap.set(t,0)})),e.addEventListener(T.f.damage.to(d.a),e.onDamageTaken),e}return Object(s.a)(a,[{key:"onDamageTaken",value:function(e){var t=this,a=e.ability.guid,i=[],s=[],r=[];if(e.ability.type===y.a.ids.PHYSICAL?(i=this.checksPhysical,s=[].concat(Object(n.a)(this.buffCheckPhysical),Object(n.a)(this.buffCheckPhysAndMag)),r=[].concat(Object(n.a)(this.debuffCheckPhysical),Object(n.a)(this.debuffCheckPhysAndMag))):(i=this.checksMagical,s=[].concat(Object(n.a)(this.buffCheckMagical),Object(n.a)(this.buffCheckPhysAndMag)),r=[].concat(Object(n.a)(this.debuffCheckMagical),Object(n.a)(this.debuffCheckPhysAndMag))),i.includes(a)&&!e.tick)if(s.some((function(e){return t.selectedCombatant.hasBuff(e)}))||e.hitType===p.a.IMMUNE)this.checksPassedMap.set(a,this.checksPassedMap.get(a)+1);else{var o=this.enemies.getEntities()[e.sourceID];o&&r.some((function(t){return o.hasBuff(t,e.timestamp)}))?this.checksPassedMap.set(a,this.checksPassedMap.get(a)+1):this.checksFailedMap.set(a,this.checksFailedMap.get(a)+1)}}},{key:"statistic",value:function(){var e=this,t=Array.from(this.checksFailedMap.values()).reduce((function(e,t){return e+t}),0),a=Array.from(this.checksPassedMap.values()).reduce((function(e,t){return e+t}),0);if(t+a===0)return null;var i,s=[].concat(Object(n.a)(this.buffCheckPhysical),Object(n.a)(this.buffCheckMagical),Object(n.a)(this.buffCheckPhysAndMag));i=s.length>0?s[0]:h.a.SHIELD_BLOCK_BUFF.id;var r=this.physicalChecks.length>0?u.a.createElement(u.a.Fragment,null,u.a.createElement("thead",null,u.a.createElement("tr",null,u.a.createElement("th",null,"Physical"),u.a.createElement("th",null,"Ability"),u.a.createElement("th",null,"Passed"),u.a.createElement("th",null,"Failed"))),u.a.createElement("tbody",null,this.physicalChecks.map((function(t){return u.a.createElement("tr",{key:t},u.a.createElement("td",null),u.a.createElement("th",{scope:"row"},u.a.createElement(E.a,{id:t,style:{height:"2.5em"}})),u.a.createElement("td",null,Object(g.d)(e.checksPassedMap.get(t))),u.a.createElement("td",null,Object(g.d)(e.checksFailedMap.get(t))))})))):null,o={borderTop:"none"},l=this.magicalChecks.length>0?u.a.createElement(u.a.Fragment,null,u.a.createElement("thead",null,u.a.createElement("tr",null,u.a.createElement("th",{style:o},"Magical"),u.a.createElement("th",{style:o},"Ability"),u.a.createElement("th",{style:o},"Passed"),u.a.createElement("th",{style:o},"Failed"))),u.a.createElement("tbody",null,this.magicalChecks.map((function(t){return u.a.createElement("tr",{key:t},u.a.createElement("td",null),u.a.createElement("th",{scope:"row"},u.a.createElement(E.a,{id:t,style:{height:"2.5em"}})),u.a.createElement("td",null,Object(g.d)(e.checksPassedMap.get(t))),u.a.createElement("td",null,Object(g.d)(e.checksFailedMap.get(t))))})))):null;return u.a.createElement(O.b,{icon:u.a.createElement(m.a,{id:i}),value:"".concat(Object(g.e)(a/(a+t))," %"),label:"Soft mitigation checks passed.",tooltip:u.a.createElement(u.a.Fragment,null,"Checks if one of the following buffs or debuffs were up during the mechanic:",u.a.createElement("ul",null,this.tooltip))},u.a.createElement("table",{className:"table table-condensed",style:{fontWeight:"bold"}},r,l))}},{key:"tooltip",get:function(){return[].concat(Object(n.a)(this.buffCheckPhysical),Object(n.a)(this.buffCheckMagical),Object(n.a)(this.buffCheckPhysAndMag),Object(n.a)(this.debuffCheckPhysical),Object(n.a)(this.debuffCheckMagical),Object(n.a)(this.debuffCheckPhysAndMag)).map((function(e){return u.a.createElement("li",{key:e},h.a[e].name)}))}},{key:"physicalChecks",get:function(){var e=this;return this.checksPhysical.filter((function(t){return e.checksPassedMap.get(t)+e.checksFailedMap.get(t)>0}))}},{key:"magicalChecks",get:function(){var e=this;return this.checksMagical.filter((function(t){return e.checksPassedMap.get(t)+e.checksFailedMap.get(t)>0}))}}]),a}(d.c);v.dependencies={enemies:f.a},t.a=v},896:function(e,t,a){"use strict";var n=a(8),i=a(9),s=a(119),r=a(10),o=a(11),l=a(0),c=a.n(l),u=a(3),d=a(43),h=a(15),m=a(747),g=a(746),E=a(748),f=a(33),b=function(e){Object(r.a)(a,e);var t=Object(o.a)(a);function a(e){var i;Object(n.a)(this,a),(i=t.call(this,e)).healing=0,i.overhealing=0;var r=i.selectedCombatant.hasWeaponEnchant(u.a.RUNE_OF_THE_FALLEN_CRUSADER);return i.active=r,r?(i.addEventListener(h.f.heal.to(d.a).spell(u.a.UNHOLY_STRENGTH_BUFF),i._onHeal),i):Object(s.a)(i)}return Object(i.a)(a,[{key:"_onHeal",value:function(e){e.overheal&&(this.overhealing+=e.overheal),this.healing+=e.amount+e.absorb}},{key:"statistic",value:function(){return c.a.createElement(g.a,{position:m.a.OPTIONAL(2),size:"flexible",tooltip:c.a.createElement(c.a.Fragment,null,c.a.createElement("strong",null,"Uptime: ")," ",Object(f.e)(this.uptime),"% ",c.a.createElement("br",null),c.a.createElement("strong",null,"Healing: ")," ",Object(f.d)(this.healing)," ",c.a.createElement("br",null),c.a.createElement("strong",null,"Overhealing: ")," ",Object(f.d)(this.overhealing)," (",Object(f.e)(this.overhealPercentage)," %) ",c.a.createElement("br",null))},c.a.createElement(E.a,{spell:u.a.RUNE_OF_THE_FALLEN_CRUSADER},c.a.createElement(c.a.Fragment,null,Object(f.e)(this.averageStrength)," % ",c.a.createElement("small",null,"average Strength"))))}},{key:"overhealPercentage",get:function(){return this.overhealing/this.healing}},{key:"uptime",get:function(){return this.selectedCombatant.getBuffUptime(u.a.UNHOLY_STRENGTH_BUFF.id)/this.owner.fightDuration}},{key:"averageStrength",get:function(){return.15*this.uptime}}]),a}(d.c);t.a=b},897:function(e,t,a){"use strict";var n=a(8),i=a(9),s=a(119),r=a(10),o=a(11),l=a(0),c=a.n(l),u=a(3),d=a(43),h=a(15),m=a(747),g=a(746),E=a(748),f=a(33),b=a(88),O=a(164),p=a(13),y=a(5),T=function(e){Object(r.a)(a,e);var t=Object(o.a)(a);function a(e){var i;Object(n.a)(this,a),(i=t.call(this,e)).runicPowerGained=0,i.runicPowerWasted=0;var r=i.selectedCombatant.hasWeaponEnchant(u.a.RUNE_OF_HYSTERIA);return i.active=r,r?(i.addEventListener(h.f.energize,i._onEnergize),i):Object(s.a)(i)}return Object(i.a)(a,[{key:"_onEnergize",value:function(e){this.selectedCombatant.hasBuff(u.a.RUNE_OF_HYSTERIA_BUFF.id,e.timestamp)&&e.resourceChangeType===b.a.RUNIC_POWER.id&&(this.runicPowerGained+=e.resourceChange,this.runicPowerWasted+=e.waste)}},{key:"suggestions",value:function(e){var t=this;e(this.efficiencySuggestionThresholds).addSuggestion((function(e,a,n){return e(c.a.createElement("span",null,"Avoid being Runic Power capped at all times, you wasted ",t.runicPowerWastedDuringHysteria," PR of ",u.a.RUNE_OF_HYSTERIA.name," by being RP capped.")).icon(u.a.RUNE_OF_HYSTERIA.icon).actual(p.i18n._({id:"deathknight.suggestions.hysteria.efficiency",defaults:"You wasted {0}% of RP from {1} by being RP capped.",values:{0:Object(f.e)(a),1:u.a.RUNE_OF_HYSTERIA.name}})).recommended("".concat(Object(f.e)(n),"% is recommended"))}))}},{key:"statistic",value:function(){var e=c.a.createElement(c.a.Fragment,null),t=c.a.createElement(c.a.Fragment,null);return this.selectedCombatant.spec===y.a.BLOOD_DEATH_KNIGHT&&(e=c.a.createElement(c.a.Fragment,null,", resulting in ",this.gainedDeathStrikes," additional ",u.a.DEATH_STRIKE.name),t=c.a.createElement(c.a.Fragment,null,", losing out on ",this.wastedDeathStrikes," ",u.a.DEATH_STRIKE.name)),c.a.createElement(g.a,{position:m.a.OPTIONAL(2),size:"flexible",tooltip:c.a.createElement(c.a.Fragment,null,"You gained ",Math.floor(this.runicPowerGainedByHysteria)," RP by using ",u.a.RUNE_OF_HYSTERIA.name,e,".",c.a.createElement("br",null),this.runicPowerWastedDuringHysteria>1&&c.a.createElement(c.a.Fragment,null,"You wasted ",this.runicPowerWastedDuringHysteria," RP (",Object(f.e)(this.wastedPercentage)," %) from Hysteria by being RP capped",t,"."))},c.a.createElement(E.a,{spell:u.a.RUNE_OF_HYSTERIA},c.a.createElement(c.a.Fragment,null,Math.floor(this.runicPowerGainedByHysteria)," ",c.a.createElement("small",null,"RP gained"))))}},{key:"runicPowerGainedByHysteria",get:function(){return.2*this.runicPowerGained}},{key:"runicPowerWastedDuringHysteria",get:function(){return.2*this.runicPowerWasted}},{key:"potentialRunicPowerGainedByHysteria",get:function(){return this.runicPowerGainedByHysteria+this.runicPowerWastedDuringHysteria}},{key:"wastedPercentage",get:function(){return this.runicPowerWastedDuringHysteria/this.runicPowerGainedByHysteria}},{key:"potentiallyGainedDeathStrikes",get:function(){return Math.floor(this.potentialRunicPowerGainedByHysteria/45)}},{key:"gainedDeathStrikes",get:function(){return Math.floor(this.runicPowerGainedByHysteria/45)}},{key:"wastedDeathStrikes",get:function(){return this.potentiallyGainedDeathStrikes-this.gainedDeathStrikes}},{key:"efficiencySuggestionThresholds",get:function(){return{actual:this.wastedPercentage,isGreaterThan:{minor:0,average:.2,major:.4},style:O.a.PERCENTAGE}}}]),a}(d.c);t.a=T},921:function(e,t,a){"use strict";var n=a(8),i=a(9),s=a(10),r=a(11),o=a(0),l=a.n(o),c=a(788),u=a(43),d=a(49),h=a(779),m=a(37),g=a.n(m),E=a(53),f=a(4),b=a(33),O=a(3),p=a(22),y=function(e){Object(s.a)(a,e);var t=Object(r.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(i.a)(a,[{key:"render",value:function(){var e=this.props,t=e.tracker,a=e.showSpenders,n=t.resource.name,i=this.prepareGenerated(t.buildersObj),s=this.prepareSpent(t.spendersObj),r=t.generated,o=t.wasted,c=t.spent,u=t.spendersCasts;return r=0===r?1:r,o=0===o?1:o,c=0===c?1:c,u=0===u?1:u,l.a.createElement("div",null,l.a.createElement("table",{className:"data-table"},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Ability"),l.a.createElement("th",{colSpan:"2"},l.a.createElement(p.a,{content:"Runes generated from passive regeneration and abilities that accelerate it are estimates."},n," generated")),l.a.createElement("th",{colSpan:"2"},l.a.createElement(p.a,{content:"This is the amount of resources that were generated while you were already at cap."},n," wasted")))),l.a.createElement("tbody",null,i&&i.filter((function(e){return e.abilityId===O.a.RUNE_1.id})).map((function(e){return l.a.createElement("tr",{key:e.abilityId},l.a.createElement("td",{style:{width:"30%"}},l.a.createElement(E.a,{id:e.abilityId,noLink:!0})," ","Passive Rune regeneration"),l.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},l.a.createElement(p.a,{content:"".concat(Object(b.e)(e.generated/r)," %")},e.generated)),l.a.createElement("td",{style:{width:"40%"}},l.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.generated/r*100,"%")}})),l.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},l.a.createElement(p.a,{content:"".concat(Object(b.e)(e.wasted/o)," %")},e.wasted)),l.a.createElement("td",{style:{width:"30%"}},l.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.wasted/o*100,"%")}})))})),i&&i.filter((function(e){return e.abilityId!==O.a.RUNE_1.id})).map((function(e){return l.a.createElement("tr",{key:e.abilityId},l.a.createElement("td",{style:{width:"30%"}},l.a.createElement(f.a,{id:e.abilityId})),l.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},l.a.createElement(p.a,{content:"".concat(Object(b.e)(e.generated/r)," %")},e.generated)),l.a.createElement("td",{style:{width:"40%"}},l.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.generated/r*100,"%")}})),l.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},l.a.createElement(p.a,{content:"".concat(Object(b.e)(e.wasted/o)," %")},e.wasted)),l.a.createElement("td",{style:{width:"30%"}},l.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.wasted/o*100,"%")}})))})))),a&&l.a.createElement("table",{className:"data-table"},l.a.createElement("thead",null,l.a.createElement("tr",null,l.a.createElement("th",null,"Ability"),l.a.createElement("th",{colSpan:"2"},n," spent"),l.a.createElement("th",{colSpan:"2"},"Casts"))),l.a.createElement("tbody",null,s&&s.map((function(e){return l.a.createElement("tr",{key:e.abilityId},l.a.createElement("td",{style:{width:"30%"}},l.a.createElement(f.a,{id:e.abilityId})),l.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},l.a.createElement(p.a,{content:"".concat(Object(b.e)(e.spent/c)," %")},e.spent)),l.a.createElement("td",{style:{width:"40%"}},l.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.spent/c*100,"%")}})),l.a.createElement("td",{style:{width:50,paddingRight:5,textAlign:"center"}},l.a.createElement(p.a,{content:"".concat(Object(b.e)(e.casts/u)," %")},e.casts)),l.a.createElement("td",{style:{width:"30%"}},l.a.createElement("div",{className:"performance-bar",style:{width:"".concat(e.casts/u*100,"%")}})))})))))}}]),a}(a(781).a);y.propTypes={tracker:g.a.object.isRequired,showSpenders:g.a.bool};var T=y,v=a(848),S=function(e){Object(s.a)(a,e);var t=Object(r.a)(a);function a(){return Object(n.a)(this,a),t.apply(this,arguments)}return Object(i.a)(a,[{key:"tab",value:function(){var e=this,t=this.runeTracker.runesReady,a={data:{name:"runes"},mark:{type:"line",color:"rgb(196, 31, 59)"},encoding:{x:{field:"x",type:"quantitative",axis:{labelExpr:Object(h.c)("datum.value * 1000"),grid:!1},title:null},y:{field:"y",type:"quantitative",title:"# of Runes",axis:{grid:!1,tickMinStep:1}}}};return{title:"Rune usage",url:"rune-usage",render:function(){return l.a.createElement(d.a,null,l.a.createElement(c.a,{disableHeight:!0},(function(e){var n=e.width;return l.a.createElement(h.a,{width:n,height:400,spec:a,data:{runes:t}})})),l.a.createElement(T,{tracker:e.runeTracker,showSpenders:!0}))}}}}]),a}(u.c);S.dependencies={runeTracker:v.a};t.a=S},966:function(e,t,a){"use strict";var n=a(8),i=a(9),s=a(10),r=a(11),o=a(43),l=a(53),c=a(844),u=a(753),d=a(4),h=a(750),m=a(33),g=a(15),E=a(164),f=a(0),b=a.n(f),O=a(13),p=function(e){Object(s.a)(a,e);var t=Object(r.a)(a);function a(e){var i;return Object(n.a)(this,a),(i=t.call(this,e)).abilities=void 0,i.ability=void 0,i.bonusDmg=0,i.casts=[],i.addEventListener(g.f.cast.by(o.a),i.onCast),i.addEventListener(g.f.damage.by(o.a),i.onDamage),i}return Object(i.a)(a,[{key:"onCast",value:function(e){e.ability.guid===this.ability.id&&this.casts.push({timestamp:e.timestamp,hits:0})}},{key:"onDamage",value:function(e){e.ability.guid===this.ability.id&&(this.bonusDmg+=e.amount+(e.absorbed||0),this.casts[this.casts.length-1].hits+=1)}},{key:"suggestions",value:function(e){var t=this;e(this.hitSuggestionThreshold).addSuggestion((function(e){return e(b.a.createElement(b.a.Fragment,null,"It's benefitial to delay ",b.a.createElement(d.a,{id:t.ability.id})," to hit multiple targets, but don't delay it too long or you'll miss out on casts and possible hits.")).icon(t.ability.icon).actual(O.i18n._({id:"shared.suggestions.aoeSpells.efficiency",defaults:"{0} total hits",values:{0:t.totalHits}})).recommended("".concat(t.possibleHits," or more hits were possible"))}))}},{key:"statistic",value:function(){return b.a.createElement(h.b,{position:h.a.CORE(5),icon:b.a.createElement(l.a,{id:this.ability.id}),value:"".concat(Object(m.d)(this.bonusDmg/this.owner.fightDuration*1e3)," DPS"),label:"Damage contributed",tooltip:"".concat(this.ability.name," added a total of ").concat(Object(m.d)(this.bonusDmg)," damage (").concat(Object(m.e)(this.owner.getPercentageOfTotalDamageDone(this.bonusDmg)),"%).")})}},{key:"maxCasts",get:function(){var e,t,a=null!==(e=null===(t=this.abilities.getAbility(this.ability.id))||void 0===t?void 0:t.cooldown)&&void 0!==e?e:1/0;return Math.ceil(Object(c.a)(a,this.owner.fightDuration))}},{key:"possibleHits",get:function(){var e,t=this,a=null===(e=this.abilities.getAbility(this.ability.id))||void 0===e?void 0:e.cooldown;if(void 0===a)return 0;var n=1e3*a,i=null,s=0,r=0;return this.casts.forEach((function(e){i?r+=e.timestamp-i-n:r=e.timestamp-t.owner.fight.start_time,i=e.timestamp,s+=Math.floor(r/n),r%=n,e.hits>1&&(r=0)})),r+=this.owner.currentTimestamp-(i||0),s+=Math.floor(r/n),r%=n,Math.max(this.totalHits+s,this.maxCasts)}},{key:"totalHits",get:function(){return this.casts.reduce((function(e,t){return e+t.hits}),0)}},{key:"hitSuggestionThreshold",get:function(){return{actual:this.totalHits/this.possibleHits,isLessThan:{minor:.95,average:.9,major:.8},style:E.a.PERCENTAGE}}}]),a}(o.c);p.dependencies={abilities:u.a},t.a=p},967:function(e,t,a){"use strict";var n=a(7),i=a(8),s=a(9),r=a(10),o=a(11),l=a(0),c=a.n(l),u=a(788),d=a(43),h=a(49),m=a(3),g=a(4),E=a(779),f=a(15),b=function(e){Object(r.a)(a,e);var t=Object(o.a)(a);function a(e){var n;return Object(i.a)(this,a),(n=t.call(this,e))._hpEvents=[],n._deathEvents=[],n._selfhealTimestamps=[],n.selfHealSpell=m.a.HEALTHSTONE,n.tabTitle="Selheal Timing",n.tabURL="selfheal-timings",n.addEventListener(f.f.death.to(d.a),n.onDeath),n.addEventListener(f.f.damage.to(d.a),n.onDamageTaken),n.addEventListener(f.f.heal.to(d.a),n.onHealTaken),n}return Object(s.a)(a,[{key:"onDeath",value:function(e){this._deathEvents.push(e)}},{key:"onDamageTaken",value:function(e){this._hpEvents.push(e)}},{key:"onHealTaken",value:function(e){this._hpEvents.push(e),e.ability.guid===this.selfHealSpell.id&&e.sourceID===e.targetID&&this._selfhealTimestamps.push(e)}},{key:"tab",value:function(){var e=this;return{title:this.tabTitle,url:this.tabURL,render:function(){return c.a.createElement(h.a,{title:e.tabTitle,explanation:c.a.createElement(c.a.Fragment,null,"This plot shows you your ",c.a.createElement(g.a,{id:e.selfHealSpell.id})," casts relative to your Health Points to help you improve your ",c.a.createElement(g.a,{id:e.selfHealSpell.id})," timings.",c.a.createElement("br",null),"Improving those timings by selfhealing at low health and the correct time will remove a lot of pressure from your healers.")},e.plot)}}}},{key:"plot",get:function(){var e=this,t=this._deathEvents.map((function(t){var a=t.timestamp,n=t.ability,i=e._hpEvents.findIndex((function(e){return e.timestamp>=a-200}));if(-1!==i&&0!==i){var s=e._hpEvents[i-1],r=s.hitPoints/s.maxHitPoints||0,o=Math.min(Math.round(100*r),100);return{x:a-e.owner.fight.start_time,percentage:o,ability:n}}e.log("Didn't find last HP event before death")})),a=this._hpEvents.filter((function(e){return void 0!==e.hitPoints&&void 0!==e.maxHitPoints})).map((function(t){var a=t.timestamp,n=t.hitPoints/t.maxHitPoints||0;return{x:a-e.owner.fight.start_time,y:Math.min(Math.round(100*n),100)}})),i=this._selfhealTimestamps.map((function(t){var a=t.hitPoints-(t.amount||0)+(t.absorbed||0)+(t.absorb||0),n=a/t.maxHitPoints||0,i=Math.min(Math.round(100*n),100);return{x:t.timestamp-e.owner.fight.start_time,y:i,ability:t.ability,amount:t.amount||0,overheal:t.overheal||0,hitPoints:a}})),s={x:{field:"x",type:"quantitative",axis:{labelExpr:Object(E.c)("datum.value"),grid:!1},title:null,scale:{zero:!0,nice:!1}},y:{field:"y",type:"quantitative",title:null,axis:{grid:!1}}},r={layer:[{data:{name:"hp"},mark:{type:"area",line:{interpolate:"linear",color:"#fab700",strokeWidth:1},color:"rgba(250, 183, 0, 0.15)"},encoding:s},{data:{name:"casts"},mark:{type:"point",size:60,color:"white",filled:!0},encoding:Object(n.a)(Object(n.a)({},s),{},{tooltip:[{field:"ability.name",type:"nominal",title:"Ability"},{field:"hitPoints",type:"quantitative",title:"Hit Points",format:".3~s"},{field:"amount",type:"quantitative",title:"Healing",format:".3~s"},{field:"overheal",type:"quantitative",title:"Overhealing",format:".3~s"}]})},{data:{name:"deaths"},mark:{type:"rule",color:"red",strokeWidth:2},encoding:{x:s.x,tooltip:[{field:"ability.name",type:"nominal",title:"Killing Ability"},{field:"percentage",type:"quantitative",title:"HP % When Hit"}]}}]},o={hp:[{x:0,y:100}].concat(a),casts:i,deaths:t};return c.a.createElement("div",{className:"graph-container",style:{width:"100%",minHeight:200}},c.a.createElement(u.a,null,(function(e){var t=e.width,a=e.height;return c.a.createElement(E.a,{width:t,height:a,spec:r,data:o})})))}}]),a}(d.c);t.a=b}}]);
//# sourceMappingURL=BloodDeathKnight.f8d25810.chunk.js.map