{"version":3,"sources":["interface/icons/Cooldown.js","parser/shared/modules/features/Checklist/helpers/calculateMedian.js","parser/shared/modules/features/Checklist/helpers/average.js","parser/shared/modules/features/Checklist/helpers/harmonic.js","parser/shared/modules/features/Checklist/Rule.tsx","parser/shared/modules/features/Checklist/Requirement.tsx","parser/shared/modules/features/Checklist/helpers/performanceForThresholds.js","parser/shared/modules/features/Checklist/index.js","parser/shared/modules/features/Checklist/PreparationRule.js","parser/shared/modules/features/Checklist/GenericCastEfficiencyRequirement.js","parser/shared/modules/CooldownThroughputTracker.tsx","interface/others/Cooldown.js","interface/others/CooldownOverview.js","common/colorForPerformance.ts","interface/icons/Dropdown.js","interface/common/Expandable.tsx"],"names":["Icon","other","xmlns","viewBox","className","d","calculateMedian","values","arr","sort","a","b","half","Math","floor","length","average","reduce","c","p","harmonic","cum","val","PERFORMANCE_METHOD","RuleContext","React","createContext","value","Rule","props","useState","requirementPerformances","performance","passed","expanded","state","setState","calculateRulePerformance","useCallback","style","DEFAULT","min","MEDIAN","AVERAGE","LOWEST","FIRST","HARMONIC","Error","name","requirements","children","description","Array","isArray","some","child","isValidElement","Provider","prevState","performanceMethod","element","inverseExpanded","header","width","backgroundColor","colorForPerformance","Dropdown","Information","Requirement","setPerformance","thresholds","ThresholdStyle","PERCENTAGE","formatPercentage","actual","NUMBER","formatNumber","THOUSANDS","formatThousands","DECIMAL","toFixed","BOOLEAN","id","SECONDS","this","tooltip","valueTooltip","prefix","suffix","max","undefined","thresholdsN","formatThresholdsActual","marginLeft","Tooltip","content","minWidth","marginRight","transition","isGreaterThan","minor","major","performanceForGreaterThanThresholds","isLessThan","performanceForLessThanThresholds","isEqual","performanceForThresholds","PureComponent","Consumer","Checklist","href","PreparationRule","potionsUsed","bestPotionUsed","itemsEnchanted","itemsBestEnchanted","weaponsEnhanced","bestWeaponEnhancements","higherFlaskPresent","flaskPresent","higherFoodPresent","foodPresent","renderEnchantRequirements","renderWeaponEnhancementRequirements","renderPotionRequirements","renderFlaskRequirements","renderFoodRequirements","GenericCastEfficiencyRequirement","spell","others","castEfficiency","captureException","isMaxCasts","casts","maxCasts","efficiency","gotMaxCasts","recommendedEfficiency","averageIssueEfficiency","majorIssueEfficiency","BUILT_IN_SUMMARY_TYPES","Cooldown","showCastEvents","showAllEvents","handleExpandClick","bind","handleShowHealsClick","events","lastHeal","results","event","type","EventType","Cast","push","Heal","spellId","ability","guid","count","amount","absorbed","overheal","heal","cooldown","healingDone","overhealingDone","filter","Absorbed","forEach","damageDone","acc","Damage","fightStart","fightEnd","healingStatistics","start","end","SpellLink","icon","alt","marginTop","fontSize","marginBottom","formatDuration","onClick","applyTimeFilter","map","i","key","timestamp","abilityIcon","height","padding","groupHeals","summary","item","HEALING","calculateHealingStatistics","OVERHEALING","ABSORBED","total","ABSORBS_APPLIED","ApplyBuff","absorb","MANA","manaUsed","SPELLS","INNERVATE","rawResourceCost","RESOURCE_TYPES","resourceCost","render","DAMAGE","damageStatistics","calculateDamageStatistics","label","Component","CooldownOverview","cooldowns","CooldownThroughputTracker","options","eventHistory","pastCooldowns","activeCooldowns","addEventListener","Events","fightend","onFightend","cast","by","SELECTED_PLAYER","onCast","onHeal","onAbsorb","damage","onDamage","SELECTED_PLAYER_PET","onPetDamage","applybuff","onApplyBuff","to","onApplyBuffToPlayer","removebuff","onRemoveBuff","applydebuff","onApplyDebuff","removedebuff","onRemoveDebuff","summon","onSummon","death","onPetDeath","cooldownSpell","isCastCooldown","ctor","constructor","castCooldowns","find","cooldownSpells","addCooldown","startBufferMS","startBufferEvents","startBufferFilter","last","duration","index","findIndex","splice","owner","fight","end_time","ignoredSpells","includes","startCooldown","trackEvent","endCooldown","petID","targetID","title","i18n","_","CooldownIcon","url","Panel","explanation","pad","start_time","offset_time","Analyzer","dependencies","EventHistory","CASTS_THAT_ARENT_CASTS","Expandable","setExpanded","Element","prevExpanded","ControlledExpandable"],"mappings":"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","file":"static/js/2.34a376e2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// https://thenounproject.com/search/?q=Lightning%20Bolt&i=1188000\r\n// Lightning by Mooms from the Noun Project\r\nconst Icon = ({ ...other }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\" className=\"stroke icon\" {...other}>\r\n    <path d=\"M32,0C14.355,0,0,14.355,0,32c0,17.6445,14.355,32,32,32c17.6445,0,32-14.3555,32-32C64,14.355,49.6445,0,32,0z M32,62   C15.458,62,2,48.542,2,32S15.458,2,32,2s30,13.458,30,30S48.542,62,32,62z\" />\r\n    <path d=\"M46.2412,26.3555H36.292l4.1357-15.9072c0.1182-0.4541-0.0957-0.9297-0.5146-1.1426   c-0.415-0.2134-0.9277-0.1069-1.2266,0.2568L16.9858,36.0098c-0.2456,0.2998-0.2964,0.7129-0.1309,1.0625   c0.165,0.3496,0.5171,0.5723,0.9038,0.5723h9.9492l-4.1353,15.9062c-0.1182,0.4551,0.0957,0.9307,0.5142,1.1436   c0.1445,0.0732,0.2993,0.1084,0.4531,0.1084c0.292,0,0.5786-0.1279,0.7734-0.3652l21.7012-26.4478   c0.2451-0.2988,0.2959-0.7124,0.1309-1.062C46.9795,26.5781,46.6279,26.3555,46.2412,26.3555z M26.6528,49.6523l3.3159-12.7559   c0.0781-0.2998,0.0127-0.6191-0.1768-0.8633c-0.1895-0.2451-0.4814-0.3887-0.791-0.3887H19.873l17.4746-21.2969L34.0312,27.104   c-0.0781,0.2993-0.0127,0.6182,0.1768,0.8633c0.1895,0.2446,0.4814,0.3882,0.791,0.3882h9.1279L26.6528,49.6523z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Icon;\r\n","export default function calculateMedian(values) {\r\n  const arr = [...values];\r\n  arr.sort((a, b) => a - b);\r\n\r\n  const half = Math.floor(arr.length / 2);\r\n\r\n  if (arr.length % 2) {\r\n    return arr[half];\r\n  } else {\r\n    return (arr[half - 1] + arr[half]) / 2.0;\r\n  }\r\n}\r\n","export default function average(values) {\r\n  return values.reduce((c, p) => c + p, 0) / values.length;\r\n}\r\n","export default function harmonic(values) {\r\n  return values.length / values.reduce((cum, val) => cum + 1/val, 0);\r\n}\r\n","import React, {useCallback, useState} from 'react';\r\n\r\nimport DropdownIcon from 'interface/icons/Dropdown';\r\nimport InformationIcon from 'interface/icons/Information';\r\nimport { ControlledExpandable } from 'interface/common/Expandable';\r\nimport colorForPerformance from 'common/colorForPerformance';\r\n\r\nimport calculateMedian from './helpers/calculateMedian';\r\nimport average from './helpers/average';\r\nimport harmonic from './helpers/harmonic';\r\n\r\nexport const RuleContext = React.createContext((value: number) => {/**/});\r\n\r\n\r\nexport enum PERFORMANCE_METHOD {\r\n  DEFAULT = 'DEFAULT',\r\n  MEDIAN = 'MEDIAN',\r\n  AVERAGE = 'AVERAGE',\r\n  LOWEST = 'LOWEST',\r\n  FIRST = 'FIRST',\r\n  HARMONIC = 'HARMONIC',\r\n};\r\n\r\ninterface Props {\r\n  name: React.ReactNode;\r\n  children: React.ReactNode;\r\n  description?: React.ReactNode;\r\n  performanceMethod?: PERFORMANCE_METHOD;\r\n}\r\n\r\ninterface State {\r\n  requirementPerformances: number[],\r\n  performance: number;\r\n  passed: boolean;\r\n  expanded: boolean;\r\n}\r\n\r\nconst Rule = (props: Props) => {\r\n\r\n  const [state, setState] = useState<State>({requirementPerformances: [], performance: 1, passed: true, expanded: false});\r\n\r\n\r\n  const calculateRulePerformance = useCallback((values: number[], style = PERFORMANCE_METHOD.DEFAULT) => {\r\n    // Lowest would generally be too punishing for small mistakes, if you want to have a single value tank the rule consider making it its own rule.\r\n    // Average would mark things as OK when one thing was OK and 3 things were \"average\", I think this is wrong and it should mark the rule as average. Median achieves this.\r\n    // Actual Median could mark a rule as 100% ok when there are still some things being neglected, so instead I opted for the best of both worlds and using the lowest of the median or average by default.\r\n\r\n    switch (style) {\r\n      case PERFORMANCE_METHOD.DEFAULT:\r\n        return Math.min(calculateMedian(values), average(values));\r\n      case PERFORMANCE_METHOD.MEDIAN:\r\n        return calculateMedian(values);\r\n      case PERFORMANCE_METHOD.AVERAGE:\r\n        return average(values);\r\n      case PERFORMANCE_METHOD.LOWEST:\r\n        return Math.min(...values);\r\n      case PERFORMANCE_METHOD.FIRST:\r\n        return values[0];\r\n      case PERFORMANCE_METHOD.HARMONIC:\r\n        return harmonic(values);\r\n      default:\r\n        throw new Error(`Unknown style: ${style}`);\r\n    }\r\n  }, [])\r\n\r\n \r\n\r\n  const checkEmptyRule = (child: React.ReactNode) => {\r\n    if (React.isValidElement(child) && child?.props) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const setRequirementPerformance = (p: number) => {\r\n    // We don't have to worry about adding the same Requirement's performance multiple times here because it's only called in the Requirement's constructor, which is only called once.\r\n    setState((prevState: State) => {\r\n      const requirementPerformances: State['requirementPerformances'] = [...prevState.requirementPerformances, p];\r\n      const performance = requirementPerformances.length > 0 ? calculateRulePerformance(requirementPerformances, props.performanceMethod) : 1\r\n      const passed = performance > 0.666;\r\n      const expanded = !passed;\r\n      return {requirementPerformances, performance: performance, passed, expanded}\r\n    })\r\n  }\r\n\r\n  const { name, children: requirements, description } = props;\r\n\r\n  if (!requirements || (Array.isArray(requirements) && !requirements.some(checkEmptyRule))) {\r\n    return null;\r\n  }\r\n\r\n  const inverseExpanded = () => {\r\n    setState(prevState => ({...prevState, expanded: !prevState.expanded}))\r\n  }\r\n\r\n  return (\r\n    <RuleContext.Provider value={setRequirementPerformance}>\r\n      <ControlledExpandable\r\n        element=\"li\"\r\n        className={state.passed ? 'passed' : 'failed'}\r\n        inverseExpanded={inverseExpanded}\r\n        expanded={state.expanded}\r\n        header={(\r\n          <div className=\"flex wrapable\">\r\n            <div className=\"flex-main name\">\r\n              {name}\r\n            </div>\r\n            <div className=\"flex-sub perf\">\r\n              <div className=\"perf-container\">\r\n                <div\r\n                  className=\"perf-bar\"\r\n                  style={{\r\n                    width: `${state.performance * 100}%`,\r\n                    backgroundColor: colorForPerformance(state.performance),\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-sub chevron\">\r\n              <div>\r\n                <DropdownIcon />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      >\r\n        {description && (\r\n          <div className=\"row text-muted description\">\r\n            <InformationIcon />\r\n            <div className=\"col-md-12\">\r\n              {description}\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"row\">\r\n          {requirements}\r\n        </div>\r\n      </ControlledExpandable>\r\n    </RuleContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Rule;\r\n","import React from 'react';\r\n\r\nimport InformationIcon from 'interface/icons/Information';\r\nimport { formatNumber, formatPercentage, formatThousands } from 'common/format';\r\nimport Tooltip, { TooltipElement } from 'common/Tooltip';\r\nimport colorForPerformance from 'common/colorForPerformance';\r\nimport { BoolThreshold, NumberThreshold, Threshold, ThresholdStyle } from 'parser/core/ParseResults';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport performanceForThresholds from './helpers/performanceForThresholds';\r\nimport { RuleContext } from './Rule';\r\n\r\n\r\nexport type RequirementThresholds = NumberThreshold | BoolThreshold;\r\n\r\ninterface Props {\r\n  name: React.ReactNode,\r\n  thresholds: RequirementThresholds,\r\n  tooltip?: React.ReactNode,\r\n  valueTooltip?: React.ReactNode,\r\n  setPerformance: (performance: number) => void,\r\n  prefix?: React.ReactNode,\r\n  suffix?: React.ReactNode,\r\n}\r\nclass Requirement extends React.PureComponent<Props> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    props.setPerformance(this.performance);\r\n  }\r\n\r\n  get performance() {\r\n    return performanceForThresholds(this.props.thresholds);\r\n  }\r\n\r\n  formatThresholdsActual(thresholds: Threshold<any>) {\r\n    switch (thresholds.style) {\r\n      case ThresholdStyle.PERCENTAGE:\r\n        return `${formatPercentage(thresholds.actual)}%`;\r\n      case ThresholdStyle.NUMBER:\r\n        return `${formatNumber(thresholds.actual)}`;\r\n      case ThresholdStyle.THOUSANDS:\r\n        return `${formatThousands(thresholds.actual)}`;\r\n      case ThresholdStyle.DECIMAL:\r\n        return `${thresholds.actual.toFixed(2)}`;\r\n      case ThresholdStyle.BOOLEAN:\r\n        return thresholds.actual ? <Trans id=\"common.yes\">Yes</Trans> : <Trans id=\"common.no\">No</Trans>;\r\n      case ThresholdStyle.SECONDS:\r\n        return `${thresholds.actual.toFixed(2)}s`;\r\n      default:\r\n        throw new Error(`Unknown style: ${thresholds.style}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, thresholds, tooltip, valueTooltip, prefix, suffix } = this.props;\r\n\r\n    const performance = this.performance;\r\n    let max = undefined;\r\n    const thresholdsN = thresholds as NumberThreshold;\r\n    if(thresholdsN.max !== undefined) {\r\n      max = `/ ${thresholdsN.max}`;\r\n    }\r\n    const actual = (\r\n      <>\r\n        {prefix} {this.formatThresholdsActual(thresholds)} {max} {suffix}\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <div className=\"col-md-6\">\r\n        <div className=\"flex\">\r\n          <div className=\"flex-main\">\r\n            {name}\r\n          </div>\r\n          {tooltip && (\r\n            <div\r\n              className=\"flex-sub\"\r\n              style={{ marginLeft: 10 }}\r\n            >\r\n              <Tooltip content={tooltip}>\r\n                <div>\r\n                  <InformationIcon />\r\n                </div>\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n          <div className=\"flex-sub content-middle text-muted\" style={{ minWidth: 55, marginLeft: 5, marginRight: 10 }}>\r\n            <div className=\"text-right\" style={{ width: '100%' }}>\r\n              {valueTooltip ? <TooltipElement content={valueTooltip}>{actual}</TooltipElement> : actual}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex-sub content-middle\" style={{ width: 50 }}>\r\n            <div className=\"performance-bar-container\">\r\n              <div\r\n                className=\"performance-bar small\"\r\n                style={{\r\n                  width: `${performance * 100}%`,\r\n                  transition: 'background-color 800ms',\r\n                  backgroundColor: colorForPerformance(performance),\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (props: Omit<Props, 'setPerformance'>) => (\r\n  <RuleContext.Consumer>\r\n    {(setPerformance: (performance: number) => void) => (\r\n      <Requirement\r\n        {...props}\r\n        setPerformance={setPerformance}\r\n      />\r\n    )}\r\n  </RuleContext.Consumer>\r\n);\r\n","/**\r\n *   0 - 33% major This is different from the *minor* threshold which is at 100% instead of 66%. The reason for this is that the minor threshold being at 75% and then 75%-100% being minor - max is that this would suggest going for max is best while this is not always the case. Something like Crusader Strike (with the Crusader's Might talent) has a recommended cast efficiency of 35% *because* you should only cast it enough to benefit you, more than that would be good but not 100% cast efficiency as then you're losing healing.\r\n * 33% - 66% average\r\n * 66% - 99% minor\r\n * 100% good (no issue)\r\n * @param actual\r\n * @param minor\r\n * @param average\r\n * @param major\r\n * @returns {number}\r\n */\r\nfunction performanceForLessThanThresholds(actual, { minor, average, major }) {\r\n  if (actual < major) {\r\n    // major issue\r\n    return 0.333 * actual / major;\r\n  } else if (actual < average) {\r\n    // average issue (between major and average issue)\r\n    return 0.333 + 0.333 * ((actual - major) / (average - major));\r\n  } else if (actual < minor) {\r\n    // minor issue (between average and minor issue)\r\n    return 0.666 + 0.333 * ((actual - average) / (minor - average));\r\n  } else {\r\n    // no issue\r\n    return 1;\r\n  }\r\n}\r\nfunction performanceForGreaterThanThresholds(actual, { minor, average, major }) {\r\n  if (actual > major) {\r\n    // major issue\r\n    return 0.333 * major / actual;\r\n  } else if (actual > average) {\r\n    // average issue (between major and average issue)\r\n    return 0.666 - 0.333 * ((actual - average) / (major - average));\r\n  } else if (actual > minor) {\r\n    // minor issue (between average and minor issue)\r\n    return 1 - 0.333 * ((actual - minor) / (average - minor));\r\n  } else {\r\n    // no issue\r\n    return 1;\r\n  }\r\n}\r\nexport default function performanceForThresholds(thresholds) {\r\n  if (thresholds.isGreaterThan) {\r\n    if (typeof thresholds.isGreaterThan === 'object') {\r\n      return performanceForGreaterThanThresholds(thresholds.actual, thresholds.isGreaterThan);\r\n    } else {\r\n      return thresholds.isGreaterThan / thresholds.actual;\r\n    }\r\n  } else if (thresholds.isLessThan) {\r\n    if (typeof thresholds.isLessThan === 'object') {\r\n      return performanceForLessThanThresholds(thresholds.actual, thresholds.isLessThan);\r\n    } else {\r\n      return thresholds.actual / thresholds.isLessThan;\r\n    }\r\n  } else if (thresholds.isEqual !== undefined) {\r\n    return thresholds.actual !== thresholds.isEqual ? 1 : 0;\r\n  } else {\r\n    throw new Error('Failed to recognize threshold type');\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport './Checklist.scss';\r\n\r\nconst Checklist = props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <ul className=\"checklist\">\r\n      {!children && (\r\n        <li>\r\n          <div className=\"alert alert-danger\">\r\n            <Trans id=\"shared.checklist.missingChecklist\">The checklist is not yet available for this spec. See <a href=\"https://github.com/WoWAnalyzer/WoWAnalyzer\">GitHub</a> or join us on <a href=\"https://discord.gg/AxphPxU\">Discord</a> if you're interested in contributing this.</Trans>\r\n          </div>\r\n        </li>\r\n      )}\r\n\r\n      {children}\r\n    </ul>\r\n  );\r\n};\r\n\r\nChecklist.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Checklist;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nimport Rule from './Rule';\r\nimport Requirement from './Requirement';\r\n\r\nclass PreparationRule extends React.PureComponent {\r\n\r\n  static propTypes = {\r\n    children: PropTypes.node,\r\n    thresholds: PropTypes.object.isRequired,\r\n  };\r\n\r\n  renderPotionRequirements() {\r\n    const { thresholds } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.combatPotionsUsed\">Combat potions used</Trans>}\r\n          thresholds={thresholds.potionsUsed}\r\n        />\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.highQualityCombatPotionsUsed\">High quality combat potions used</Trans>}\r\n          thresholds={thresholds.bestPotionUsed}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  renderEnchantRequirements() {\r\n    const { thresholds } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.enchanted\">All items enchanted</Trans>}\r\n          thresholds={thresholds.itemsEnchanted}\r\n        />\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.enchantedHigh\">Using high quality enchants</Trans>}\r\n          thresholds={thresholds.itemsBestEnchanted}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  renderWeaponEnhancementRequirements() {\r\n    const { thresholds } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans>All weapons enhanced (oils/stones)</Trans>}\r\n          thresholds={thresholds.weaponsEnhanced}\r\n        />\r\n        <Requirement\r\n          name={<Trans>Using high quality weapon enhancements</Trans>}\r\n          thresholds={thresholds.bestWeaponEnhancements}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  renderFlaskRequirements() {\r\n    const { thresholds } = this.props;\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.flaskHigh\">High quality flask used</Trans>}\r\n          thresholds={thresholds.higherFlaskPresent}\r\n        />\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.flask\">Flask used</Trans>}\r\n          thresholds={thresholds.flaskPresent}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n  renderFoodRequirements() {\r\n    const { thresholds } = this.props;\r\n    return (\r\n      <>\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.foodHigh\">High quality food used</Trans>}\r\n          thresholds={thresholds.higherFoodPresent}\r\n        />\r\n        <Requirement\r\n          name={<Trans id=\"shared.modules.features.checklist.food\">Food used</Trans>}\r\n          thresholds={thresholds.foodPresent}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <Rule\r\n        name={<Trans id=\"shared.modules.features.checklist.wellPrepared\">Be well prepared</Trans>}\r\n        description={<Trans id=\"shared.modules.features.checklist.wellPreparedDetails\">Being well prepared with food, flasks, potions and enchants is an easy way to improve your performance.</Trans>}\r\n      >\r\n        {this.renderEnchantRequirements()}\r\n        {this.renderWeaponEnhancementRequirements()}\r\n        {this.renderPotionRequirements()}\r\n        {this.renderFlaskRequirements()}\r\n        {this.renderFoodRequirements()}\r\n        {children}\r\n      </Rule>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreparationRule;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SpellLink from 'common/SpellLink';\r\nimport { captureException } from 'common/errorLogger';\r\n\r\nimport Requirement from './Requirement';\r\n\r\n/**\r\n * This is a common requirement for all checklists that uses settings for CastEfficiency to create a Requirement. It shows the spell and your efficiency as performance depending on the configured cast efficiency efficiency thresholds.\r\n *\r\n * This requirement is automatically disabled if the ability's CastEfficiency suggestion is disabled (i.e. if the ability's castEfficiency: { suggestion } is unset or false), or the ability is disabled completely. If you set `onlyWithSuggestion` to `false` in the object when creating this requirement you can change this behavior to always show if the ability is enabled, regardless of the CastEfficiency suggestion property being set.\r\n */\r\nclass GenericCastEfficiencyRequirement extends React.PureComponent {\r\n  static propTypes = {\r\n    spell: PropTypes.number.isRequired,\r\n    name: PropTypes.node,\r\n    castEfficiency: PropTypes.shape({\r\n      efficiency: PropTypes.number.isRequired,\r\n      gotMaxCasts: PropTypes.bool.isRequired,\r\n      recommendedEfficiency: PropTypes.number.isRequired,\r\n      averageIssueEfficiency: PropTypes.number.isRequired,\r\n      majorIssueEfficiency: PropTypes.number.isRequired,\r\n      casts: PropTypes.any,\r\n      maxCasts: PropTypes.any,\r\n    }).isRequired,\r\n    isMaxCasts: PropTypes.bool,\r\n  };\r\n\r\n  get thresholds() {\r\n    if (!this.props.castEfficiency) {\r\n      captureException(new Error(`GenericCastEfficiencyRequirement requires that you pass the castEfficiency object yourself. Spell: ${this.props.spell}`));\r\n      return null;\r\n    }\r\n\r\n    if(this.props.isMaxCasts) {\r\n      const {\r\n        casts,\r\n        maxCasts,\r\n      } = this.props.castEfficiency;\r\n\r\n      return {\r\n        actual: casts,\r\n        max: maxCasts,\r\n        isLessThan: {\r\n          minor: maxCasts,\r\n          average: maxCasts - 1,\r\n          major: maxCasts - 2,\r\n        },\r\n        style: 'number',\r\n      };\r\n    } else {\r\n      const {\r\n        efficiency,\r\n        gotMaxCasts,\r\n        recommendedEfficiency: minor,\r\n        averageIssueEfficiency: average,\r\n        majorIssueEfficiency: major,\r\n      } = this.props.castEfficiency;\r\n\r\n      return {\r\n        actual: gotMaxCasts ? 1 : efficiency,\r\n        isLessThan: {\r\n          minor,\r\n          average,\r\n          major,\r\n        },\r\n        style: 'percentage',\r\n      };\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { spell, name, ...others } = this.props;\r\n\r\n    const thresholds = this.thresholds;\r\n    if (!thresholds) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Requirement\r\n        name={name || <SpellLink id={spell} />}\r\n        thresholds={thresholds}\r\n        {...others}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenericCastEfficiencyRequirement;\r\n","import React from 'react';\r\n\r\nimport SPELLS from 'common/SPELLS/index';\r\nimport Panel from 'interface/others/Panel';\r\nimport CooldownIcon from 'interface/icons/Cooldown';\r\nimport CooldownOverview from 'interface/others/CooldownOverview';\r\nimport Analyzer, { SELECTED_PLAYER, Options } from 'parser/core/Analyzer';\r\nimport CASTS_THAT_ARENT_CASTS from 'parser/core/CASTS_THAT_ARENT_CASTS';\r\nimport EventHistory from 'parser/shared/modules/EventHistory';\r\nimport Events, { AnyEvent, AbsorbedEvent, ApplyBuffEvent, ApplyDebuffEvent, CastEvent, DamageEvent, HealEvent, RemoveBuffEvent, RemoveDebuffEvent, SummonEvent, DeathEvent } from 'parser/core/Events';\r\nimport EventFilter, { SELECTED_PLAYER_PET } from 'parser/core/EventFilter';\r\nimport { t, Trans } from '@lingui/macro';\r\nimport { i18n } from '@lingui/core';\r\n\r\nconst debug = false;\r\n\r\nexport enum BUILT_IN_SUMMARY_TYPES {\r\n  HEALING = 'HEALING',\r\n  OVERHEALING = 'OVERHEALING',\r\n  ABSORBED = 'ABSORBED',\r\n  ABSORBS_APPLIED = 'ABSORBS_APPLIED',\r\n  MANA = 'MANA',\r\n  DAMAGE = 'DAMAGE',\r\n}\r\n\r\ntype TrackedEvent = CastEvent | HealEvent | AbsorbedEvent | DamageEvent | ApplyBuffEvent;\r\n\r\nexport type SummaryDef = {\r\n  label: string,\r\n  tooltip: string,\r\n  value: number | string,\r\n}\r\n\r\nexport type CooldownSpell = {\r\n  spell: any,\r\n  summary: Array<BUILT_IN_SUMMARY_TYPES | SummaryDef>,\r\n  startBufferFilter?: EventFilter<any>,\r\n  startBufferMS?: number,\r\n  startBufferEvents?: number,\r\n  petID?: number,\r\n  duration?: number,\r\n};\r\n\r\nexport type TrackedCooldown = CooldownSpell & {\r\n  start: number,\r\n  end: number | null,\r\n  events: AnyEvent[],\r\n};\r\n\r\nclass CooldownThroughputTracker extends Analyzer {\r\n  static dependencies = {\r\n    eventHistory: EventHistory,\r\n  };\r\n  protected eventHistory!: EventHistory;\r\n\r\n  static cooldownSpells: CooldownSpell[] = [\r\n    {\r\n      spell: SPELLS.INNERVATE,\r\n      summary: [\r\n        BUILT_IN_SUMMARY_TYPES.HEALING,\r\n        BUILT_IN_SUMMARY_TYPES.OVERHEALING,\r\n        BUILT_IN_SUMMARY_TYPES.MANA,\r\n      ],\r\n    },\r\n  ];\r\n\r\n  static ignoredSpells: number[] = [\r\n    // General spells that you don't want to see in the Cooldown overview (could be boss mechanics etc.) should belong here.\r\n    // If you want to add some spells specific to your spec, redefine this array in your spec CooldownThroughputTracker similarly to cooldownSpells (see Marksmanship Hunter for example)\r\n    ...CASTS_THAT_ARENT_CASTS,\r\n  ];\r\n\r\n  static castCooldowns: CooldownSpell[] = [\r\n    // Some cooldowns cannot be tracked by a buff such as the Destruction 'Summon Infernal'. This is usually because they are temporary pet summons.\r\n    // If you want to add some spells specific to your spec, redefine this array in your spec CooldownThroughputTracker similarly to cooldownSpells (see Destruction Warlock for example)\r\n  ];\r\n\r\n  pastCooldowns: TrackedCooldown[] = [];\r\n  activeCooldowns: TrackedCooldown[] = [];\r\n\r\n  constructor(options: Options){\r\n    super(options);\r\n    this.addEventListener(Events.fightend, this.onFightend);\r\n    this.addEventListener(Events.cast.by(SELECTED_PLAYER), this.onCast);\r\n    this.addEventListener(Events.heal.by(SELECTED_PLAYER), this.onHeal);\r\n    this.addEventListener(Events.absorbed.by(SELECTED_PLAYER), this.onAbsorb);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER), this.onDamage);\r\n    this.addEventListener(Events.damage.by(SELECTED_PLAYER_PET), this.onPetDamage);\r\n    this.addEventListener(Events.applybuff.by(SELECTED_PLAYER), this.onApplyBuff);\r\n    this.addEventListener(Events.applybuff.to(SELECTED_PLAYER), this.onApplyBuffToPlayer);\r\n    this.addEventListener(Events.removebuff.to(SELECTED_PLAYER), this.onRemoveBuff);\r\n    this.addEventListener(Events.applydebuff.by(SELECTED_PLAYER), this.onApplyDebuff);\r\n    this.addEventListener(Events.removedebuff.by(SELECTED_PLAYER), this.onRemoveDebuff);\r\n    this.addEventListener(Events.summon.by(SELECTED_PLAYER), this.onSummon);\r\n    this.addEventListener(Events.death.to(SELECTED_PLAYER_PET), this.onPetDeath);\r\n  }\r\n\r\n  startCooldown(event: CastEvent | ApplyBuffEvent | ApplyDebuffEvent, isCastCooldown: boolean = false) {\r\n    const spellId = event.ability.guid;\r\n    const ctor = this.constructor as typeof CooldownThroughputTracker;\r\n    let cooldownSpell: CooldownSpell | undefined;\r\n    if (isCastCooldown) {\r\n      cooldownSpell = ctor.castCooldowns.find(cooldownSpell => cooldownSpell.spell.id === spellId);\r\n    } else {\r\n      cooldownSpell = ctor.cooldownSpells.find(cooldownSpell => cooldownSpell.spell.id === spellId);\r\n    }\r\n\r\n    if (!cooldownSpell) {\r\n      return;\r\n    }\r\n\r\n    const cooldown = this.addCooldown(cooldownSpell, event.timestamp);\r\n    this.activeCooldowns.push(cooldown);\r\n    debug && console.log(`%cCooldown started: ${cooldownSpell.spell.name}`, 'color: green', cooldown);\r\n  }\r\n\r\n  addCooldown(cooldownSpell: CooldownSpell, timestamp: number): TrackedCooldown {\r\n    let events: AnyEvent[] = [];\r\n    let start = timestamp;\r\n    const startBufferMS = cooldownSpell.startBufferMS;\r\n    if (startBufferMS || cooldownSpell.startBufferEvents) {\r\n      // Default to only including cast events by the player\r\n      const filter = cooldownSpell.startBufferFilter || Events.cast.by(SELECTED_PLAYER);\r\n      events = this.eventHistory.last(cooldownSpell.startBufferEvents, startBufferMS, filter);\r\n      if (startBufferMS) {\r\n        start = timestamp - startBufferMS;\r\n      } else {\r\n        // If filtering by only event count, set the start timestamp to the oldest event found\r\n        start = (events[0] && events[0].timestamp) || start;\r\n      }\r\n    }\r\n    const cooldown = {\r\n      ...cooldownSpell,\r\n      start: start,\r\n      end: cooldownSpell.duration ? cooldownSpell.duration * 1000 + timestamp : null,\r\n      events: events,\r\n    };\r\n\r\n    this.pastCooldowns.push(cooldown);\r\n    return cooldown;\r\n  }\r\n\r\n  endCooldown(event: RemoveDebuffEvent | RemoveBuffEvent) {\r\n    const spellId = event.ability.guid;\r\n    const index = this.activeCooldowns.findIndex(cooldown => cooldown.spell.id === spellId);\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    const cooldown = this.activeCooldowns[index];\r\n    cooldown.end = event.timestamp;\r\n    this.activeCooldowns.splice(index, 1);\r\n    debug && console.log(`%cCooldown ended: ${cooldown.spell.name}`, 'color: red', cooldown);\r\n  }\r\n  \r\n  onFightend() {\r\n    this.activeCooldowns.forEach((cooldown) => {\r\n      cooldown.end = this.owner.fight.end_time;\r\n      debug && console.log(`%cCooldown ended: ${cooldown.spell.name}`, 'color: red', cooldown);\r\n    });\r\n    this.activeCooldowns = [];\r\n  }\r\n\r\n  // region Event tracking\r\n  trackEvent(event: TrackedEvent) {\r\n    const ctor = this.constructor as typeof CooldownThroughputTracker;\r\n    if (ctor.castCooldowns.length) {\r\n      this.activeCooldowns = this.activeCooldowns.filter(cooldown => !cooldown.end || event.timestamp < cooldown.end);\r\n    }\r\n\r\n    this.activeCooldowns.forEach((cooldown) => {\r\n      cooldown.events.push(event);\r\n    });\r\n  }\r\n\r\n  onCast(event: CastEvent) {\r\n    const ctor = this.constructor as typeof CooldownThroughputTracker;\r\n    const spellId = event.ability.guid;\r\n    if (ctor.ignoredSpells.includes(spellId)) {\r\n      return;\r\n    }\r\n    if (ctor.castCooldowns.findIndex(cooldown => cooldown.spell.id === spellId) !== -1) {\r\n      this.startCooldown(event, true);\r\n    } else {\r\n      this.trackEvent(event);\r\n    }\r\n  }\r\n\r\n  onHeal(event: HealEvent) {\r\n    this.trackEvent(event);\r\n  }\r\n\r\n  onAbsorb(event: AbsorbedEvent) {\r\n    this.trackEvent(event);\r\n  }\r\n\r\n  onDamage(event: DamageEvent) {\r\n    this.trackEvent(event);\r\n  }\r\n\r\n  onPetDamage(event: DamageEvent) {\r\n    this.trackEvent(event);\r\n  }\r\n\r\n  onApplyBuff(event: ApplyBuffEvent) {\r\n    this.trackEvent(event);\r\n  }\r\n\r\n  onApplyBuffToPlayer(event: ApplyBuffEvent) {\r\n    this.startCooldown(event);\r\n  }\r\n\r\n  onRemoveBuff(event: RemoveBuffEvent) {\r\n    this.endCooldown(event);\r\n  }\r\n\r\n  onApplyDebuff(event: ApplyDebuffEvent) {\r\n    this.startCooldown(event);\r\n  }\r\n\r\n  onRemoveDebuff(event: RemoveDebuffEvent) {\r\n    this.endCooldown(event);\r\n  }\r\n\r\n  onSummon(event: SummonEvent) {\r\n    const spellId = event.ability.guid;\r\n    const ctor = this.constructor as typeof CooldownThroughputTracker;\r\n    const cooldownSpell = ctor.cooldownSpells.find(cooldownSpell => cooldownSpell.spell.id === spellId);\r\n    if (!cooldownSpell) {\r\n      return;\r\n    }\r\n\r\n    // This fixes weirdness were you can get the pet and the buff at the same time *cough yu'lon*\r\n    const index = this.activeCooldowns.findIndex(cooldown => cooldown.spell.id === spellId);\r\n    if (index !== -1) {\r\n      return;\r\n    }\r\n\r\n    const cooldown = this.addCooldown(cooldownSpell, event.timestamp);\r\n    cooldown.petID = event.targetID;\r\n    this.activeCooldowns.push(cooldown);\r\n    debug && console.log(`%cCooldown started: ${cooldownSpell.spell.name}`, 'color: green', cooldown);\r\n  }\r\n\r\n  onPetDeath(event: DeathEvent) {\r\n    const petID = event.targetID;\r\n    const index = this.activeCooldowns.findIndex(cooldown => cooldown.petID === petID);\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    const cooldown = this.activeCooldowns[index];\r\n    cooldown.end = event.timestamp;\r\n    this.activeCooldowns.splice(index, 1);\r\n    debug && console.log(`%cCooldown ended: ${cooldown.spell.name}`, 'color: red', cooldown);\r\n  }\r\n\r\n  // endregion\r\n\r\n  tab() {\r\n    return {\r\n    title: i18n._(t('shared.cooldownThroughputTracker.tab')`Cooldowns`),\r\n      icon: CooldownIcon,\r\n      url: 'cooldowns',\r\n      render: () => (\r\n        <Panel\r\n          title={<Trans id=\"shared.cooldownThroughputTracker.tab.title\">Throughput cooldowns</Trans>}\r\n          explanation={(\r\n            <Trans id=\"shared.cooldownThroughputTracker.tab.explanation\">\r\n              This shows the effectiveness of your throughput cooldowns and your cast behavior during them. Click on <i>More</i> to see details such as the delay between casting spells and the healing or damage done with them. Take a look at the timeline for a different kind of view of your casts during buffs.\r\n            </Trans>\r\n          )}\r\n          pad={false}\r\n        >\r\n          <CooldownOverview\r\n            fightStart={this.owner.fight.start_time - this.owner.fight.offset_time}\r\n            fightEnd={this.owner.fight.end_time}\r\n            cooldowns={this.pastCooldowns}\r\n            applyTimeFilter={this.owner.applyTimeFilter}\r\n          />\r\n        </Panel>\r\n      ),\r\n    };\r\n  }\r\n}\r\n\r\nexport default CooldownThroughputTracker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport SPELLS from 'common/SPELLS';\r\nimport SpellLink from 'common/SpellLink';\r\nimport Icon from 'common/Icon';\r\nimport { formatThousands, formatNumber, formatPercentage, formatDuration } from 'common/format';\r\nimport { TooltipElement } from 'common/Tooltip';\r\nimport RESOURCE_TYPES from 'game/RESOURCE_TYPES';\r\n\r\nimport { EventType } from 'parser/core/Events';\r\nimport { BUILT_IN_SUMMARY_TYPES } from 'parser/shared/modules/CooldownThroughputTracker';\r\n\r\nimport './Cooldown.css';\r\nimport { Trans } from '@lingui/macro';\r\n\r\nclass Cooldown extends React.Component {\r\n  static propTypes = {\r\n    fightStart: PropTypes.number.isRequired,\r\n    fightEnd: PropTypes.number.isRequired,\r\n    cooldown: PropTypes.shape({\r\n      ability: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        icon: PropTypes.string.isRequired,\r\n      }),\r\n      start: PropTypes.number.isRequired,\r\n      end: PropTypes.number,\r\n      events: PropTypes.arrayOf(PropTypes.shape({\r\n        type: PropTypes.string.isRequired,\r\n      })).isRequired,\r\n      summary: PropTypes.array.isRequired,\r\n      spell: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        icon: PropTypes.string,\r\n        name: PropTypes.string,\r\n      }),\r\n    }).isRequired,\r\n    applyTimeFilter: PropTypes.func,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showCastEvents: false,\r\n      showAllEvents: false,\r\n    };\r\n    this.handleExpandClick = this.handleExpandClick.bind(this);\r\n    this.handleShowHealsClick = this.handleShowHealsClick.bind(this);\r\n  }\r\n\r\n  handleExpandClick() {\r\n    this.setState({\r\n      showCastEvents: !this.state.showCastEvents,\r\n      showAllEvents: false,\r\n    });\r\n  }\r\n  handleShowHealsClick() {\r\n    this.setState({\r\n      showAllEvents: !this.state.showAllEvents,\r\n    });\r\n  }\r\n\r\n  groupHeals(events) {\r\n    let lastHeal = null;\r\n    return events.reduce((results, event) => {\r\n      if (event.type === EventType.Cast) {\r\n        results.push(event);\r\n      } else if (event.type === EventType.Heal) {\r\n        const spellId = event.ability.guid;\r\n        if (lastHeal && lastHeal.event.ability.guid === spellId) {\r\n          lastHeal.count += 1;\r\n          lastHeal.amount += event.amount;\r\n          lastHeal.absorbed += (event.absorbed || 0);\r\n          lastHeal.overheal += (event.overheal || 0);\r\n        } else {\r\n          const heal = {\r\n            event,\r\n            amount: event.amount,\r\n            absorbed: event.absorbed || 0,\r\n            overheal: event.overheal || 0,\r\n            count: 1,\r\n          };\r\n          results.push(heal);\r\n          lastHeal = heal;\r\n        }\r\n      }\r\n      return results;\r\n    }, []);\r\n  }\r\n\r\n  calculateHealingStatistics(cooldown) {\r\n    let healingDone = 0;\r\n    let overhealingDone = 0;\r\n    cooldown.events.filter(event => event.type === EventType.Heal || event.type === EventType.Absorbed).forEach((event) => {\r\n      healingDone += event.amount + (event.absorbed || 0);\r\n      overhealingDone += event.overheal || 0;\r\n    });\r\n\r\n    return {\r\n      healingDone,\r\n      overhealingDone,\r\n    };\r\n  }\r\n\r\n  calculateDamageStatistics(cooldown) {\r\n    const damageDone = cooldown.events.reduce((acc, event) => event.type === EventType.Damage ? acc + ((event.amount || 0) + (event.absorbed || 0)) : acc, 0);\r\n\r\n    return { damageDone };\r\n  }\r\n\r\n  render() {\r\n    const { cooldown, fightStart, fightEnd } = this.props;\r\n\r\n    let healingStatistics = null;\r\n\r\n    const start = cooldown.start;\r\n    const end = cooldown.end || fightEnd;\r\n\r\n    /* eslint-disable no-script-url */\r\n    /* eslint-disable jsx-a11y/anchor-is-valid */\r\n    return (\r\n      <article>\r\n        <figure>\r\n          <SpellLink id={cooldown.spell.id} icon={false}>\r\n            <Icon\r\n              icon={cooldown.spell.icon}\r\n              alt={cooldown.spell.name}\r\n            />\r\n          </SpellLink>\r\n        </figure>\r\n        <div className=\"row\" style={{ width: '100%' }}>\r\n          <div className={this.state.showAllEvents ? 'col-md-12' : 'col-md-6'}>\r\n            <header style={{ marginTop: 5, fontSize: '1.25em', marginBottom: '.1em' }}>\r\n              <SpellLink id={cooldown.spell.id} icon={false} /> ({formatDuration((start - fightStart) / 1000)} -&gt; {formatDuration((end - fightStart) / 1000)})\r\n                &nbsp;<TooltipElement content={<Trans id=\"shared.cooldownThroughputTracker.cooldown.events.tooltip\">Filter events to the cooldown window.</Trans>}>\r\n                <a href=\"javascript:\" onClick={() => this.props.applyTimeFilter(start - fightStart, end - fightStart)}><Trans id=\"shared.cooldownThroughputTracker.cooldown.events\">Filter events</Trans></a>\r\n              </TooltipElement>\r\n            </header>\r\n\r\n            {!this.state.showCastEvents && (\r\n              <div>\r\n                {\r\n                  cooldown.events\r\n                    .filter(event => event.type === EventType.Cast && event.ability.guid !== 1)\r\n                    .map((event, i) => (\r\n                      <SpellLink key={`${event.ability.guid}-${event.timestamp}-${i}`} id={event.ability.guid} icon={false}>\r\n                        <Icon icon={event.ability.abilityIcon} alt={event.ability.name} style={{ height: 23, marginRight: 4 }} />\r\n                      </SpellLink>\r\n                    ))\r\n                }\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-12\">\r\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                    <a href=\"javascript:void(0)\" onClick={this.handleExpandClick} style={{ marginTop: '.2em' }}><Trans id=\"shared.cooldownThroughputTracker.cooldown.expand\">More</Trans></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.showCastEvents && !this.state.showAllEvents && (\r\n              <div className=\"container-fluid\">\r\n                {\r\n                  cooldown.events\r\n                    .filter(event => event.type === EventType.Cast && event.ability.guid !== 1)\r\n                    .map((event, i) => (\r\n                      <div className=\"row\" key={i}>\r\n                        <div className=\"col-xs-2 text-right\" style={{ padding: 0 }}>\r\n                          +{((event.timestamp - cooldown.start) / 1000).toFixed(3)}\r\n                        </div>\r\n                        <div className=\"col-xs-10\">\r\n                          <SpellLink key={`${event.ability.guid}-${event.timestamp}-${i}`} id={event.ability.guid} icon={false}>\r\n                            <Icon icon={event.ability.abilityIcon} alt={event.ability.name} style={{ height: 23, marginRight: 4 }} /> {event.ability.name}\r\n                          </SpellLink>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                }\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-12\">\r\n                    <a href=\"javascript:\" onClick={this.handleShowHealsClick} style={{ marginTop: '.2em' }}><Trans id=\"shared.cooldownThroughputTracker.cooldown.expand.again\">Even more</Trans></a>{' | '}{/* eslint-disable-line jsx-a11y/anchor-is-valid */}\r\n                    <a href=\"javascript:\" onClick={this.handleExpandClick} style={{ marginTop: '.2em' }}><Trans id=\"shared.cooldownThroughputTracker.cooldown.shrink\">Show less</Trans></a>{/* eslint-disable-line jsx-a11y/anchor-is-valid */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {this.state.showCastEvents && this.state.showAllEvents && (\r\n              <div className=\"container-fluid\">\r\n                {this.groupHeals(cooldown.events.filter(event => (event.type === EventType.Cast || event.type === EventType.Heal) && event.ability.guid !== 1)).map((heal, i) => {\r\n                  const event = heal.event || heal;\r\n                  return (\r\n                    <div className=\"row\" key={i}>\r\n                      <div className=\"col-xs-1 text-right\" style={{ padding: 0 }}>\r\n                        +{((event.timestamp - cooldown.start) / 1000).toFixed(3)}\r\n                      </div>\r\n                      <div className={`col-xs-4 ${event.type === EventType.Heal ? 'col-xs-offset-1' : ''}`}>\r\n                        <SpellLink key={`${event.ability.guid}-${event.timestamp}-${i}`} id={event.ability.guid} icon={false}>\r\n                          <Icon icon={event.ability.abilityIcon} alt={event.ability.name} style={{ height: 23, marginRight: 4 }} /> {event.ability.name}\r\n                        </SpellLink>\r\n                        {event.type === EventType.Heal && (\r\n                          <span>\r\n                            <span className=\"grouped-heal-meta amount\"> x {heal.count}</span>\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                      {event.type === EventType.Heal && (\r\n                        <div className=\"col-xs-4\">\r\n                          <span className=\"grouped-heal-meta healing\"> +{formatThousands(heal.amount + heal.absorbed)}</span>\r\n                          <span className=\"grouped-heal-meta overhealing\"> (O: {formatThousands(heal.overheal)})</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n                <a href=\"javascript:\" onClick={this.handleShowHealsClick} style={{ marginTop: '.2em' }}><Trans id=\"shared.cooldownThroughputTracker.cooldown.shrink\">Show less</Trans></a>{' | '}{/* eslint-disable-line jsx-a11y/anchor-is-valid */}\r\n                <a href=\"javascript:\" onClick={this.handleExpandClick} style={{ marginTop: '.2em' }}><Trans id=\"shared.cooldownThroughputTracker.cooldown.simple\">Show simple</Trans></a>{/* eslint-disable-line jsx-a11y/anchor-is-valid */}\r\n              </div>\r\n            )}\r\n          </div>\r\n          {!this.state.showAllEvents && (\r\n            <div className=\"col-md-6\">\r\n              <div className=\"row\">\r\n                {cooldown.summary.map((item) => {\r\n                  switch (item) {\r\n                    case BUILT_IN_SUMMARY_TYPES.HEALING:\r\n                      healingStatistics = healingStatistics || this.calculateHealingStatistics(cooldown);\r\n                      return (\r\n                        <div className=\"col-md-4 text-center\" key=\"healing\">\r\n                          <div style={{ fontSize: '2em' }}>{formatNumber(healingStatistics.healingDone)}</div>\r\n                          <TooltipElement content={<Trans id=\"shared.cooldownThroughputTracker.cooldown.healing.tooltip\">This includes all healing that occured while the buff was up, even if it was not triggered by spells cast inside the buff duration. Any delayed healing such as HOTs, Absorbs and Atonements will stop contributing to the healing done when the cooldown buff expires, so this value is lower for any specs with such abilities.</Trans>}>\r\n                            <Trans id=\"shared.cooldownThroughputTracker.cooldown.healing\">healing ({formatNumber(healingStatistics.healingDone / (end - start) * 1000)} HPS)</Trans>\r\n                          </TooltipElement>\r\n                        </div>\r\n                      );\r\n                    case BUILT_IN_SUMMARY_TYPES.OVERHEALING:\r\n                      healingStatistics = healingStatistics || this.calculateHealingStatistics(cooldown);\r\n                      return (\r\n                        <div className=\"col-md-4 text-center\" key=\"overhealing\">\r\n                          <div style={{ fontSize: '2em' }}>{formatPercentage(healingStatistics.overhealingDone / (healingStatistics.healingDone + healingStatistics.overhealingDone))}%</div>\r\n                          <TooltipElement content={<Trans id=\"shared.cooldownThroughputTracker.cooldown.overhealing.tooltip\">This includes all healing that occured while the buff was up, even if it was not triggered by spells cast inside the buff duration. Any delayed healing such as HOTs, Absorbs and Atonements will stop contributing to the healing done when the cooldown buff expires, so this value is lower for any specs with such abilities.</Trans>}>\r\n                            <Trans id=\"shared.cooldownThroughputTracker.cooldown.overhealing\">overhealing</Trans>\r\n                          </TooltipElement>\r\n                        </div>\r\n                      );\r\n                    case BUILT_IN_SUMMARY_TYPES.ABSORBED: {\r\n                      const total = cooldown.events.filter(event => event.type === EventType.Absorbed).reduce((total, event) => total + (event.amount || 0), 0);\r\n                      return (\r\n                        <div className=\"col-md-4 text-center\" key=\"absorbed\">\r\n                          <div style={{ fontSize: '2em' }}>{formatNumber(total)}</div>\r\n                          <TooltipElement content={<Trans id=\"shared.cooldownThroughputTracker.cooldown.absorbed.tooltip\">This includes all damage absorbed that occured while the buff was up, even if it was not triggered by spells cast inside the buff duration.</Trans>}>\r\n                            <Trans id=\"shared.cooldownThroughputTracker.cooldown.absorbed\">damage absorbed</Trans>\r\n                          </TooltipElement>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    case BUILT_IN_SUMMARY_TYPES.ABSORBS_APPLIED: {\r\n                      const total = cooldown.events.filter(event => event.type === EventType.ApplyBuff).reduce((total, event) => total + (event.absorb || 0), 0);\r\n                      return (\r\n                        <div className=\"col-md-4 text-center\" key=\"absorbs-applied\">\r\n                          <div style={{ fontSize: '2em' }}>{formatNumber(total)}</div>\r\n                          <TooltipElement content={<Trans id=\"shared.cooldownThroughputTracker.cooldown.absorbApplied.tooltip\">The total amount of absorb shields applied during the buff.</Trans>}>\r\n                            <Trans id=\"shared.cooldownThroughputTracker.cooldown.absorbApplied\">absorb applied</Trans>\r\n                          </TooltipElement>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    case BUILT_IN_SUMMARY_TYPES.MANA: {\r\n                      let manaUsed = 0;\r\n                      if (cooldown.spell.id === SPELLS.INNERVATE.id) {\r\n                        manaUsed = cooldown.events.filter(event => event.type === EventType.Cast).reduce((total, event) => total + (event.rawResourceCost[RESOURCE_TYPES.MANA.id] || 0), 0);\r\n                      } else {\r\n                        manaUsed = cooldown.events.filter(event => event.type === EventType.Cast).reduce((total, event) => total + (event.resourceCost[RESOURCE_TYPES.MANA.id] || 0), 0);\r\n                      }\r\n                      return (\r\n                        <Trans id=\"shared.cooldownThroughputTracker.cooldown.manaUsed\" render=\"div\" className=\"col-md-4 text-center\" key=\"mana\">\r\n                          <div style={{ fontSize: '2em' }}>{formatNumber(manaUsed)}</div>\r\n                          mana used\r\n                        </Trans>\r\n                      );\r\n                    }\r\n                    case BUILT_IN_SUMMARY_TYPES.DAMAGE: {\r\n                      const damageStatistics = this.calculateDamageStatistics(cooldown);\r\n                      return (\r\n                        <div className=\"col-md-4 text-center\" key=\"damage\">\r\n                          <div style={{ fontSize: '2em' }}>{formatNumber(damageStatistics.damageDone)}</div>\r\n                          <TooltipElement content={<Trans id=\"shared.cooldownThroughputTracker.cooldown.damageDone.tooltip\">This number represents the total amount of damage done during the duration of this cooldown, any damage done by DOTs after the effect of this cooldown has exprired will not be included in this statistic.</Trans>}>\r\n                            <Trans id=\"shared.cooldownThroughputTracker.cooldown.damageDone\">damage ({formatNumber(damageStatistics.damageDone / (end - start) * 1000)} DPS)</Trans>\r\n                          </TooltipElement>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    default:\r\n                      // Custom\r\n                      return (\r\n                        <div className=\"col-md-4 text-center\" key={item.label}>\r\n                          <div style={{ fontSize: '2em' }}>{typeof item.value === 'string' ? item.value : formatNumber(item.value)}</div>\r\n                          <TooltipElement content={item.tooltip}>{item.label}</TooltipElement>\r\n                        </div>\r\n                      );\r\n                  }\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cooldown;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Cooldown from './Cooldown';\r\n\r\nconst CooldownOverview = ({ fightStart, fightEnd, cooldowns, applyTimeFilter }) => (\r\n  <ul className=\"list\">\r\n    {cooldowns.map(cooldown => (\r\n      <li key={`${cooldown.spell.id}-${cooldown.start}`} className=\"item clearfix\" style={{ padding: '10px 30px' }}>\r\n        <Cooldown cooldown={cooldown} fightStart={fightStart} fightEnd={fightEnd} applyTimeFilter={applyTimeFilter} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nCooldownOverview.propTypes = {\r\n  fightStart: PropTypes.number.isRequired,\r\n  fightEnd: PropTypes.number.isRequired,\r\n  cooldowns: PropTypes.arrayOf(PropTypes.shape({\r\n    ability: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      icon: PropTypes.string.isRequired,\r\n    }),\r\n    start: PropTypes.number.isRequired,\r\n    end: PropTypes.number,\r\n    events: PropTypes.arrayOf(PropTypes.shape({\r\n      type: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n  })).isRequired,\r\n  applyTimeFilter: PropTypes.func,\r\n};\r\n\r\nexport default CooldownOverview;\r\n","export default function colorForPerformance(performance: number) {\r\n  if (performance >= 1) {\r\n    return '#4ec04e';\r\n  } else if (performance > 0.666) {\r\n    return '#a6c34c';\r\n  } else if (performance > 0.5) {\r\n    return '#ffc84a';\r\n  } else if (performance > 0.333) {\r\n    return '#df7102';\r\n  } else {\r\n    return '#ac1f39';\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n// https://thenounproject.com/search/?q=dropdown&i=1871189\r\n// Dropdown by zalhan from the Noun Project\r\nconst Icon = ({ ...other }) => (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 9\" className=\"icon\" {...other}>\r\n      <path d=\"M14.0059397,2.26485497e-14 C15.1072288,2.26485497e-14 15.3722573,0.627746582 14.5881847,1.41182411 L8.70999225,7.29005337 C8.317902,7.68214607 7.67653023,7.6764822 7.29009898,7.29005337 L1.41183294,1.41182411 C0.632099139,0.632095183 0.894513756,2.26485497e-14 1.99406028,2.26485497e-14 L14.0059397,2.26485497e-14 Z\" />\r\n  </svg>\r\n);\r\n\r\nexport default Icon;\r\n","import React, {useState} from 'react';\r\nimport AnimateHeight from 'react-animate-height';\r\n\r\nimport './Expandable.scss';\r\n\r\ninterface Props {\r\n  header: React.ReactNode;\r\n  children: React.ReactNode;\r\n  element: React.ElementType;\r\n  className?: string;\r\n  expanded?: boolean;\r\n  inverseExpanded: () => void;\r\n}\r\n\r\nexport const Expandable = (props: Omit<Props, 'expanded'|'inverseExpanded'>) => {\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n  const handleToggle = () => {\r\n    setExpanded((prevExpanded: boolean) => !prevExpanded)\r\n  }\r\n\r\n  const { header, children, element: Element, className } = props;\r\n  \r\n  return (\r\n    <Element className={`expandable ${expanded ? 'expanded' : ''} ${className || ''}`}>\r\n      <div className=\"meta\" onClick={handleToggle}>\r\n        {header}\r\n      </div>\r\n      <AnimateHeight className=\"details\" height={expanded ? 'auto' : 0}>\r\n        {children}\r\n      </AnimateHeight>\r\n    </Element>\r\n  );\r\n}\r\n\r\nexport const ControlledExpandable = (props: Props) =>  {\r\n  const { header, children, element: Element, className } = props;\r\n\r\n  return (\r\n    <Element className={`expandable ${props.expanded ? 'expanded' : ''} ${className || ''}`}>\r\n      <div className=\"meta\" onClick={props.inverseExpanded}>\r\n        {header}\r\n      </div>\r\n      <AnimateHeight className=\"details\" height={props.expanded ? 'auto' : 0}>\r\n        {children}\r\n      </AnimateHeight>\r\n    </Element>\r\n  );\r\n}\r\n"],"sourceRoot":""}